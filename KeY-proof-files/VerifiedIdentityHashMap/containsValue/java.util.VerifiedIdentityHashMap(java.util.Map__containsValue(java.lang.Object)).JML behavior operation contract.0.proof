\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 26 16:20:04 CET 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../jre";

\javaSource "../../../src";

\include "../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Fri Nov 26 16:20:04 CET 2021
contract=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:containsValue(java.lang.Object)].JML behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.Map\\:\\:containsValue(java.lang.Object)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "cdego" ) (keyVersion "40b2d39292"))

(autoModeTime "109375")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,1,0,0,1,1"))
(rule "boolean_equal" (formula "1") (term "0,0,1,1,0,0,1,1"))
(rule "concrete_impl_1" (formula "1") (term "0,1,1,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(rule "concrete_or_2" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "elementOfSetMinus" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfAllLocs" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "concrete_and_1" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "elementOfFreshLocs" (formula "9") (term "0,0,0,0,0,1,0,1"))
(rule "neq_or_2" (formula "9") (term "0,0,0,1,0,1"))
(rule "concrete_or_1" (formula "9") (term "0,0,1,0,1"))
(rule "simplifyUpdate2" (formula "9"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_containsValue,savedHeapBefore_containsValue,_valueBefore_containsValue"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "tab"))
(rule "assignment_read_attribute_this" (formula "9"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "i"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "elim_double_block_3" (formula "9") (term "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "7") (inst "i=i_1"))
(rule "eqSymm" (formula "7"))
(rule "polySimp_mulComm0" (formula "7") (term "0,2,0,0,0,2,0"))
(rule "ifthenelse_negated" (formula "7") (term "2,0"))
(rule "arrayLengthIsAShort" (formula "7") (term "0,1,0"))
(rule "expand_inShort" (formula "7"))
(rule "replace_short_MAX" (formula "7") (term "1,0"))
(rule "replace_short_MIN" (formula "7") (term "0,1"))
(rule "andLeft" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "arrayLengthNotNegative" (formula "9") (term "0,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "11") (inst "i=i_1") (inst "j=j"))
(rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,1,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,2,0,1,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "11") (term "0,2,0,0,0,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,1,0"))
(rule "commute_and" (formula "11") (term "0,0"))
(rule "commute_and" (formula "11") (term "1,0,0,1,1,0"))
(rule "commute_and" (formula "11") (term "0,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "11") (term "0,0,1,1,0"))
(rule "commute_or" (formula "11") (term "0,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "11") (term "1,0,0,1,1,0"))
(rule "commute_or" (formula "11") (term "1,1,0,0,1,1,0"))
(rule "commute_or" (formula "11") (term "0,1,0,0,1,1,0"))
(rule "cnf_rightDist" (formula "11") (term "0,0,0,1,1,0"))
(rule "commute_or" (formula "11") (term "0,0,0,0,1,1,0"))
(rule "commute_or" (formula "11") (term "1,0,0,0,1,1,0"))
(rule "shift_paren_and" (formula "11") (term "0,0,1,1,0"))
(rule "commute_and_2" (formula "11") (term "0,0,1,1,0"))
(rule "commute_and_2" (formula "11") (term "0,0,0,1,1,0"))
(rule "commute_and_2" (formula "11") (term "0,0,1,1,0"))
(rule "commute_and" (formula "11") (term "0,0,0,0,1,1,0"))
(rule "commute_and_2" (formula "11") (term "0,0,0,1,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "12") (inst "i=i_1") (inst "j=j"))
(rule "polySimp_mulComm0" (formula "12") (term "0,2,0,1,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,0,0,0,1,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,1,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
(rule "commute_and" (formula "12") (term "0,0"))
(rule "commute_and" (formula "12") (term "0,0,1,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "2"))
(rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
(rule "concrete_or_2" (formula "1"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "14") (inst "i=i_1"))
(rule "polySimp_addComm0" (formula "14") (term "0,2,0,1,1,0"))
(rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
(rule "commute_and" (formula "14") (term "0,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "15"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "16"))
(rule "insert_constant_value" (formula "16") (term "0,0,1"))
(rule "insert_constant_value" (formula "16") (term "0,0,1,0"))
(rule "mul_literals" (formula "16") (term "0,1"))
(rule "mul_literals" (formula "16") (term "0,1,0"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "19"))
(rule "concrete_or_2" (formula "2"))
(rule "inEqSimp_commuteGeq" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i_1") (inst "j=j"))
(rule "eqSymm" (formula "18") (term "1,1,0,1,0"))
(rule "eqSymm" (formula "18") (term "1,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "18") (term "0,2,0,1,0,1,0,1,0"))
(rule "polySimp_mulComm0" (formula "18") (term "0,2,1,1,0,1,0,1,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
(rule "commute_and" (formula "18") (term "0,0"))
(rule "commute_and" (formula "18") (term "0,0,1,0"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "19") (inst "i=i_1"))
(rule "exLeft" (formula "19") (inst "sk=i_1_0"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "19"))
(rule "polySimp_mulComm0" (formula "21") (term "0,2,0"))
(rule "inEqSimp_commuteLeq" (formula "19"))
(rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
(rule "replace_known_left" (formula "21") (term "0") (ifseqformula "22"))
(rule "concrete_or_1" (formula "21"))
(rule "true_left" (formula "21"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "22"))
(rule "expand_inInt" (formula "22"))
(rule "replace_int_MIN" (formula "22") (term "0,1"))
(rule "replace_int_MAX" (formula "22") (term "1,0"))
(rule "andLeft" (formula "22"))
(rule "inEqSimp_commuteLeq" (formula "23"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "24") (inst "i=i_1"))
(rule "exLeft" (formula "24") (inst "sk=i_1_1"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "24"))
(rule "eqSymm" (formula "26"))
(rule "inEqSimp_commuteLeq" (formula "24"))
(rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "27"))
 (builtin "Loop Invariant" (formula "33") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
(branch "Invariant Initially Valid"
   (rule "simplifyUpdate2" (formula "33"))
   (rule "translateJavaAddInt" (formula "33") (term "1,1,0,0,0,1"))
   (rule "polySimp_elimSub" (formula "33") (term "0,2,0,0,0,1,0,1,0,1"))
   (rule "mul_literals" (formula "33") (term "1,0,2,0,0,0,1,0,1,0,1"))
   (rule "polySimp_addComm0" (formula "33") (term "0,2,0,0,0,1,0,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33"))
   (rule "simplifyUpdate2" (formula "33") (term "1"))
   (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "3"))
   (rule "concrete_and_3" (formula "33"))
   (rule "applyOnRigidFormula" (formula "33"))
   (rule "simplifyUpdate2" (formula "33") (term "0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0"))
   (rule "simplifyUpdate2" (formula "33") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,1"))
   (rule "simplifyUpdate2" (formula "33") (term "1,0,1"))
   (rule "simplifyUpdate2" (formula "33") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0"))
   (rule "simplifyUpdate2" (formula "33") (term "0,0,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0,1"))
   (rule "simplifyUpdate2" (formula "33") (term "0,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,1"))
   (rule "simplifyUpdate2" (formula "33") (term "1,0,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,1,0,0"))
   (rule "applyOnPV" (formula "33") (term "0,1,0,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,0"))
   (rule "applyOnPV" (formula "33") (term "0,0,0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,0,0"))
   (rule "qeq_literals" (formula "33") (term "0,0,0"))
   (rule "concrete_and_1" (formula "33") (term "0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "25"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "25") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,1,0"))
   (rule "applyOnPV" (formula "33") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "20"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "20") (term "0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,0,1"))
   (rule "simplifyUpdate2" (formula "33") (term "0,0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "33") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,1,0,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,1,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,1,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,1,1,0,1"))
   (rule "applyOnPV" (formula "33") (term "1,0,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,0,1,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0,0,0,1"))
   (rule "applyOnPV" (formula "33") (term "1,1,0,0,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "0,1,0,0,0,1"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,1,0,0"))
   (rule "applyOnPV" (formula "33") (term "0,0,1,0,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,0,1,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,0,1,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "2,0,0,1,1,0,1"))
   (rule "applyOnPV" (formula "33") (term "1,0,0,1,1,0,1"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,0,0,1,0,1"))
   (rule "applyOnPV" (formula "33") (term "1,0,0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,0,0,1,0,1"))
   (rule "simplifyUpdate1" (formula "33") (term "2,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1"))
   (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0,0,1"))
   (rule "add_literals" (formula "33") (term "0,0,1,0,0,0,1"))
   (rule "add_zero_left" (formula "33") (term "0,1,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0"))
   (rule "jmod_axiom" (formula "33") (term "0,1,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
   (rule "jdiv_axiom_inline" (formula "33") (term "0,1,0,1,0"))
   (rule "mul_literals" (formula "33") (term "0,0,2,0,1,0,1,0"))
   (rule "qeq_literals" (formula "33") (term "0,0,1,0,1,0"))
   (rule "ifthenelse_true" (formula "33") (term "0,1,0,1,0"))
   (rule "div_literals" (formula "33") (term "0,1,0,1,0"))
   (rule "times_zero_2" (formula "33") (term "1,0,1,0"))
   (rule "add_zero_right" (formula "33") (term "0,1,0"))
   (rule "eqClose" (formula "33") (term "1,0"))
   (rule "concrete_and_3" (formula "33") (term "0"))
   (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "10") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "26"))
   (rule "jmod_axiom" (formula "33") (term "0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1"))
   (rule "polySimp_homoEq" (formula "33") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,0,0,1"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0,1"))
   (rule "jmod_axiom" (formula "15") (term "0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
   (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0,0,1"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
   (rule "polySimp_sepNegMonomial" (formula "15"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "25"))
   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
   (rule "polySimp_elimOne" (formula "25") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "20"))
   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
   (rule "polySimp_elimOne" (formula "20") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
   (rule "leq_literals" (formula "10") (term "0"))
   (rule "concrete_or_1" (formula "10"))
   (rule "true_left" (formula "10"))
   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "8"))
   (rule "leq_literals" (formula "16") (term "0"))
   (rule "concrete_or_1" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "15"))
   (rule "leq_literals" (formula "9") (term "0"))
   (rule "concrete_or_1" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "elimGcdLeq" (formula "10") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,1,1,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,1,1,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "1,1,0,0,0,1,1,0"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,1,1,0"))
   (rule "elimGcdGeq" (formula "10") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
   (rule "concrete_and_1" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
   (rule "elimGcdGeq" (formula "10") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "concrete_and_1" (formula "10") (term "0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,1,1,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "1,1,0,0,0,0,1,1,0"))
   (rule "newSym_eq" (formula "13") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
   (rule "times_zero_1" (formula "13") (term "1,1"))
   (rule "add_zero_right" (formula "13") (term "1"))
   (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "13"))
   (rule "eqSymm" (formula "14"))
   (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "18"))
   (rule "polySimp_addComm1" (formula "18") (term "0"))
   (rule "applyEq" (formula "31") (term "0,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "11") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "10") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "10") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "10") (term "1,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "15") (term "0") (ifseqformula "14"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
   (rule "inEqSimp_homoInEq1" (formula "23"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
   (rule "polySimp_addComm1" (formula "23") (term "0"))
   (rule "applyEq" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "14"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
   (rule "polySimp_mulComm0" (formula "18") (term "1"))
   (rule "polySimp_rightDist" (formula "18") (term "1"))
   (rule "mul_literals" (formula "18") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1"))
   (rule "polySimp_rightDist" (formula "23") (term "1"))
   (rule "mul_literals" (formula "23") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
   (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
   (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "8") (term "0,0"))
   (rule "concrete_or_2" (formula "8") (term "0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
   (rule "add_literals" (formula "8") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0"))
   (rule "add_zero_right" (formula "8") (term "0,0"))
   (rule "qeq_literals" (formula "8") (term "0"))
   (rule "concrete_or_2" (formula "8"))
   (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "15") (term "0,0"))
   (rule "concrete_or_2" (formula "15") (term "0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0"))
   (rule "leq_literals" (formula "15") (term "0"))
   (rule "concrete_or_2" (formula "15"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,0,0,1,1,0"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
   (rule "times_zero_1" (formula "22") (term "0,0"))
   (rule "add_zero_left" (formula "22") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22"))
   (rule "mul_literals" (formula "22") (term "1"))
   (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "15"))
   (rule "greater_literals" (formula "22") (term "0,0"))
   (rule "concrete_and_1" (formula "22") (term "0"))
   (rule "mul_literals" (formula "22") (term "1,0"))
   (rule "leq_literals" (formula "22") (term "0"))
   (rule "concrete_or_1" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
   (rule "times_zero_1" (formula "17") (term "0,0"))
   (rule "add_zero_left" (formula "17") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
   (rule "mul_literals" (formula "17") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
   (rule "leq_literals" (formula "17") (term "0"))
   (rule "concrete_or_1" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "nnf_imp2or" (formula "12") (term "1,0"))
   (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
   (rule "nnf_imp2or" (formula "31") (term "1,0,1"))
   (rule "double_not" (formula "31") (term "0,1,0,1"))
   (rule "expand_addJint" (formula "31") (term "0,0"))
   (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "nnf_imp2or" (formula "10") (term "0"))
   (rule "expand_moduloInteger" (formula "31") (term "0,0"))
   (rule "replace_int_RANGE" (formula "31") (term "1,1,0,0"))
   (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,0,0"))
   (rule "replace_int_MIN" (formula "31") (term "0,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,1,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
   (rule "inEqSimp_homoInEq1" (formula "31") (term "0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0"))
   (rule "mod_axiom" (formula "31") (term "0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0"))
   (rule "mul_literals" (formula "31") (term "0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0,0"))
   (rule "add_zero_left" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
   (rule "elimGcdLeq" (formula "31") (term "0") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,0,0"))
   (rule "sub_literals" (formula "31") (term "0,0,0,0,0,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
   (rule "mul_literals" (formula "31") (term "0,0,0,0,0,1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0"))
   (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,1,0,0"))
   (rule "add_literals" (formula "31") (term "1,1,0,1,0,0"))
   (rule "times_zero_1" (formula "31") (term "1,0,1,0,0"))
   (rule "add_zero_right" (formula "31") (term "0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,0"))
   (rule "add_literals" (formula "31") (term "1,1,0,0,0,0"))
   (rule "times_zero_1" (formula "31") (term "1,0,0,0,0"))
   (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
   (rule "leq_literals" (formula "31") (term "0,0,0"))
   (rule "concrete_and_1" (formula "31") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0" (formula "31") (term "0,0,0"))
   (rule "add_literals" (formula "31") (term "1,0,0,0"))
   (rule "times_zero_1" (formula "31") (term "0,0,0"))
   (rule "qeq_literals" (formula "31") (term "0,0"))
   (rule "ifthenelse_true_for" (formula "31") (term "0"))
   (rule "polyDiv_pullOut" (formula "31") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,0,0"))
   (rule "equal_literals" (formula "31") (term "0,0,0,0"))
   (rule "ifthenelse_false" (formula "31") (term "0,0,0"))
   (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
   (rule "polySimp_addComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0,1,1,0,0"))
   (rule "add_literals" (formula "31") (term "0,0,1,1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "0,0"))
   (rule "mul_literals" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
   (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "31") (term "0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
   (rule "nnf_imp2or" (formula "12") (term "0"))
   (rule "nnf_imp2or" (formula "16") (term "0"))
   (rule "nnf_imp2or" (formula "31") (term "0,1"))
   (rule "nnf_notAnd" (formula "11") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
   (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
   (rule "mul_literals" (formula "11") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "11") (term "1,0"))
   (rule "nnf_imp2or" (formula "10") (term "1,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
   (rule "mul_literals" (formula "10") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
   (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
   (rule "mul_literals" (formula "12") (term "1,1,0,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
   (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
   (rule "mul_literals" (formula "16") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "31") (term "0,0,1"))
   (rule "nnf_notAnd" (formula "11") (term "0,1,0"))
   (rule "double_not" (formula "11") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
   (rule "nnf_notAnd" (formula "10") (term "0,1,0"))
   (rule "double_not" (formula "10") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
   (rule "nnf_imp2or" (formula "11") (term "0,1,1,0"))
   (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
   (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
   (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
   (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
   (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
   (rule "nnf_notAnd" (formula "31") (term "0,0,0,1"))
   (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0,1"))
   (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,1"))
   (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1"))
   (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1"))
   (rule "neq_or" (formula "31") (term "0,0,0,1"))
   (rule "concrete_or_1" (formula "31") (term "0,0,1"))
   (rule "concrete_or_1" (formula "31") (term "0,1"))
   (rule "all_unused" (formula "31") (term "1"))
   (rule "concrete_and_3" (formula "31"))
   (rule "inEqSimp_leqRight" (formula "31"))
   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
   (rule "add_literals" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1"))
   (rule "polySimp_rightDist" (formula "1") (term "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
   (rule "mul_literals" (formula "1") (term "0,1"))
   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
   (rule "nnf_notAnd" (formula "17") (term "0,1,0,1,0"))
   (rule "double_not" (formula "17") (term "0,0,1,0,1,0"))
   (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
   (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0,1,1,0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
   (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "27") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "6"))
   (rule "insert_constant_value" (formula "27") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "27") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "expand_inInt" (formula "27") (term "1"))
   (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_int_MIN" (formula "27") (term "0,1,1"))
   (rule "replace_int_MAX" (formula "27") (term "1,0,1"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "28"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "andLeft" (formula "28"))
   (rule "notLeft" (formula "27"))
   (rule "andLeft" (formula "27"))
   (rule "notLeft" (formula "27"))
   (rule "exLeft" (formula "34") (inst "sk=i_1_2"))
   (rule "andLeft" (formula "34"))
   (rule "andLeft" (formula "34"))
   (rule "exLeft" (formula "32") (inst "sk=i_2_0"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "32"))
   (rule "eqSymm" (formula "31"))
   (rule "eqSymm" (formula "30") (term "1,1,0,1,0"))
   (rule "eqSymm" (formula "30") (term "1,0,1,0,1,0"))
   (rule "eqSymm" (formula "34"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,1,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,1,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,0,0,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "38") (term "0,2,0"))
   (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,0,0,2,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "0,2,1,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "0,2,0,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "37"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "37") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "33"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "33") (term "0"))
   (rule "ifthenelse_negated" (formula "31") (term "2,0"))
   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "39") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "39") (term "0,1,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "41"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
   (rule "inEqSimp_commuteGeq" (formula "28"))
   (rule "inEqSimp_commuteLeq" (formula "27"))
   (rule "inEqSimp_commuteLeq" (formula "36"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,1,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0,1,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,1,0"))
   (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "34"))
   (rule "applyEq" (formula "39") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
   (rule "applyEq" (formula "27") (term "0") (ifseqformula "34"))
   (rule "applyEq" (formula "40") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "25"))
   (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "34"))
   (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "25"))
   (rule "applyEq" (formula "37") (term "0,0,1,0") (ifseqformula "34"))
   (rule "applyEq" (formula "28") (term "0") (ifseqformula "25"))
   (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "34"))
   (rule "applyEq" (formula "34") (term "0") (ifseqformula "25"))
   (rule "eqSymm" (formula "34"))
   (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "25"))
   (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "25"))
   (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
   (rule "applyEq" (formula "29") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
   (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
   (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "25"))
   (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "25"))
   (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "applyEq" (formula "39") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "34"))
   (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "34"))
   (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "34"))
   (rule "applyEqRigid" (formula "37") (term "0,0,1,0") (ifseqformula "34"))
   (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "34"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
   (rule "polySimp_addComm1" (formula "33") (term "0"))
   (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "14"))
   (rule "polySimp_addComm1" (formula "37") (term "0"))
   (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "30") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
   (rule "jmod_axiom" (formula "34") (term "0"))
   (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
   (rule "applyEqRigid" (formula "34") (term "0,1,0") (ifseqformula "14"))
   (rule "polySimp_pullOutFactor0" (formula "34") (term "0"))
   (rule "add_literals" (formula "34") (term "1,0"))
   (rule "times_zero_1" (formula "34") (term "0"))
   (rule "eqClose" (formula "34"))
   (rule "true_left" (formula "34"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "38") (term "0,1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "37") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "37") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1"))
   (rule "polySimp_rightDist" (formula "32") (term "1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
   (rule "mul_literals" (formula "32") (term "0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35"))
   (rule "polySimp_mulComm0" (formula "35") (term "1"))
   (rule "polySimp_rightDist" (formula "35") (term "1"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
   (rule "mul_literals" (formula "35") (term "0,1"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
   (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "16"))
   (rule "mul_literals" (formula "27") (term "1,1,0"))
   (rule "greater_literals" (formula "27") (term "0,0"))
   (rule "concrete_and_1" (formula "27") (term "0"))
   (rule "leq_literals" (formula "27") (term "0"))
   (rule "concrete_or_1" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "inEqSimp_subsumption4" (formula "27") (ifseqformula "9"))
   (rule "mul_literals" (formula "27") (term "0,1,0"))
   (rule "greater_literals" (formula "27") (term "0,0"))
   (rule "concrete_and_1" (formula "27") (term "0"))
   (rule "leq_literals" (formula "27") (term "0"))
   (rule "concrete_or_1" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "elimGcdLeq" (formula "36") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "36") (term "1,0,1,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "36") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "36") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "0,0,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "36") (term "0,1,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "36") (term "1,0,0,0,1,1,0"))
   (rule "elimGcdLeq" (formula "36") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
   (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,0,1,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,1,0,1,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,1,0,1,1,0,0,1,1,0"))
   (rule "qeq_literals" (formula "36") (term "1,0,1,1,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "36") (term "0,1,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,0,1,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "36") (term "0,0,0,1,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,0,0,1,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "0,0,1,1,0,0,1,1,0"))
   (rule "leq_literals" (formula "36") (term "0,1,1,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "36") (term "1,1,0,0,1,1,0"))
   (rule "elimGcdGeq" (formula "36") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "sub_literals" (formula "36") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "leq_literals" (formula "36") (term "1,0,0,1,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "36") (term "0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "36") (term "1,1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,1,0,0,1,1,0"))
   (rule "qeq_literals" (formula "36") (term "0,0,1,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "36") (term "0,1,0,0,1,1,0"))
   (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
   (rule "times_zero_1" (formula "32") (term "0,0"))
   (rule "add_zero_left" (formula "32") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "32"))
   (rule "mul_literals" (formula "32") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "16"))
   (rule "leq_literals" (formula "32") (term "0"))
   (rule "concrete_or_1" (formula "32"))
   (rule "true_left" (formula "32"))
   (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "30"))
   (rule "times_zero_1" (formula "29") (term "0,0"))
   (rule "add_zero_left" (formula "29") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "29"))
   (rule "mul_literals" (formula "29") (term "1"))
   (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "16"))
   (rule "greater_literals" (formula "29") (term "0,0"))
   (rule "concrete_and_1" (formula "29") (term "0"))
   (rule "mul_literals" (formula "29") (term "1,0"))
   (rule "leq_literals" (formula "29") (term "0"))
   (rule "concrete_or_1" (formula "29"))
   (rule "true_left" (formula "29"))
   (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,1,0"))
   (rule "nnf_notOr" (formula "11") (term "1,0,0,1,1,0"))
   (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "11") (term "1,1,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,1,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,1,0,0,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,1,1,0"))
   (rule "nnf_imp2or" (formula "27") (term "1,0"))
   (rule "nnf_imp2or" (formula "28") (term "1,0,1,0"))
   (rule "jdiv_axiom" (formula "14") (term "0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "0,0,2,1"))
   (rule "eqSymm" (formula "14"))
   (rule "applyEq" (formula "14") (term "1") (ifseqformula "15"))
   (rule "inEqSimp_subsumption6" (formula "14") (term "0,0") (ifseqformula "17"))
   (rule "greater_literals" (formula "14") (term "0,0,0,0"))
   (rule "concrete_and_1" (formula "14") (term "0,0,0"))
   (rule "mul_literals" (formula "14") (term "1,0,0,0"))
   (rule "leq_literals" (formula "14") (term "0,0,0"))
   (rule "concrete_or_1" (formula "14") (term "0,0"))
   (rule "ifthenelse_true" (formula "14") (term "0"))
   (rule "polyDiv_pullOut" (formula "14") (term "0") (inst "polyDivCoeff=l_0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,2,0"))
   (rule "equal_literals" (formula "14") (term "0,0"))
   (rule "ifthenelse_false" (formula "14") (term "0"))
   (rule "polySimp_homoEq" (formula "14"))
   (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "14") (term "1,0,0,0,1,0"))
   (rule "times_zero_1" (formula "14") (term "0,0,0,1,0"))
   (rule "div_literals" (formula "14") (term "0,0,1,0"))
   (rule "add_zero_left" (formula "14") (term "0,1,0"))
   (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
   (rule "add_literals" (formula "14") (term "1,0"))
   (rule "times_zero_1" (formula "14") (term "0"))
   (rule "eqClose" (formula "14"))
   (rule "true_left" (formula "14"))
   (rule "commute_or" (formula "12") (term "0,0"))
   (rule "commute_or_2" (formula "13") (term "0"))
   (rule "commute_or" (formula "11") (term "0,0"))
   (rule "nnf_imp2or" (formula "35") (term "1,0"))
   (rule "commute_or" (formula "17") (term "0,0"))
   (rule "shift_paren_or" (formula "17") (term "0,1,0"))
   (rule "nnf_imp2or" (formula "36") (term "0"))
   (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
   (rule "nnf_imp2or" (formula "27") (term "0"))
   (rule "nnf_imp2or" (formula "28") (term "0"))
   (rule "nnf_imp2or" (formula "35") (term "0"))
   (rule "nnf_notOr" (formula "11") (term "1,0,0,0,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_notLeq" (formula "11") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "11") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,1,0"))
   (rule "nnf_notAnd" (formula "11") (term "0,0,0,0,1,1,0"))
   (rule "nnf_imp2or" (formula "36") (term "1,0"))
   (rule "nnf_notAnd" (formula "36") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
   (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
   (rule "mul_literals" (formula "36") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
   (rule "nnf_notAnd" (formula "27") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
   (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
   (rule "mul_literals" (formula "27") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "28") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
   (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
   (rule "mul_literals" (formula "28") (term "1,0,0,0"))
   (rule "nnf_notAnd" (formula "35") (term "0,0"))
   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
   (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
   (rule "nnf_notAnd" (formula "35") (term "0,1,0"))
   (rule "double_not" (formula "35") (term "0,0,1,0"))
   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,1,0"))
   (rule "add_literals" (formula "35") (term "0,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "35") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
   (rule "nnf_imp2or" (formula "35") (term "0,1,1,0"))
   (rule "nnf_notAnd" (formula "36") (term "0,1,0"))
   (rule "double_not" (formula "36") (term "0,0,1,0"))
   (rule "inEqSimp_notGeq" (formula "36") (term "1,0,1,0"))
   (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,1,0"))
   (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0,1,0"))
   (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,1,0"))
   (rule "add_literals" (formula "36") (term "0,0,0,1,0,1,0"))
   (rule "add_zero_left" (formula "36") (term "0,0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
   (rule "nnf_imp2or" (formula "36") (term "0,1,1,0"))
   (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_0"))
   (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
   (rule "qeq_literals" (formula "1") (term "0,1,1"))
   (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
   (rule "equal_literals" (formula "1") (term "0"))
   (rule "concrete_or_2" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
   (rule "add_literals" (formula "3") (term "0,0,1"))
   (rule "polySimp_addComm1" (formula "3") (term "1"))
   (rule "add_literals" (formula "3") (term "0,1"))
   (rule "inEqSimp_homoInEq0" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
   (rule "polySimp_addComm1" (formula "2") (term "0"))
   (rule "inEqSimp_homoInEq1" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
   (rule "inEqSimp_homoInEq1" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
   (rule "polySimp_addComm1" (formula "4") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
   (rule "polySimp_mulComm0" (formula "2") (term "1"))
   (rule "polySimp_rightDist" (formula "2") (term "1"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
   (rule "mul_literals" (formula "2") (term "0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1"))
   (rule "polySimp_rightDist" (formula "3") (term "1"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
   (rule "mul_literals" (formula "3") (term "0,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1"))
   (rule "polySimp_rightDist" (formula "4") (term "1"))
   (rule "mul_literals" (formula "4") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
   (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "4"))
   (rule "greater_literals" (formula "3") (term "0,0"))
   (rule "concrete_and_1" (formula "3") (term "0"))
   (rule "polySimp_rightDist" (formula "3") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
   (rule "mul_literals" (formula "3") (term "0,0,0"))
   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
   (rule "mul_literals" (formula "3") (term "0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
   (rule "add_literals" (formula "3") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "3") (term "1,0,0"))
   (rule "add_zero_right" (formula "3") (term "0,0"))
   (rule "qeq_literals" (formula "3") (term "0"))
   (rule "concrete_or_1" (formula "3"))
   (rule "true_left" (formula "3"))
   (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "2") (term "0,0"))
   (rule "concrete_or_2" (formula "2") (term "0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
   (rule "add_literals" (formula "2") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "2") (term "1,0,0"))
   (rule "add_zero_right" (formula "2") (term "0,0"))
   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
   (rule "add_literals" (formula "2") (term "0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
   (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
   (rule "add_literals" (formula "2") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
   (rule "add_literals" (formula "2") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "2") (term "1,0,0"))
   (rule "add_zero_right" (formula "2") (term "0,0"))
   (rule "leq_literals" (formula "2") (term "0"))
   (rule "concrete_or_2" (formula "2"))
   (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "3"))
   (rule "mul_literals" (formula "18") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "18") (term "0"))
   (rule "add_literals" (formula "18") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "18"))
   (rule "mul_literals" (formula "18") (term "1"))
   (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
   (rule "leq_literals" (formula "18") (term "0,0"))
   (rule "concrete_or_2" (formula "18") (term "0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
   (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
   (rule "add_literals" (formula "18") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
   (rule "add_literals" (formula "18") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "18") (term "1,0,0"))
   (rule "add_zero_right" (formula "18") (term "0,0"))
   (rule "leq_literals" (formula "18") (term "0"))
   (rule "concrete_or_2" (formula "18"))
   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
   (rule "polySimp_rightDist" (formula "2") (term "0,0"))
   (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
   (rule "mul_literals" (formula "2") (term "0,0,0"))
   (rule "polySimp_addComm1" (formula "2") (term "0"))
   (rule "add_literals" (formula "2") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "2"))
   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
   (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "19"))
   (rule "times_zero_1" (formula "2") (term "1,1,0"))
   (rule "greater_literals" (formula "2") (term "0,0"))
   (rule "concrete_impl_1" (formula "2") (term "0"))
   (rule "qeq_literals" (formula "2") (term "0"))
   (rule "concrete_and_2" (formula "2"))
   (rule "closeFalse" (formula "2"))
)
(branch "Body Preserves Invariant"
   (rule "simplifyUpdate2" (formula "30"))
   (rule "expand_inInt" (formula "30") (term "1,1,1"))
   (rule "replace_int_MIN" (formula "30") (term "0,1,1,1,1"))
   (rule "replace_int_MAX" (formula "30") (term "1,0,1,1,1"))
   (rule "simplifyUpdate2" (formula "35") (term "1"))
   (rule "translateJavaAddInt" (formula "30") (term "1,1,0,0,0,1,1"))
   (rule "translateJavaAddInt" (formula "35") (term "0,0,1,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaAddInt" (formula "35") (term "1,1,0,0,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaAddInt" (formula "35") (term "0,0,0,1,1,1"))
   (rule "eqSymm" (formula "35") (term "0,0,1,0,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaSubInt" (formula "35") (term "0,1,1,1,1,0,1,1,1,1,1"))
   (rule "translateJavaSubInt" (formula "35") (term "0,0,1,1,1"))
   (rule "polySimp_elimSub" (formula "30") (term "0,2,0,0,0,1,0,1,0,1,1"))
   (rule "mul_literals" (formula "30") (term "1,0,2,0,0,0,1,0,1,0,1,1"))
   (rule "polySimp_elimSub" (formula "35") (term "0,2,0,0,0,1,0,1,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "mul_literals" (formula "35") (term "1,0,2,0,0,0,1,0,1,0,0,1,1,1,0,1,1,1,1,1"))
   (rule "sequentialToParallel2" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "simplifyUpdate3" (formula "30") (term "1,0"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "sequentialToParallel2" (formula "40") (term "1,1"))
   (rule "applyOnElementary" (formula "40") (term "1,0,1,1"))
   (rule "sequentialToParallel2" (formula "40"))
   (rule "simplifyUpdate3" (formula "40") (term "1,0"))
   (rule "sequentialToParallel2" (formula "40"))
   (rule "simplifyUpdate2" (formula "40"))
   (rule "simplifyUpdate3" (formula "40") (term "1,0"))
   (rule "impRight" (formula "40"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate3" (formula "1") (term "1,0"))
   (rule "applyOnParallel" (formula "41") (term "1,0"))
   (rule "simplifyUpdate3" (formula "41") (term "0,1,0"))
   (rule "applyOnElementary" (formula "41") (term "1,1,0"))
   (rule "sequentialToParallel1" (formula "41") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "0,1,1,0"))
   (rule "simplifyUpdate3" (formula "41") (term "1,0,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "34") (term "0,2,0,0,0,1,0,1"))
   (rule "polySimp_addComm0" (formula "41") (term "0,2,0,0,0,1,0,1,0,0,1,1,1,0,1"))
   (rule "applyOnRigidFormula" (formula "35"))
   (rule "simplifyUpdate1" (formula "35") (term "1"))
   (rule "applyOnPV" (formula "35") (term "0"))
   (rule "applyOnRigidFormula" (formula "36"))
   (rule "applyOnPV" (formula "36") (term "1"))
   (rule "simplifyUpdate1" (formula "36") (term "0"))
   (rule "applyOnRigidFormula" (formula "33"))
   (rule "simplifyUpdate1" (formula "33") (term "1"))
   (rule "applyOnRigidFormula" (formula "32"))
   (rule "simplifyUpdate1" (formula "32") (term "0"))
   (rule "simplifyUpdate1" (formula "32") (term "1"))
   (rule "applyOnPV" (formula "32") (term "0"))
   (rule "applyOnRigidFormula" (formula "31"))
   (rule "simplifyUpdate1" (formula "31") (term "1"))
   (rule "applyOnPV" (formula "31") (term "0"))
   (rule "applyOnRigidTerm" (formula "41") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "1,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "0,0,1,1,0"))
   (rule "applyOnPV" (formula "41") (term "1,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "34"))
   (rule "applyOnRigidTerm" (formula "33") (term "0"))
   (rule "applyOnPV" (formula "33") (term "0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "32") (term "1"))
   (rule "simplifyUpdate1" (formula "32") (term "1,1"))
   (rule "applyOnRigidTerm" (formula "41") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "41") (term "1,0,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0"))
   (rule "simplifyUpdate2" (formula "34") (term "0,0"))
   (rule "simplifyUpdate2" (formula "34") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "32") (term "0,1"))
   (rule "applyOnPV" (formula "32") (term "0,0,1"))
   (rule "applyOnRigidTerm" (formula "41") (term "0,0,0,1,1,0"))
   (rule "applyOnPV" (formula "41") (term "0,0,0,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,0"))
   (rule "simplifyUpdate2" (formula "34") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1,0"))
   (rule "simplifyUpdate2" (formula "34") (term "0,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,0,0"))
   (rule "simplifyUpdate2" (formula "34") (term "0,0,0,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "1,0,0,0"))
   (rule "simplifyUpdate1" (formula "34") (term "0,1,0,0,0"))
   (rule "applyOnPV" (formula "34") (term "1,1,0,0,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,0,1,1,0"))
   (rule "applyOnPV" (formula "34") (term "1,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "34") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "1,0,0,1,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "2,0,0,1,1,0"))
   (rule "applyOnPV" (formula "34") (term "1,0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "0,0,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "34") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "2,0,0,0,1,0"))
   (rule "applyOnPV" (formula "34") (term "1,0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "34") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "41") (term "1,0,0,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,0,0,1,1,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "36"))
   (rule "inEqSimp_commuteLeq" (formula "32"))
   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclarationAssign" (formula "41") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_1"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "rtrn"))
   (rule "assignment" (formula "41") (term "1"))
   (rule "sequentialToParallel2" (formula "41"))
   (rule "simplifyUpdate3" (formula "41") (term "1,0"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "returnExpr"))
   (rule "variableDeclarationAssign" (formula "41") (term "1"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "exc_1"))
   (rule "assignment" (formula "41") (term "1"))
   (rule "sequentialToParallel2" (formula "41"))
   (rule "simplifyUpdate3" (formula "41") (term "1,0"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "thrownExc"))
   (rule "blockReturn" (formula "41") (term "1,0,1,0,1"))
   (rule "blockThrow" (formula "41") (term "1,0,0,1"))
   (rule "boxToDiamond" (formula "1") (term "1"))
   (rule "notLeft" (formula "1"))
   (rule "expand_addJint" (formula "31") (term "0"))
   (rule "polySimp_addComm0" (formula "31") (term "0,0"))
   (rule "expand_addJint" (formula "41") (term "0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "expand_subJint" (formula "41") (term "0,1,1,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "41") (term "0,0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "41") (term "0,0,1,1,1,1,0,1"))
   (rule "expand_subJint" (formula "41") (term "0,1,1,0,0,0"))
   (rule "polySimp_elimSub" (formula "41") (term "0,0,1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "0,0,1,1,0,0,0"))
   (rule "expand_moduloInteger" (formula "31") (term "0"))
   (rule "replace_int_HALFRANGE" (formula "31") (term "0,0,1,0"))
   (rule "replace_int_RANGE" (formula "31") (term "1,1,0"))
   (rule "replace_int_MIN" (formula "31") (term "0,0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,1,0"))
   (rule "add_literals" (formula "31") (term "0,0,1,0"))
   (rule "expand_moduloInteger" (formula "41") (term "0,1,0,0,0,0,1,1,1,0,1"))
   (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "replace_int_RANGE" (formula "41") (term "1,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "replace_int_MIN" (formula "41") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,1,0,1,0,0,0,0,1,1,1,0,1"))
   (rule "expand_moduloInteger" (formula "41") (term "0,1,1,1,1,0,1"))
   (rule "replace_int_RANGE" (formula "41") (term "1,1,0,1,1,1,1,0,1"))
   (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,0,1,1,1,1,0,1"))
   (rule "replace_int_MIN" (formula "41") (term "0,0,1,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,1,1,0,1"))
   (rule "expand_moduloInteger" (formula "41") (term "0,1,1,0,0,0"))
   (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,0,1,1,0,0,0"))
   (rule "replace_int_MIN" (formula "41") (term "0,0,1,1,0,0,0"))
   (rule "replace_int_RANGE" (formula "41") (term "1,1,0,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,0,0,0"))
   (rule "expand_addJint" (formula "41") (term "1,0,1,0,1,1,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "41") (term "0,1,0,1,0,1,1,1,1,0,1"))
   (rule "expand_addJint" (formula "41") (term "1,0,1,0,1,1,0,0,0"))
   (rule "polySimp_addComm0" (formula "41") (term "0,1,0,1,0,1,1,0,0,0"))
   (rule "expand_moduloInteger" (formula "41") (term "1,0,1,0,1,1,1,1,0,1"))
   (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,1,0,1,0,1,1,1,1,0,1"))
   (rule "replace_int_RANGE" (formula "41") (term "1,1,1,0,1,0,1,1,1,1,0,1"))
   (rule "replace_int_MIN" (formula "41") (term "0,1,0,1,0,1,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,1,0,1,0,1,1,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,1,1,0,1,0,1,1,1,1,0,1"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,1,1,0,1"))
   (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,1,1,1,1,0,1"))
   (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,1,1,1,0,1"))
   (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,1,1,1,0,1"))
   (rule "expand_moduloInteger" (formula "41") (term "1,0,1,0,1,1,0,0,0"))
   (rule "replace_int_HALFRANGE" (formula "41") (term "0,0,1,1,0,1,0,1,1,0,0,0"))
   (rule "replace_int_RANGE" (formula "41") (term "1,1,1,0,1,0,1,1,0,0,0"))
   (rule "replace_int_MIN" (formula "41") (term "0,1,0,1,0,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,1,0,1,0,1,1,0,0,0"))
   (rule "add_literals" (formula "41") (term "0,0,1,1,0,1,0,1,1,0,0,0"))
   (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,1,1,0,0,0"))
   (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,1,1,0,0,0"))
   (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,1,0,0,0"))
   (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,1,0,0,0"))
   (rule "commute_and" (formula "33") (term "0,0,0"))
   (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "36") (term "1"))
   (rule "variableDeclaration" (formula "36") (term "1") (newnames "x"))
   (rule "assignment" (formula "36") (term "1"))
   (rule "sequentialToParallel2" (formula "36"))
   (rule "simplifyUpdate2" (formula "36"))
   (rule "simplifyUpdate3" (formula "36") (term "1,0"))
   (rule "applyOnElementary" (formula "36") (term "1,0"))
   (rule "applyOnPV" (formula "36") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "36") (term "1"))
   (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "36"))
   (branch "Normal Execution (tab != null)"
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate2" (formula "36"))
      (rule "simplifyUpdate3" (formula "36") (term "1,0"))
      (rule "applyOnElementary" (formula "36") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "36") (term "0,1,0"))
      (rule "applyOnPV" (formula "36") (term "0,0,1,0"))
      (rule "less_than_comparison_simple" (formula "36") (term "1"))
      (rule "sequentialToParallel2" (formula "36"))
      (rule "simplifyUpdate2" (formula "36"))
      (rule "applyOnElementary" (formula "36") (term "0"))
      (rule "applyOnRigidTerm" (formula "36") (term "0,0"))
      (rule "simplifyUpdate1" (formula "36") (term "2,0,0"))
      (rule "simplifyUpdate1" (formula "36") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "36") (term "0,0,0"))
      (rule "simplifyUpdate1" (formula "36") (term "0,0,0,0"))
      (rule "simplifyUpdate1" (formula "36") (term "1,0,0,0"))
      (rule "applyOnPV" (formula "36") (term "0,0,0,0"))
      (rule "applyOnPV" (formula "36") (term "1,0,0,0"))
      (rule "methodCallEmpty" (formula "36") (term "1"))
      (rule "emptyModality" (formula "36") (term "1"))
      (rule "notRight" (formula "36"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete3" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_2"))
      (rule "compound_less_than_comparison_2" (formula "41") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_3"))
      (rule "assignment" (formula "41") (term "1"))
      (rule "sequentialToParallel2" (formula "41"))
      (rule "simplifyUpdate3" (formula "41") (term "1,0"))
      (rule "applyOnElementary" (formula "41") (term "1,0"))
      (rule "applyOnPV" (formula "41") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "41") (term "1"))
      (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_4"))
      (rule "assignment_read_length" (formula "41"))
      (branch "Normal Execution (tab != null)"
         (rule "sequentialToParallel2" (formula "41"))
         (rule "simplifyUpdate3" (formula "41") (term "1,0"))
         (rule "applyOnElementary" (formula "41") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
         (rule "applyOnPV" (formula "41") (term "0,0,1,0"))
         (rule "less_than_comparison_simple" (formula "41") (term "1"))
         (rule "sequentialToParallel2" (formula "41"))
         (rule "simplifyUpdate2" (formula "41"))
         (rule "simplifyUpdate3" (formula "41") (term "1,0"))
         (rule "applyOnElementary" (formula "41") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "41") (term "2,0,1,0"))
         (rule "applyOnRigidFormula" (formula "41") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "41") (term "0,0,0,1,0"))
         (rule "simplifyUpdate1" (formula "41") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "41") (term "0,0,0,1,0"))
         (rule "applyOnPV" (formula "41") (term "1,0,0,1,0"))
         (rule "replace_known_left" (formula "41") (term "0,0,1,0") (ifseqformula "1"))
         (rule "ifthenelse_true" (formula "41") (term "0,1,0"))
         (rule "ifSplit" (formula "41"))
         (branch "if x_2 true"
            (rule "simplifyUpdate2" (formula "1"))
            (rule "simplifyUpdate2" (formula "42"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "boolean_equal" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_5"))
            (rule "compound_assignment_3_nonsimple" (formula "41") (term "1"))
            (rule "ifElseUnfold" (formula "41") (term "1") (inst "#boolv=x_6"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_6"))
            (rule "compound_assignment_2" (formula "41") (term "1") (inst "#v=x_7"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_7"))
            (rule "compound_equality_comparison_1" (formula "41") (term "1") (inst "#v0=o"))
            (rule "variableDeclarationAssign" (formula "41") (term "1"))
            (rule "variableDeclaration" (formula "41") (term "1") (newnames "o"))
            (rule "assignment_array2" (formula "41"))
            (branch "Normal Execution (tab != null)"
               (rule "sequentialToParallel2" (formula "41"))
               (rule "simplifyUpdate3" (formula "41") (term "1,0"))
               (rule "applyOnElementary" (formula "41") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "41") (term "1,0,1,0"))
               (rule "applyOnRigidTerm" (formula "41") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "41") (term "0,2,0,1,0"))
               (rule "equality_comparison_simple" (formula "41") (term "1"))
               (rule "sequentialToParallel2" (formula "41"))
               (rule "simplifyUpdate2" (formula "41"))
               (rule "simplifyUpdate3" (formula "41") (term "1,0"))
               (rule "applyOnElementary" (formula "41") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "41") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "1,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "0,0,0,1,0"))
               (rule "applyOnPV" (formula "41") (term "1,0,0,1,0"))
               (rule "applyOnPV" (formula "41") (term "0,0,0,1,0"))
               (rule "compound_assignment_1_new" (formula "41") (term "1"))
               (rule "sequentialToParallel2" (formula "41"))
               (rule "simplifyUpdate2" (formula "41"))
               (rule "simplifyUpdate3" (formula "41") (term "1,0"))
               (rule "applyOnElementary" (formula "41") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "41") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "1,0,1,0"))
               (rule "applyOnRigidFormula" (formula "41") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "41") (term "0,0,0,1,0"))
               (rule "simplifyUpdate1" (formula "41") (term "1,0,0,1,0"))
               (rule "ifthenelse_concrete3" (formula "41") (term "0,0,1,0"))
               (rule "boolean_not_equal_2" (formula "41") (term "1,0,0,1,0"))
               (rule "concrete_or_4" (formula "41") (term "0,0,1,0"))
               (rule "ifElseSplit" (formula "41"))
               (branch "if x_6 true"
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "simplifyUpdate2" (formula "42"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "ifthenelse_concrete4" (formula "1"))
                  (rule "boolean_not_equal_2" (formula "1") (term "1"))
                  (rule "concrete_or_4" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "ifSkipThen" (formula "42") (term "1"))
                  (rule "assignment" (formula "42") (term "1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1"))
                  (rule "unusedLabel" (formula "42") (term "1"))
                  (rule "compound_assignment_op_plus" (formula "42") (term "1"))
                  (rule "compound_int_cast_expression" (formula "42") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_8"))
                  (rule "remove_parentheses_right" (formula "42") (term "1"))
                  (rule "compound_addition_2" (formula "42") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_9"))
                  (rule "assignment" (formula "42") (term "1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "applyOnElementary" (formula "42") (term "1,0"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_10"))
                  (rule "remove_parentheses_right" (formula "42") (term "1"))
                  (rule "assignment" (formula "42") (term "1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "assignmentAdditionInt" (formula "42") (term "1"))
                  (rule "translateJavaAddInt" (formula "42") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "applyOnElementary" (formula "42") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "42") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "42") (term "0,0,1,0"))
                  (rule "expand_addJint" (formula "42") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,0,1,0"))
                  (rule "expand_moduloInteger" (formula "42") (term "0,1,0"))
                  (rule "replace_int_HALFRANGE" (formula "42") (term "0,0,1,0,1,0"))
                  (rule "replace_int_MIN" (formula "42") (term "0,0,1,0"))
                  (rule "replace_int_RANGE" (formula "42") (term "1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,0"))
                  (rule "add_literals" (formula "42") (term "0,0,1,0,1,0"))
                  (rule "widening_identity_cast_5" (formula "42") (term "1"))
                  (rule "assignment" (formula "42") (term "1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "applyOnElementary" (formula "42") (term "1,0"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0"))
                  (rule "tryEmpty" (formula "42") (term "1"))
                  (rule "methodCallEmpty" (formula "42") (term "1"))
                  (rule "emptyModality" (formula "42") (term "1"))
                  (rule "applyOnRigidFormula" (formula "42"))
                  (rule "simplifyUpdate2" (formula "42") (term "0"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0"))
                  (rule "boolean_not_equal_2" (formula "42") (term "0,0"))
                  (rule "concrete_impl_2" (formula "42") (term "0"))
                  (rule "concrete_and_1" (formula "42"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0"))
                  (rule "boolean_not_equal_2" (formula "42") (term "0,0"))
                  (rule "concrete_impl_2" (formula "42") (term "0"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,1,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,0,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0,1"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,1"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0,0,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "1,0,1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,1,0,1,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,0,1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0,1,0,1,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "2,0,0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,1,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0,0,1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "1,0,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,0,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,0,1,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0,1,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "42") (term "0,0,0,0,1,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "1,0,1,0,1,0,1,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0,1,0,1,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,1,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,1,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,1,0,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,0,1,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "42") (term "1,0,0,0,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,1,0,0,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,1,0,0,0,1,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "1,0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,1,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,0,1,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "2,0,0,1,1,0,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,0,0,1,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,0,1,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,0,0,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "2,0,0,0,1,0,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "1,0,0,0,1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,0,0,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "42") (term "1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                  (rule "concrete_and_1" (formula "42") (userinteraction))
                  (rule "impRight" (formula "42") (userinteraction))
                  (rule "andRight" (formula "43"))
                  (branch "Case 1"
                     (rule "andRight" (formula "43"))
                     (branch "Case 1"
                        (rule "andRight" (formula "43"))
                        (branch "Case 1"
                           (rule "andRight" (formula "43"))
                           (branch "Case 1"
                              (rule "andRight" (formula "43"))
                              (branch "Case 1"
                                 (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "concrete_not_2" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "42"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "33") (term "1,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "jmod_axiom" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0"))
                                 (rule "jmod_axiom" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "mod_axiom" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "jmod_axiom" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (rule "concrete_or_1" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "31"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (rule "concrete_or_1" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                 (rule "concrete_or_1" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                 (rule "concrete_or_1" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "polyDiv_pullOut" (formula "30") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "30") (term "0,0,0"))
                                 (rule "ifthenelse_false" (formula "30") (term "0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "0"))
                                 (rule "mul_literals" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                 (rule "equal_literals" (formula "1") (term "0,0,0"))
                                 (rule "ifthenelse_false" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "elimGcdLeq" (formula "12") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "12") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "12") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "15") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                 (rule "times_zero_1" (formula "15") (term "1,1"))
                                 (rule "add_zero_right" (formula "15") (term "1"))
                                 (rule "applyEqRigid" (formula "14") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "25") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "applyEqRigid" (formula "12") (term "1,0,1,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "12") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "31") (term "1,1") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "applyEq" (formula "12") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "10") (term "0,0"))
                                 (rule "concrete_or_2" (formula "10") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                 (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_2" (formula "10"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "32") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                 (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "32"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0"))
                                 (rule "mul_literals" (formula "33") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                 (rule "add_literals" (formula "1") (term "0,1"))
                                 (rule "applyEqRigid" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "0,0"))
                                 (rule "applyEqRigid" (formula "1") (term "1,0,0,0") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "add_literals" (formula "30") (term "0,0"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "33"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                 (rule "add_literals" (formula "31") (term "0,0,1"))
                                 (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEqRigid" (formula "36") (term "0,2,0") (ifseqformula "33"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_or_2" (formula "35") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "qeq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0"))
                                 (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                 (rule "concrete_or_2" (formula "31") (term "0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (rule "concrete_or_2" (formula "31"))
                                 (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                                 (rule "times_zero_1" (formula "19") (term "0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "mul_literals" (formula "19") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (rule "concrete_or_1" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                                 (rule "times_zero_1" (formula "24") (term "0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "mul_literals" (formula "24") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "24") (term "1,1,0"))
                                 (rule "greater_literals" (formula "24") (term "0,0"))
                                 (rule "concrete_and_1" (formula "24") (term "0"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (rule "concrete_or_1" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "nnf_imp2or" (formula "35") (term "1,0"))
                                 (rule "double_not" (formula "35") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "commute_and" (formula "15") (term "0,0"))
                                 (rule "commute_and" (formula "19") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                                 (rule "double_not" (formula "14") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,1,0"))
                                 (rule "double_not" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,1,0,1,0"))
                                 (rule "double_not" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0"))
                                 (rule "jdiv_axiom" (formula "16") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "19"))
                                 (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "16") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "16") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "16") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "16") (term "0"))
                                 (rule "polySimp_homoEq" (formula "16"))
                                 (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "16") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "16") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,0"))
                                 (rule "times_zero_1" (formula "16") (term "0"))
                                 (rule "eqClose" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "29") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "8"))
                                 (rule "insert_constant_value" (formula "29") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "insert_constant_value" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "expand_inInt" (formula "29") (term "1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "29") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "29") (term "1,0,1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "exLeft" (formula "36") (inst "sk=i_1_2"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "exLeft" (formula "34") (inst "sk=i_2_0"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "eqSymm" (formula "32") (term "1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "32") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,1,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "ifthenelse_negated" (formula "33") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "inEqSimp_commuteLeq" (formula "38"))
                                 (rule "inEqSimp_commuteLeq" (formula "34"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "27"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "27"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "jmod_axiom" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                 (rule "applyEqRigid" (formula "36") (term "0,1,0") (ifseqformula "16"))
                                 (rule "polySimp_pullOutFactor0" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "1,0"))
                                 (rule "times_zero_1" (formula "36") (term "0"))
                                 (rule "eqClose" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "18"))
                                 (rule "greater_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0"))
                                 (rule "mul_literals" (formula "29") (term "1,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "inEqSimp_subsumption4" (formula "29") (ifseqformula "11"))
                                 (rule "greater_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0"))
                                 (rule "mul_literals" (formula "29") (term "0,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "elimGcdLeq" (formula "38") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "38") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "1,0,1,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "1,1,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "38") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                 (rule "times_zero_1" (formula "34") (term "0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                 (rule "mul_literals" (formula "34") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (rule "concrete_or_1" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                 (rule "times_zero_1" (formula "31") (term "0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "mul_literals" (formula "31") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "31") (term "1,1,0"))
                                 (rule "greater_literals" (formula "31") (term "0,0"))
                                 (rule "concrete_and_1" (formula "31") (term "0"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                 (rule "concrete_or_1" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "nnf_notOr" (formula "13") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                 (rule "commute_or" (formula "44") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "13") (term "0,0"))
                                 (rule "jdiv_axiom" (formula "42") (term "0"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,2,0"))
                                 (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "43"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "42") (term "0,0") (ifseqformula "40"))
                                 (rule "mul_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "42") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "42") (term "0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "42") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "42") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "42") (term "0") (inst "polyDivCoeff=l_1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "42") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "42") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                 (rule "div_literals" (formula "42") (term "0,0"))
                                 (rule "eqClose" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "nnf_imp2or" (formula "37") (term "1,0"))
                                 (rule "commute_or" (formula "44") (term "0,0,0"))
                                 (rule "div_axiom" (formula "41") (term "0,0") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "41") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "41") (term "1,1"))
                                 (rule "equal_literals" (formula "41") (term "0"))
                                 (rule "concrete_or_2" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,1"))
                                 (rule "add_literals" (formula "43") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "43") (term "1"))
                                 (rule "add_literals" (formula "43") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "43"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0"))
                                 (rule "applyEqRigid" (formula "44") (term "0,0") (ifseqformula "41"))
                                 (rule "inEqSimp_homoInEq0" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                 (rule "mul_literals" (formula "42") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1"))
                                 (rule "mul_literals" (formula "43") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,0,1"))
                                 (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "43") (term "0,0"))
                                 (rule "concrete_or_2" (formula "43") (term "0"))
                                 (rule "neg_literal" (formula "43") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0"))
                                 (rule "qeq_literals" (formula "43") (term "0"))
                                 (rule "concrete_or_2" (formula "43"))
                                 (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "42") (term "0,0"))
                                 (rule "concrete_or_2" (formula "42") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0"))
                                 (rule "leq_literals" (formula "42") (term "0"))
                                 (rule "concrete_or_2" (formula "42"))
                                 (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "42") (term "0,0"))
                                 (rule "concrete_or_2" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                                 (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "42") (term "0,0"))
                                 (rule "qeq_literals" (formula "42") (term "0"))
                                 (rule "concrete_or_2" (formula "42"))
                                 (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "44"))
                                 (rule "mul_literals" (formula "18") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                 (rule "mul_literals" (formula "18") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                 (rule "concrete_or_2" (formula "18") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0"))
                                 (rule "leq_literals" (formula "18") (term "0"))
                                 (rule "concrete_or_2" (formula "18"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "45"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "46"))
                                 (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                 (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "47") (term "0"))
                                 (rule "concrete_or_1" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "44"))
                                 (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_literals" (formula "3") (term "1"))
                                 (rule "applyEqRigid" (formula "45") (term "0") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "applyEqRigid" (formula "46") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "46") (term "1,1"))
                                 (rule "add_literals" (formula "46") (term "1"))
                                 (rule "applyEq" (formula "47") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "47") (term "1,1"))
                                 (rule "add_literals" (formula "47") (term "1"))
                                 (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "applyEqRigid" (formula "44") (term "0,1,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "44") (term "1,1"))
                                 (rule "add_literals" (formula "44") (term "1"))
                                 (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "47") (term "1,0,1"))
                                 (rule "add_literals" (formula "47") (term "0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "46") (term "0"))
                                 (rule "concrete_or_1" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                                 (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0"))
                                 (rule "qeq_literals" (formula "46") (term "0"))
                                 (rule "concrete_or_1" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "20"))
                                 (rule "leq_literals" (formula "44") (term "0"))
                                 (rule "concrete_or_1" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "44") (term "0"))
                                 (rule "concrete_or_1" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "shift_paren_or" (formula "20") (term "0,1,0"))
                                 (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_1"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "4"))
                                 (rule "greater_literals" (formula "3") (term "0,0"))
                                 (rule "concrete_and_1" (formula "3") (term "0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "43") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                 (rule "add_literals" (formula "43") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                 (rule "mul_literals" (formula "43") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "43") (term "0,0"))
                                 (rule "concrete_or_2" (formula "43") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                 (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                 (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "43") (term "0,0"))
                                 (rule "leq_literals" (formula "43") (term "0"))
                                 (rule "concrete_or_2" (formula "43"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "44"))
                                 (rule "greater_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_impl_1" (formula "2") (term "0"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (rule "concrete_and_2" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                              (branch "Case 2"
                                 (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "concrete_not_2" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "inEqSimp_geqRight" (formula "42"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                 (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "33") (term "1,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                                 (rule "jmod_axiom" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0"))
                                 (rule "jmod_axiom" (formula "34") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                 (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                 (rule "mod_axiom" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                 (rule "jmod_axiom" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                 (rule "concrete_or_1" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                 (rule "concrete_or_1" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "11") (term "0"))
                                 (rule "concrete_or_1" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "29"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (rule "concrete_or_1" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "polyDiv_pullOut" (formula "30") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "30") (term "0,0,0"))
                                 (rule "ifthenelse_false" (formula "30") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "0"))
                                 (rule "mul_literals" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "1") (term "0,0,0"))
                                 (rule "ifthenelse_false" (formula "1") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "12") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "1,1,0,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "12") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "12") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_1" (formula "12") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "1") (term "0,0,1,0,1"))
                                 (rule "ifthenelse_false" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1,1,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                 (rule "newSym_eq" (formula "15") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                 (rule "times_zero_1" (formula "15") (term "1,1"))
                                 (rule "add_zero_right" (formula "15") (term "1"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "15"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "15"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "applyEqRigid" (formula "11") (term "1,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "14") (term "1,1,0,0,0") (ifseqformula "15"))
                                 (rule "applyEqRigid" (formula "31") (term "1,1") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "12") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "1") (term "1"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                                 (rule "applyEqRigid" (formula "12") (term "1,0,1,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "31") (term "1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "12") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "26") (term "1") (ifseqformula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0"))
                                 (rule "concrete_or_2" (formula "17") (term "0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (rule "concrete_or_2" (formula "17"))
                                 (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "10") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "10") (term "0,0"))
                                 (rule "concrete_or_2" (formula "10") (term "0"))
                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "10") (term "0,0"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_2" (formula "10"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "12") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "12") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "12") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "12") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "12") (term "0,1,0,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "32") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                 (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                 (rule "add_literals" (formula "32") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0"))
                                 (rule "mul_literals" (formula "33") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1"))
                                 (rule "applyEqRigid" (formula "31") (term "0,1,1") (ifseqformula "33"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                 (rule "add_literals" (formula "31") (term "0,0,1"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "0,0"))
                                 (rule "applyEqRigid" (formula "1") (term "1,0,0,1,1") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "36") (term "0,2,0") (ifseqformula "33"))
                                 (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                 (rule "add_literals" (formula "30") (term "0,0"))
                                 (rule "applyEq" (formula "34") (term "1,1,0,0,0,0") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "33"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "1") (term "0,1,0,0,0") (ifseqformula "33"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                 (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(add(add(Z(neglit(1(#))), l_1),
        mul(l_0, Z(neglit(1(#))))),
    mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
                mul(l_0, Z(2(#)))),
            Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
        Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "1") (term "0,0"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                 (rule "neg_literal" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_or_2" (formula "30") (term "0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                 (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                 (rule "concrete_or_2" (formula "30"))
                                 (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_or_2" (formula "35") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                 (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "qeq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_2" (formula "35"))
                                 (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "31") (term "0,0"))
                                 (rule "concrete_or_2" (formula "31") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "31") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0"))
                                 (rule "qeq_literals" (formula "31") (term "0"))
                                 (rule "concrete_or_2" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "36") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (rule "concrete_or_1" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                                 (rule "times_zero_1" (formula "20") (term "0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "mul_literals" (formula "20") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "20") (term "0"))
                                 (rule "concrete_or_1" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "25") (term "0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "18"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0"))
                                 (rule "greater_literals" (formula "25") (term "0,0"))
                                 (rule "concrete_and_1" (formula "25") (term "0"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (rule "concrete_or_1" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "1,0"))
                                 (rule "double_not" (formula "35") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "commute_and" (formula "19") (term "0,0"))
                                 (rule "commute_and" (formula "15") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                                 (rule "double_not" (formula "14") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,1,0"))
                                 (rule "double_not" (formula "13") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "35") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,1,0"))
                                 (rule "jdiv_axiom" (formula "16") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "applyEqRigid" (formula "16") (term "1") (ifseqformula "17"))
                                 (rule "inEqSimp_subsumption6" (formula "16") (term "0,0") (ifseqformula "19"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "16") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "16") (term "0,0,0"))
                                 (rule "leq_literals" (formula "16") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "16") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "16") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "16") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "16") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "16") (term "0"))
                                 (rule "polySimp_pullOutFactor0" (formula "16") (term "0,0,0"))
                                 (rule "add_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "0,0,0"))
                                 (rule "div_literals" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "eqClose" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,1,0,1,0"))
                                 (rule "double_not" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "29") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "8"))
                                 (rule "insert_constant_value" (formula "29") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "insert_constant_value" (formula "29") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "expand_inInt" (formula "29") (term "1"))
                                 (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "29") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "29") (term "1,0,1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "30"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "notLeft" (formula "29"))
                                 (rule "exLeft" (formula "36") (inst "sk=i_1_2"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "exLeft" (formula "34") (inst "sk=i_2_0"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "eqSymm" (formula "32") (term "1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "32") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,1,1,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,1,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,2,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "ifthenelse_negated" (formula "33") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "42") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "41") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "43"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "30"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "inEqSimp_commuteLeq" (formula "38"))
                                 (rule "inEqSimp_commuteLeq" (formula "34"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "27"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0"))
                                 (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "29") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "42") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "41") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "33") (term "0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "39") (term "0,0,1,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "16"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                 (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "applyEqRigid" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "32") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "applyEqRigid" (formula "32") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "jmod_axiom" (formula "36") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                 (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "16"))
                                 (rule "polySimp_pullOutFactor0" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "1,0"))
                                 (rule "times_zero_1" (formula "36") (term "0"))
                                 (rule "eqClose" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "18"))
                                 (rule "greater_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0"))
                                 (rule "mul_literals" (formula "29") (term "1,0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "inEqSimp_subsumption4" (formula "29") (ifseqformula "11"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0"))
                                 (rule "greater_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_1" (formula "29") (term "0"))
                                 (rule "leq_literals" (formula "29") (term "0"))
                                 (rule "concrete_or_1" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "elimGcdLeq" (formula "38") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "38") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "1,0,1,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "1,1,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "38") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "38") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "38") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "38") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                 (rule "times_zero_1" (formula "31") (term "0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                 (rule "mul_literals" (formula "31") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "18"))
                                 (rule "greater_literals" (formula "31") (term "0,0"))
                                 (rule "concrete_and_1" (formula "31") (term "0"))
                                 (rule "mul_literals" (formula "31") (term "1,0"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                 (rule "concrete_or_1" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "35"))
                                 (rule "times_zero_1" (formula "34") (term "0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                 (rule "mul_literals" (formula "34") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                 (rule "concrete_or_1" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "13") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "nnf_imp2or" (formula "29") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "30") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "44") (term "1,0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "jdiv_axiom" (formula "42") (term "0"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "42") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "42") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "42") (term "0,0,0,2,0"))
                                 (rule "applyEq" (formula "42") (term "1") (ifseqformula "43"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "42") (term "0,0") (ifseqformula "40"))
                                 (rule "greater_literals" (formula "42") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "42") (term "0,0,0"))
                                 (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "42") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "42") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "42") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "42") (term "0") (inst "polyDivCoeff=l_1"))
                                 (rule "equal_literals" (formula "42") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "42"))
                                 (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "42") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "42") (term "0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "times_zero_1" (formula "42") (term "0"))
                                 (rule "eqClose" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "commute_or" (formula "13") (term "0,0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "1,0"))
                                 (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                 (rule "equal_literals" (formula "1") (term "0"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "add_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "44"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                 (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                 (rule "polySimp_mulComm0" (formula "44") (term "1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "44") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "44") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1"))
                                 (rule "mul_literals" (formula "44") (term "0,0,1"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_2" (formula "3"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "3"))
                                 (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "0,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                 (rule "add_literals" (formula "45") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "45") (term "0"))
                                 (rule "concrete_or_1" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "22") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                 (rule "mul_literals" (formula "22") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                 (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "46") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                 (rule "add_literals" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                 (rule "mul_literals" (formula "46") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "46") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "46") (term "1,1,0"))
                                 (rule "greater_literals" (formula "46") (term "0,0"))
                                 (rule "concrete_and_1" (formula "46") (term "0"))
                                 (rule "leq_literals" (formula "46") (term "0"))
                                 (rule "concrete_or_1" (formula "46"))
                                 (rule "true_left" (formula "46"))
                                 (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_literals" (formula "3") (term "1"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                 (rule "qeq_literals" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "7") (term "1,1"))
                                 (rule "add_literals" (formula "7") (term "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEqRigid" (formula "46") (term "0,1,1") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "46") (term "1,1"))
                                 (rule "add_literals" (formula "46") (term "1"))
                                 (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "3") (term "1,1"))
                                 (rule "add_literals" (formula "3") (term "1"))
                                 (rule "applyEq" (formula "47") (term "0,1,0,1") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "47") (term "1,0,1"))
                                 (rule "add_literals" (formula "47") (term "0,1"))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "4") (term "0,1,0,0,1") (ifseqformula "22"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "4") (term "0,0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "46"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "45") (term "0"))
                                 (rule "concrete_or_1" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                 (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "45") (term "0,0"))
                                 (rule "qeq_literals" (formula "45") (term "0"))
                                 (rule "concrete_or_1" (formula "45"))
                                 (rule "true_left" (formula "45"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "21"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "div_axiom" (formula "2") (term "0,0") (inst "quotient=quotient_1"))
                                 (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                 (rule "equal_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                 (rule "add_literals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "4") (term "1"))
                                 (rule "add_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0"))
                                 (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_2" (formula "4"))
                                 (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_2" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(2(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (rule "concrete_or_2" (formula "7") (term "0"))
                                 (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_2" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "5"))
                                 (rule "mul_literals" (formula "24") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "24"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "46") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                 (rule "add_literals" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                 (rule "mul_literals" (formula "46") (term "1"))
                                 (rule "inEqSimp_contradInEq3" (formula "46") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0"))
                                 (rule "greater_literals" (formula "46") (term "0,0"))
                                 (rule "concrete_impl_1" (formula "46") (term "0"))
                                 (rule "qeq_literals" (formula "46") (term "0"))
                                 (rule "concrete_and_2" (formula "46"))
                                 (rule "closeFalse" (formula "46"))
                              )
                           )
                           (branch "Case 2"
                              (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                              (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                              (rule "concrete_or_2" (formula "1") (term "0"))
                              (rule "concrete_not_2" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "14") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "32") (term "1,0,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "18") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                              (rule "mod_axiom" (formula "42") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                              (rule "add_literals" (formula "42") (term "0,0,0,0"))
                              (rule "jmod_axiom" (formula "34") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                              (rule "polySimp_homoEq" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0"))
                              (rule "jmod_axiom" (formula "33") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0"))
                              (rule "mod_axiom" (formula "32") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                              (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0,0"))
                              (rule "jmod_axiom" (formula "16") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                              (rule "polySimp_sepNegMonomial" (formula "16"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                              (rule "mul_literals" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                              (rule "leq_literals" (formula "11") (term "0"))
                              (rule "concrete_or_1" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "30"))
                              (rule "leq_literals" (formula "35") (term "0"))
                              (rule "concrete_or_1" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "9"))
                              (rule "leq_literals" (formula "17") (term "0"))
                              (rule "concrete_or_1" (formula "17"))
                              (rule "true_left" (formula "17"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (rule "concrete_or_1" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "equal_literals" (formula "29") (term "0,0,0"))
                              (rule "ifthenelse_false" (formula "29") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "0"))
                              (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
                              (rule "add_literals" (formula "29") (term "0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "0"))
                              (rule "mul_literals" (formula "29") (term "0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "elimGcdLeq" (formula "11") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "1,0,1,1,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "1,1,0,0,0,1,1,0"))
                              (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0,1,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,1,1,0"))
                              (rule "polyDiv_pullOut" (formula "38") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0,1,0,0"))
                              (rule "equal_literals" (formula "38") (term "0,0,1,0,0"))
                              (rule "ifthenelse_false" (formula "38") (term "0,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,0"))
                              (rule "elimGcdGeq" (formula "11") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "11") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "elimGcdGeq" (formula "11") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "11") (term "0,1,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,1,1,0,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "newSym_eq" (formula "14") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                              (rule "times_zero_1" (formula "14") (term "1,1"))
                              (rule "add_zero_right" (formula "14") (term "1"))
                              (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_homoInEq1" (formula "19"))
                              (rule "polySimp_addComm1" (formula "19") (term "0"))
                              (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "14"))
                              (rule "eqSymm" (formula "15"))
                              (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "14"))
                              (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "11") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                              (rule "applyEqRigid" (formula "30") (term "1,1") (ifseqformula "15"))
                              (rule "polySimp_addComm1" (formula "30") (term "1"))
                              (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "14") (term "0,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "12") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "12") (term "1,0,1,0,1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                              (rule "applyEq" (formula "25") (term "1") (ifseqformula "15"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1"))
                              (rule "polySimp_rightDist" (formula "19") (term "1"))
                              (rule "mul_literals" (formula "19") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                              (rule "mul_literals" (formula "24") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "16") (term "0,0"))
                              (rule "concrete_or_2" (formula "16") (term "0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0"))
                              (rule "leq_literals" (formula "16") (term "0"))
                              (rule "concrete_or_2" (formula "16"))
                              (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "9") (term "0,0"))
                              (rule "concrete_or_2" (formula "9") (term "0"))
                              (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_zero_right" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (rule "concrete_or_2" (formula "9"))
                              (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,0,1,1,0"))
                              (rule "newSym_eq" (formula "31") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                              (rule "times_zero_1" (formula "31") (term "1,1,1"))
                              (rule "add_zero_right" (formula "31") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "31") (term "1"))
                              (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "31"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0"))
                              (rule "polySimp_rightDist" (formula "32") (term "0"))
                              (rule "mul_literals" (formula "32") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "32"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                              (rule "mul_literals" (formula "32") (term "0,1"))
                              (rule "applyEqRigid" (formula "40") (term "1,0,0,1,0,0") (ifseqformula "32"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                              (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "32"))
                              (rule "inEqSimp_homoInEq0" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "0,0"))
                              (rule "applyEq" (formula "35") (term "0,2,0") (ifseqformula "32"))
                              (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "32"))
                              (rule "inEqSimp_homoInEq1" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                              (rule "add_literals" (formula "29") (term "0,0"))
                              (rule "applyEq" (formula "33") (term "1,1,0,0,0,0") (ifseqformula "32"))
                              (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "33") (term "0,1,0,0,0,0"))
                              (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                              (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "32"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                              (rule "mul_literals" (formula "30") (term "0,1,1"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                              (rule "polySimp_addComm1" (formula "30") (term "1"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                              (rule "add_literals" (formula "30") (term "0,0,1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "32"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "applyEq" (formula "40") (term "1,0,0,0") (ifseqformula "32"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                              (rule "add_literals" (formula "40") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "1") (term "0,0"))
                              (rule "concrete_or_2" (formula "1") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "leq_literals" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "29") (term "0,0"))
                              (rule "concrete_or_2" (formula "29") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "0,0"))
                              (rule "leq_literals" (formula "29") (term "0"))
                              (rule "concrete_or_2" (formula "29"))
                              (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "34") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "34") (term "0,0"))
                              (rule "concrete_or_2" (formula "34") (term "0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                              (rule "add_literals" (formula "34") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                              (rule "add_zero_right" (formula "34") (term "0,0"))
                              (rule "qeq_literals" (formula "34") (term "0"))
                              (rule "concrete_or_2" (formula "34"))
                              (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "30") (term "0,0"))
                              (rule "concrete_or_2" (formula "30") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                              (rule "neg_literal" (formula "30") (term "0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0"))
                              (rule "qeq_literals" (formula "30") (term "0"))
                              (rule "concrete_or_2" (formula "30"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "1"))
                              (rule "leq_literals" (formula "35") (term "0"))
                              (rule "concrete_or_1" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "25"))
                              (rule "times_zero_1" (formula "24") (term "0,0"))
                              (rule "add_zero_left" (formula "24") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                              (rule "mul_literals" (formula "24") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "24") (ifseqformula "17"))
                              (rule "mul_literals" (formula "24") (term "1,1,0"))
                              (rule "greater_literals" (formula "24") (term "0,0"))
                              (rule "concrete_and_1" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24") (term "0"))
                              (rule "concrete_or_1" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "19") (term "0,0"))
                              (rule "add_zero_left" (formula "19") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                              (rule "mul_literals" (formula "19") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                              (rule "leq_literals" (formula "19") (term "0"))
                              (rule "concrete_or_1" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "nnf_imp2or" (formula "14") (term "1,0"))
                              (rule "nnf_imp2or" (formula "34") (term "1,0"))
                              (rule "double_not" (formula "34") (term "0,1,0"))
                              (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "commute_and" (formula "14") (term "0,0"))
                              (rule "commute_and" (formula "18") (term "0,0"))
                              (rule "nnf_imp2or" (formula "34") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_imp2or" (formula "13") (term "1,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "12") (term "1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,1,0"))
                              (rule "double_not" (formula "13") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0"))
                              (rule "nnf_imp2or" (formula "13") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,1,0"))
                              (rule "double_not" (formula "12") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0"))
                              (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                              (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
                              (rule "add_literals" (formula "34") (term "0,0,1,0,0,0"))
                              (rule "add_zero_left" (formula "34") (term "0,1,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,1,0,1,0"))
                              (rule "double_not" (formula "18") (term "0,0,1,0,1,0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
                              (rule "jdiv_axiom" (formula "15") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                              (rule "eqSymm" (formula "15"))
                              (rule "applyEq" (formula "15") (term "1") (ifseqformula "16"))
                              (rule "inEqSimp_subsumption6" (formula "15") (term "0,0") (ifseqformula "18"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                              (rule "greater_literals" (formula "15") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                              (rule "leq_literals" (formula "15") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "15") (term "0,0"))
                              (rule "ifthenelse_true" (formula "15") (term "0"))
                              (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                              (rule "equal_literals" (formula "15") (term "0,0"))
                              (rule "ifthenelse_false" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0"))
                              (rule "add_literals" (formula "15") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "15") (term "0,0,0"))
                              (rule "div_literals" (formula "15") (term "0,0"))
                              (rule "add_zero_left" (formula "15") (term "0"))
                              (rule "eqClose" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "nnf_notOr" (formula "12") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0,1,1,0"))
                              (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
                              (rule "insert_constant_value" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "insert_constant_value" (formula "28") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "expand_inInt" (formula "28") (term "1"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                              (rule "replace_int_MAX" (formula "28") (term "1,0,1"))
                              (rule "replace_int_MIN" (formula "28") (term "0,1,1"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "29"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "exLeft" (formula "35") (inst "sk=i_1_2"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "exLeft" (formula "33") (inst "sk=i_2_0"))
                              (rule "andLeft" (formula "33"))
                              (rule "andLeft" (formula "33"))
                              (rule "eqSymm" (formula "32"))
                              (rule "eqSymm" (formula "31") (term "1,1,0,1,0"))
                              (rule "eqSymm" (formula "31") (term "1,0,1,0,1,0"))
                              (rule "eqSymm" (formula "35"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,0,0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "0,2,0"))
                              (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,1,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,0,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "38"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "38") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0"))
                              (rule "ifthenelse_negated" (formula "32") (term "2,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "40") (term "1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "42"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_commuteGeq" (formula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "28"))
                              (rule "inEqSimp_commuteLeq" (formula "37"))
                              (rule "inEqSimp_commuteLeq" (formula "33"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,1,0"))
                              (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "26"))
                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "34") (term "0"))
                              (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "26") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                              (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "26"))
                              (rule "applyEq" (formula "35") (term "1") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "15"))
                              (rule "polySimp_addComm1" (formula "38") (term "0"))
                              (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                              (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "applyEqRigid" (formula "31") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                              (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEqRigid" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                              (rule "jmod_axiom" (formula "35") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                              (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "15"))
                              (rule "polySimp_pullOutFactor0" (formula "35") (term "0"))
                              (rule "add_literals" (formula "35") (term "1,0"))
                              (rule "times_zero_1" (formula "35") (term "0"))
                              (rule "eqClose" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                              (rule "mul_literals" (formula "33") (term "0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1"))
                              (rule "polySimp_rightDist" (formula "36") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                              (rule "mul_literals" (formula "36") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "17"))
                              (rule "greater_literals" (formula "28") (term "0,0"))
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "mul_literals" (formula "28") (term "1,0"))
                              (rule "leq_literals" (formula "28") (term "0"))
                              (rule "concrete_or_1" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_subsumption4" (formula "28") (ifseqformula "10"))
                              (rule "mul_literals" (formula "28") (term "0,1,0"))
                              (rule "greater_literals" (formula "28") (term "0,0"))
                              (rule "concrete_and_1" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28") (term "0"))
                              (rule "concrete_or_1" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "elimGcdLeq" (formula "37") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "37") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "leq_literals" (formula "37") (term "0,1,0,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "37") (term "1,0,0,0,1,1,0"))
                              (rule "elimGcdLeq" (formula "37") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                              (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "37") (term "1,0,1,1,0,0,1,1,0"))
                              (rule "concrete_and_3" (formula "37") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "leq_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "37") (term "1,1,0,0,1,1,0"))
                              (rule "elimGcdGeq" (formula "37") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                              (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0,0,1,1,0"))
                              (rule "qeq_literals" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "concrete_and_1" (formula "37") (term "0,0,1,0,0,1,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "leq_literals" (formula "37") (term "0,0,1,0,0,1,1,0"))
                              (rule "ifthenelse_true_for" (formula "37") (term "0,1,0,0,1,1,0"))
                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                              (rule "times_zero_1" (formula "30") (term "0,0"))
                              (rule "add_zero_left" (formula "30") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                              (rule "mul_literals" (formula "30") (term "1"))
                              (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "17"))
                              (rule "mul_literals" (formula "30") (term "1,1,0"))
                              (rule "greater_literals" (formula "30") (term "0,0"))
                              (rule "concrete_and_1" (formula "30") (term "0"))
                              (rule "leq_literals" (formula "30") (term "0"))
                              (rule "concrete_or_1" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                              (rule "times_zero_1" (formula "33") (term "0,0"))
                              (rule "add_zero_left" (formula "33") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                              (rule "mul_literals" (formula "33") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "17"))
                              (rule "leq_literals" (formula "33") (term "0"))
                              (rule "concrete_or_1" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "nnf_notOr" (formula "12") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0,0,0,1,1,0"))
                              (rule "nnf_imp2or" (formula "28") (term "1,0"))
                              (rule "nnf_imp2or" (formula "29") (term "1,0,1,0"))
                              (rule "commute_or" (formula "43") (term "1,0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_or_2" (formula "14") (term "0"))
                              (rule "commute_or" (formula "12") (term "0,0"))
                              (rule "div_axiom" (formula "49") (term "0,1,0,0") (inst "quotient=quotient_0"))
                              (rule "qeq_literals" (formula "1") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                              (rule "equal_literals" (formula "1") (term "0"))
                              (rule "concrete_or_2" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                              (rule "add_literals" (formula "3") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "3") (term "1"))
                              (rule "add_literals" (formula "3") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "applyEq" (formula "52") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                              (rule "jmod_axiom" (formula "52") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "52") (term "1"))
                              (rule "polySimp_rightDist" (formula "52") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                              (rule "mul_literals" (formula "52") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "elimGcdEq" (formula "52") (inst "elimGcdRightDiv=add(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(quotient_0,
            Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=jdiv(add(add(Z(neglit(5(9(2(7(6(9(4(9(2(4(#)))))))))))),
             mul(quotient_0,
                 Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))),
         mul(l_1, Z(2(#)))),
     Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                              (rule "eqClose" (formula "52") (term "0,0,0"))
                              (rule "concrete_and_1" (formula "52") (term "0,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,1"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,1,0,0,0"))
                              (rule "add_literals" (formula "52") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,1"))
                              (rule "mul_literals" (formula "52") (term "0,0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,1,0,1,0"))
                              (rule "mul_literals" (formula "52") (term "0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "52") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "52") (term "0,0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0,1"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "52") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,1,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "52") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "52") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0,1"))
                              (rule "add_zero_left" (formula "52") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor0" (formula "52") (term "0,0,1"))
                              (rule "add_literals" (formula "52") (term "1,0,0,1"))
                              (rule "times_zero_1" (formula "52") (term "0,0,1"))
                              (rule "eqClose" (formula "52") (term "0,1"))
                              (rule "concrete_and_1" (formula "52") (term "1"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,1,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,1,0"))
                              (rule "polySimp_pullOutFactor0" (formula "52") (term "0,1,0"))
                              (rule "add_literals" (formula "52") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "52") (term "0,1,0"))
                              (rule "qeq_literals" (formula "52") (term "1,0"))
                              (rule "concrete_and_3" (formula "52") (term "0"))
                              (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                              (rule "add_literals" (formula "52") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "52") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0" (formula "52") (term "0,0"))
                              (rule "add_literals" (formula "52") (term "1,0,0"))
                              (rule "times_zero_1" (formula "52") (term "0,0"))
                              (rule "leq_literals" (formula "52") (term "0"))
                              (rule "ifthenelse_true_for" (formula "52"))
                              (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "3") (term "0,0"))
                              (rule "concrete_or_2" (formula "3") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0"))
                              (rule "qeq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_2" (formula "3"))
                              (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                              (rule "concrete_or_2" (formula "2") (term "0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_2" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                              (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "2") (term "0,0"))
                              (rule "concrete_or_2" (formula "2") (term "0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_2" (formula "2"))
                              (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "4"))
                              (rule "mul_literals" (formula "43") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0"))
                              (rule "add_literals" (formula "43") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                              (rule "mul_literals" (formula "43") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "43") (term "0,0"))
                              (rule "concrete_or_2" (formula "43") (term "0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                              (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                              (rule "add_literals" (formula "43") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0"))
                              (rule "leq_literals" (formula "43") (term "0"))
                              (rule "concrete_or_2" (formula "43"))
                              (rule "inEqSimp_antiSymm" (formula "43") (ifseqformula "2"))
                              (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "43"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "43"))
                              (rule "leq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "43") (term "0") (ifseqformula "42"))
                              (rule "qeq_literals" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "42"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "applyEq" (formula "53") (term "0,1,0,0,0") (ifseqformula "42"))
                              (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                              (rule "add_literals" (formula "53") (term "0,0,0"))
                              (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "42"))
                              (rule "applyEq" (formula "53") (term "0,1,0,1") (ifseqformula "42"))
                              (rule "mul_literals" (formula "53") (term "1,0,1"))
                              (rule "add_literals" (formula "53") (term "0,1"))
                              (rule "add_zero_left" (formula "53") (term "1"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_1" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "42"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "jdiv_axiom" (formula "43") (term "0"))
                              (rule "eqSymm" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                              (rule "mul_literals" (formula "43") (term "0,0,0,2,0"))
                              (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0"))
                              (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "41"))
                              (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "43") (term "0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                              (rule "leq_literals" (formula "43") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "43") (term "0,0"))
                              (rule "ifthenelse_true" (formula "43") (term "0"))
                              (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_1"))
                              (rule "equal_literals" (formula "43") (term "0,0"))
                              (rule "ifthenelse_false" (formula "43") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_homoEq" (formula "43"))
                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0,0,1,0"))
                              (rule "div_literals" (formula "43") (term "0,0,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                              (rule "add_literals" (formula "43") (term "1,0"))
                              (rule "times_zero_1" (formula "43") (term "0"))
                              (rule "eqClose" (formula "43"))
                              (rule "true_left" (formula "43"))
                              (rule "nnf_imp2or" (formula "37") (term "1,0"))
                              (rule "commute_or" (formula "45") (term "0,0,0"))
                              (rule "shift_paren_or" (formula "19") (term "0,1,0"))
                              (rule "div_axiom" (formula "42") (term "0,0") (inst "quotient=quotient_1"))
                              (rule "mul_literals" (formula "42") (term "1,1,1,1,1"))
                              (rule "qeq_literals" (formula "42") (term "0,1,1"))
                              (rule "ifthenelse_true_for" (formula "42") (term "1,1"))
                              (rule "equal_literals" (formula "42") (term "0"))
                              (rule "concrete_or_2" (formula "42"))
                              (rule "andLeft" (formula "42"))
                              (rule "andLeft" (formula "42"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,1"))
                              (rule "add_literals" (formula "44") (term "0,0,1"))
                              (rule "polySimp_addComm1" (formula "44") (term "1"))
                              (rule "add_literals" (formula "44") (term "0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "43"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "44"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0"))
                              (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "42"))
                              (rule "inEqSimp_homoInEq0" (formula "45"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1"))
                              (rule "polySimp_rightDist" (formula "43") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                              (rule "mul_literals" (formula "43") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                              (rule "polySimp_mulComm0" (formula "44") (term "1"))
                              (rule "polySimp_rightDist" (formula "44") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                              (rule "mul_literals" (formula "44") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1"))
                              (rule "polySimp_rightDist" (formula "45") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "45") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1"))
                              (rule "mul_literals" (formula "45") (term "0,0,1"))
                              (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "44") (term "0,0"))
                              (rule "concrete_or_2" (formula "44") (term "0"))
                              (rule "neg_literal" (formula "44") (term "0,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                              (rule "add_literals" (formula "44") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                              (rule "add_literals" (formula "44") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "44") (term "1,0,0"))
                              (rule "add_zero_right" (formula "44") (term "0,0"))
                              (rule "qeq_literals" (formula "44") (term "0"))
                              (rule "concrete_or_2" (formula "44"))
                              (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "43") (term "0,0"))
                              (rule "concrete_or_2" (formula "43") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                              (rule "add_literals" (formula "43") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                              (rule "add_literals" (formula "43") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0"))
                              (rule "leq_literals" (formula "43") (term "0"))
                              (rule "concrete_or_2" (formula "43"))
                              (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                              (rule "mul_literals" (formula "43") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "43") (term "0"))
                              (rule "add_literals" (formula "43") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                              (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                              (rule "neg_literal" (formula "43") (term "0,0,0,0,0,1,0"))
                              (rule "leq_literals" (formula "43") (term "0,0"))
                              (rule "concrete_or_2" (formula "43") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                              (rule "add_literals" (formula "43") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                              (rule "add_literals" (formula "43") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "43") (term "1,0,0"))
                              (rule "add_zero_right" (formula "43") (term "0,0"))
                              (rule "qeq_literals" (formula "43") (term "0"))
                              (rule "concrete_or_2" (formula "43"))
                              (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "46") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "46") (term "0"))
                              (rule "polySimp_rightDist" (formula "46") (term "0,0,0"))
                              (rule "mul_literals" (formula "46") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                              (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                              (rule "add_literals" (formula "46") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                              (rule "polySimp_elimOne" (formula "46") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "45"))
                              (rule "mul_literals" (formula "18") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0"))
                              (rule "add_literals" (formula "18") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                              (rule "mul_literals" (formula "18") (term "1"))
                              (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "18") (term "0,0"))
                              (rule "concrete_or_2" (formula "18") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0"))
                              (rule "leq_literals" (formula "18") (term "0"))
                              (rule "concrete_or_2" (formula "18"))
                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                              (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0"))
                              (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                              (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                              (rule "add_literals" (formula "48") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                              (rule "add_literals" (formula "48") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "48") (term "1,0,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                              (rule "polySimp_elimOne" (formula "48") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "2"))
                              (rule "leq_literals" (formula "48") (term "0"))
                              (rule "concrete_or_1" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "46"))
                              (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "45"))
                              (rule "applyEqRigid" (formula "49") (term "0,1,1") (ifseqformula "19"))
                              (rule "mul_literals" (formula "49") (term "1,1"))
                              (rule "add_literals" (formula "49") (term "1"))
                              (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "19"))
                              (rule "mul_literals" (formula "3") (term "1,1"))
                              (rule "add_literals" (formula "3") (term "1"))
                              (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "19"))
                              (rule "mul_literals" (formula "48") (term "1,1"))
                              (rule "add_literals" (formula "48") (term "1"))
                              (rule "applyEqRigid" (formula "47") (term "0,1,1") (ifseqformula "19"))
                              (rule "mul_literals" (formula "47") (term "1,1"))
                              (rule "add_literals" (formula "47") (term "1"))
                              (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "19"))
                              (rule "leq_literals" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                              (rule "qeq_literals" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "applyEq" (formula "48") (term "0,1,0,1") (ifseqformula "19"))
                              (rule "mul_literals" (formula "48") (term "1,0,1"))
                              (rule "add_literals" (formula "48") (term "0,1"))
                              (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "19"))
                              (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "2"))
                              (rule "leq_literals" (formula "47") (term "0"))
                              (rule "concrete_or_1" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                              (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                              (rule "add_literals" (formula "47") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "47") (term "1,0,0"))
                              (rule "add_zero_right" (formula "47") (term "0,0"))
                              (rule "qeq_literals" (formula "47") (term "0"))
                              (rule "concrete_or_1" (formula "47"))
                              (rule "true_left" (formula "47"))
                              (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "20"))
                              (rule "leq_literals" (formula "45") (term "0"))
                              (rule "concrete_or_1" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "inEqSimp_subsumption0" (formula "45") (ifseqformula "12"))
                              (rule "leq_literals" (formula "45") (term "0"))
                              (rule "concrete_or_1" (formula "45"))
                              (rule "true_left" (formula "45"))
                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                              (rule "leq_literals" (formula "3") (term "0"))
                              (rule "concrete_or_1" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
                              (rule "nnf_imp2or" (formula "39") (term "0"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "nnf_imp2or" (formula "31") (term "0"))
                              (rule "nnf_notOr" (formula "13") (term "1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                              (rule "nnf_notOr" (formula "13") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0"))
                              (rule "nnf_imp2or" (formula "38") (term "0"))
                              (rule "commute_or" (formula "15") (term "0,0"))
                              (rule "nnf_imp2or" (formula "39") (term "1,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "30") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                              (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "31") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                              (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                              (rule "nnf_imp2or" (formula "31") (term "0,1,0"))
                              (rule "commute_or_2" (formula "46") (term "0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                              (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                              (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,1,0"))
                              (rule "double_not" (formula "38") (term "0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,1,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,1,0"))
                              (rule "double_not" (formula "39") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,1,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,0"))
                              (rule "nnf_imp2or" (formula "38") (term "0,1,1,0"))
                              (rule "nnf_imp2or" (formula "39") (term "0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0"))
                              (rule "inEqSimp_or_weaken2" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "1,0,1,0,1,0"))
                              (rule "add_literals" (formula "20") (term "0,1,0,1,0,1,0"))
                              (rule "add_zero_left" (formula "20") (term "1,0,1,0,1,0"))
                              (rule "eqClose" (formula "20") (term "0,1,0,1,0"))
                              (rule "ifthenelse_true_for" (formula "20") (term "1,0,1,0"))
                              (rule "nnf_notAnd" (formula "31") (term "0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,1,0"))
                              (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,1,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,1,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,1,0"))
                              (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                              (rule "nnf_notAnd" (formula "31") (term "0,1,0,1,0"))
                              (rule "double_not" (formula "31") (term "0,0,1,0,1,0"))
                              (rule "nnf_notAnd" (formula "38") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,1,0"))
                              (rule "nnf_notOr" (formula "39") (term "0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "39") (term "1,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "0,1,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "1,0,1,0,0,1,1,0"))
                              (rule "nnf_notAnd" (formula "39") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,1,1,0"))
                              (rule "jdiv_axiom" (formula "52") (term "0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "43"))
                              (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                              (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                              (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "1") (term "0,0"))
                              (rule "ifthenelse_true" (formula "1") (term "0"))
                              (rule "eqSymm" (formula "1"))
                              (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "1"))
                              (rule "polyDiv_pullOut" (formula "53") (term "0") (inst "polyDivCoeff=l_1"))
                              (rule "equal_literals" (formula "53") (term "0,0"))
                              (rule "ifthenelse_false" (formula "53") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0,0"))
                              (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "53") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "53") (term "0,0,0"))
                              (rule "div_literals" (formula "53") (term "0,0"))
                              (rule "add_zero_left" (formula "53") (term "0"))
                              (rule "eqClose" (formula "53"))
                              (rule "closeTrue" (formula "53"))
                           )
                        )
                        (branch "Case 2"
                           (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                           (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                           (rule "concrete_or_2" (formula "1") (term "0"))
                           (rule "concrete_not_2" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "allRight" (formula "42") (inst "sk=n_0"))
                           (rule "impRight" (formula "42"))
                           (rule "andLeft" (formula "1"))
                           (rule "impRight" (formula "44"))
                           (rule "andLeft" (formula "2"))
                           (rule "notRight" (formula "46"))
                           (rule "notLeft" (formula "2"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "25"))
                           (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "25") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "17") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "30") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "17") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0"))
                           (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                           (rule "applyEq" (formula "18") (term "1,0,1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "15") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "18") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "14") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "21") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "1,0,1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "36") (term "1,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "17") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "31"))
                           (rule "jmod_axiom" (formula "37") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0"))
                           (rule "jmod_axiom" (formula "38") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0"))
                           (rule "polySimp_homoEq" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0"))
                           (rule "jmod_axiom" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "mod_axiom" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "jmod_axiom" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                           (rule "mod_axiom" (formula "36") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1"))
                           (rule "mul_literals" (formula "37") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1"))
                           (rule "polySimp_sepPosMonomial" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "20"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                           (rule "polySimp_elimOne" (formula "30") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,1"))
                           (rule "mul_literals" (formula "36") (term "0,0,1"))
                           (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "21"))
                           (rule "leq_literals" (formula "15") (term "0"))
                           (rule "concrete_or_1" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "13"))
                           (rule "leq_literals" (formula "21") (term "0"))
                           (rule "concrete_or_1" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "33"))
                           (rule "leq_literals" (formula "38") (term "0"))
                           (rule "concrete_or_1" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "20"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (rule "concrete_or_1" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "elimGcdGeq" (formula "15") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "15") (term "0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "elimGcdGeq" (formula "15") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "concrete_and_1" (formula "15") (term "0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,1,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "polyDiv_pullOut" (formula "33") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,2,0,0"))
                           (rule "equal_literals" (formula "33") (term "0,0,0"))
                           (rule "ifthenelse_false" (formula "33") (term "0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "0"))
                           (rule "polySimp_addComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,1,1,0"))
                           (rule "add_literals" (formula "33") (term "0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "0"))
                           (rule "mul_literals" (formula "33") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                           (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,1"))
                           (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                           (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1,1,1,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1,1,1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "elimGcdLeq" (formula "15") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "15") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "1,1,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "15") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "15") (term "0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "0,1,0,0,1,1,0"))
                           (rule "newSym_eq" (formula "18") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                           (rule "times_zero_1" (formula "18") (term "1,1"))
                           (rule "add_zero_right" (formula "18") (term "1"))
                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "23"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "21") (term "1,1,0,0,0,1,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "18"))
                           (rule "eqSymm" (formula "19"))
                           (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "21") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "16") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "34") (term "1,0,0,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq0" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "applyEqRigid" (formula "15") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "15") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "applyEqRigid" (formula "15") (term "1,0,1,0,1,0") (ifseqformula "19"))
                           (rule "applyEq" (formula "16") (term "1,0,1,0,1,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "19"))
                           (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "19"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                           (rule "mul_literals" (formula "23") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1"))
                           (rule "polySimp_rightDist" (formula "28") (term "1"))
                           (rule "mul_literals" (formula "28") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                           (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0"))
                           (rule "concrete_or_2" (formula "13") (term "0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                           (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                           (rule "concrete_or_2" (formula "13"))
                           (rule "elimGcdLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "15") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "15") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "15") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "15") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "15") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "15") (term "0,1,0,0,0,1,1,0"))
                           (rule "newSym_eq" (formula "4") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(n_0, Z(0(#))))"))
                           (rule "times_zero_1" (formula "4") (term "1,1,1"))
                           (rule "add_zero_right" (formula "4") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "4") (term "1"))
                           (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                           (rule "polySimp_homoEq" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "applyEq" (formula "39") (term "1,0,2,0") (ifseqformula "5"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,2,0"))
                           (rule "add_literals" (formula "39") (term "0,0,2,0"))
                           (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "5"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "newSym_eq" (formula "36") (inst "l=l_2") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                           (rule "times_zero_1" (formula "36") (term "1,1,1"))
                           (rule "add_zero_right" (formula "36") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "36") (term "1"))
                           (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "36"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0"))
                           (rule "polySimp_rightDist" (formula "37") (term "0"))
                           (rule "mul_literals" (formula "37") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1"))
                           (rule "mul_literals" (formula "37") (term "0,1"))
                           (rule "applyEq" (formula "3") (term "1,0,0,0") (ifseqformula "37"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "applyEq" (formula "38") (term "1,1,0,0,0,0") (ifseqformula "37"))
                           (rule "polySimp_addAssoc" (formula "38") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,1,0,0,0,0"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq0" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0"))
                           (rule "add_literals" (formula "39") (term "0,0"))
                           (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq0" (formula "6"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0"))
                           (rule "add_zero_left" (formula "6") (term "0,0"))
                           (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "37"))
                           (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "37"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "41") (term "0,2,0") (ifseqformula "37"))
                           (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "37"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                           (rule "mul_literals" (formula "35") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "35") (term "1"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,1"))
                           (rule "add_literals" (formula "35") (term "0,0,1"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "37"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "add_literals" (formula "34") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                           (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "34") (term "0,0"))
                           (rule "concrete_or_2" (formula "34") (term "0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0"))
                           (rule "leq_literals" (formula "34") (term "0"))
                           (rule "concrete_or_2" (formula "34"))
                           (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "6") (term "0,0"))
                           (rule "concrete_or_2" (formula "6") (term "0"))
                           (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                           (rule "add_literals" (formula "6") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "leq_literals" (formula "6") (term "0"))
                           (rule "concrete_or_2" (formula "6"))
                           (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "39") (term "0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "39") (term "0,0"))
                           (rule "concrete_or_2" (formula "39") (term "0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0"))
                           (rule "qeq_literals" (formula "39") (term "0"))
                           (rule "concrete_or_2" (formula "39"))
                           (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_2, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "35") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "35") (term "0,0"))
                           (rule "concrete_or_2" (formula "35") (term "0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0"))
                           (rule "qeq_literals" (formula "35") (term "0"))
                           (rule "concrete_or_2" (formula "35"))
                           (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
        l_2),
    mul(l_1, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_2, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "29"))
                           (rule "times_zero_1" (formula "28") (term "0,0"))
                           (rule "add_zero_left" (formula "28") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                           (rule "mul_literals" (formula "28") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "21"))
                           (rule "mul_literals" (formula "28") (term "1,1,0"))
                           (rule "greater_literals" (formula "28") (term "0,0"))
                           (rule "concrete_and_1" (formula "28") (term "0"))
                           (rule "leq_literals" (formula "28") (term "0"))
                           (rule "concrete_or_1" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                           (rule "times_zero_1" (formula "23") (term "0,0"))
                           (rule "add_zero_left" (formula "23") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "21"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (rule "concrete_or_1" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "6") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "40") (ifseqformula "6"))
                           (rule "leq_literals" (formula "40") (term "0"))
                           (rule "concrete_or_1" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "nnf_imp2or" (formula "19") (term "1,0"))
                           (rule "nnf_imp2or" (formula "39") (term "1,0"))
                           (rule "double_not" (formula "39") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "23") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "18") (term "0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "commute_and" (formula "19") (term "0,0"))
                           (rule "commute_and" (formula "23") (term "0,0"))
                           (rule "nnf_imp2or" (formula "39") (term "0"))
                           (rule "nnf_imp2or" (formula "19") (term "0"))
                           (rule "nnf_imp2or" (formula "23") (term "0"))
                           (rule "nnf_notAnd" (formula "18") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "18") (term "1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "17") (term "1,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "18") (term "0,1,0"))
                           (rule "double_not" (formula "18") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "18") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,1,0"))
                           (rule "double_not" (formula "17") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,1,0,0,0"))
                           (rule "nnf_imp2or" (formula "17") (term "0,1,1,0"))
                           (rule "jdiv_axiom" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "20"))
                           (rule "applyEqRigid" (formula "20") (term "1") (ifseqformula "21"))
                           (rule "inEqSimp_subsumption6" (formula "20") (term "0,0") (ifseqformula "23"))
                           (rule "mul_literals" (formula "20") (term "1,1,0,0,0"))
                           (rule "greater_literals" (formula "20") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "20") (term "0,0,0"))
                           (rule "leq_literals" (formula "20") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "20") (term "0,0"))
                           (rule "ifthenelse_true" (formula "20") (term "0"))
                           (rule "polyDiv_pullOut" (formula "20") (term "0") (inst "polyDivCoeff=l_0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "20") (term "0,0"))
                           (rule "ifthenelse_false" (formula "20") (term "0"))
                           (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "0,0,0"))
                           (rule "div_literals" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "eqClose" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "23") (term "0,1,0,1,0"))
                           (rule "double_not" (formula "23") (term "0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "18") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "17") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "17") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0,0,0,1,1,0"))
                           (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "33") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "12"))
                           (rule "insert_constant_value" (formula "33") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "insert_constant_value" (formula "33") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "expand_inInt" (formula "33") (term "1"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replace_int_MAX" (formula "33") (term "1,0,1"))
                           (rule "replace_int_MIN" (formula "33") (term "0,1,1"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "34"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "exLeft" (formula "40") (inst "sk=i_1_2"))
                           (rule "andLeft" (formula "40"))
                           (rule "andLeft" (formula "40"))
                           (rule "exLeft" (formula "38") (inst "sk=i_2_0"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "eqSymm" (formula "37"))
                           (rule "eqSymm" (formula "36") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "36") (term "1,0,1,0,1,0"))
                           (rule "eqSymm" (formula "40"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,2,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,2,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,2,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,2,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,2,0,0,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,2,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,2,0,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,2,0,1,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,2,1,1,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,2,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "ifthenelse_negated" (formula "37") (term "2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "46") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "45") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "47"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "34"))
                           (rule "inEqSimp_commuteLeq" (formula "33"))
                           (rule "inEqSimp_commuteLeq" (formula "42"))
                           (rule "inEqSimp_commuteLeq" (formula "38"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "0,1,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,1,1,0"))
                           (rule "applyEq" (formula "46") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "33") (term "0") (ifseqformula "40"))
                           (rule "applyEq" (formula "43") (term "0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "31"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0"))
                           (rule "applyEq" (formula "41") (term "0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "45") (term "1,0,1,0,1,0,1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "34") (term "0") (ifseqformula "40"))
                           (rule "applyEq" (formula "46") (term "1,0,1,0,1,0,1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "40"))
                           (rule "applyEq" (formula "45") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "46") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "applyEq" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "40"))
                           (rule "applyEqRigid" (formula "43") (term "0,1,0") (ifseqformula "20"))
                           (rule "polySimp_addComm1" (formula "43") (term "0"))
                           (rule "applyEqRigid" (formula "33") (term "0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "31"))
                           (rule "applyEq" (formula "45") (term "1,0,1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "45") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "37") (term "1,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "40") (term "0,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "31"))
                           (rule "applyEq" (formula "45") (term "1,0,1,0,1,0,1,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "36") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "45") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "35") (term "0,0,1,0,0,1,0,0") (ifseqformula "31"))
                           (rule "applyEqRigid" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "31"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "applyEqRigid" (formula "36") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "45") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "36") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "applyEqRigid" (formula "35") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                           (rule "jmod_axiom" (formula "40") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                           (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "20"))
                           (rule "polySimp_pullOutFactor0" (formula "40") (term "0"))
                           (rule "add_literals" (formula "40") (term "1,0"))
                           (rule "times_zero_1" (formula "40") (term "0"))
                           (rule "eqClose" (formula "40"))
                           (rule "true_left" (formula "40"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1"))
                           (rule "mul_literals" (formula "38") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1"))
                           (rule "mul_literals" (formula "41") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                           (rule "inEqSimp_subsumption4" (formula "34") (ifseqformula "15"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "greater_literals" (formula "34") (term "0,0"))
                           (rule "concrete_and_1" (formula "34") (term "0"))
                           (rule "leq_literals" (formula "34") (term "0"))
                           (rule "concrete_or_1" (formula "34"))
                           (rule "true_left" (formula "34"))
                           (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "22"))
                           (rule "greater_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_1" (formula "33") (term "0"))
                           (rule "mul_literals" (formula "33") (term "1,0"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (rule "concrete_or_1" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "elimGcdLeq" (formula "42") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "42") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "42") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "42") (term "0,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "42") (term "1,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "42") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "42") (term "1,0,1,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "42") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "42") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "42") (term "0,1,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "42") (term "1,1,0,0,1,1,0"))
                           (rule "elimGcdGeq" (formula "42") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "42") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "42") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "42") (term "0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "42") (term "1,1,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "42") (term "0,0,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "42") (term "0,1,0,0,1,1,0"))
                           (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                           (rule "times_zero_1" (formula "35") (term "0,0"))
                           (rule "add_zero_left" (formula "35") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                           (rule "mul_literals" (formula "35") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "22"))
                           (rule "greater_literals" (formula "35") (term "0,0"))
                           (rule "concrete_and_1" (formula "35") (term "0"))
                           (rule "mul_literals" (formula "35") (term "1,0"))
                           (rule "leq_literals" (formula "35") (term "0"))
                           (rule "concrete_or_1" (formula "35"))
                           (rule "true_left" (formula "35"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "39"))
                           (rule "times_zero_1" (formula "38") (term "0,0"))
                           (rule "add_zero_left" (formula "38") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "22"))
                           (rule "leq_literals" (formula "38") (term "0"))
                           (rule "concrete_or_1" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "jdiv_axiom" (formula "4") (term "0"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0,2,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                           (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                           (rule "mul_literals" (formula "4") (term "1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "2"))
                           (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "4") (term "0,0"))
                           (rule "ifthenelse_true" (formula "4") (term "0"))
                           (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_1"))
                           (rule "equal_literals" (formula "4") (term "0,0"))
                           (rule "ifthenelse_false" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_homoEq" (formula "4"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "4") (term "0,0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,0"))
                           (rule "times_zero_1" (formula "4") (term "0"))
                           (rule "eqClose" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "nnf_imp2or" (formula "33") (term "1,0"))
                           (rule "nnf_notOr" (formula "17") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "17") (term "1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "17") (term "1,1,1,0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "48") (term "1,0"))
                           (rule "nnf_imp2or" (formula "34") (term "1,0,1,0"))
                           (rule "commute_or" (formula "18") (term "0,0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "jdiv_axiom" (formula "46") (term "0"))
                           (rule "eqSymm" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,0,2,0"))
                           (rule "mul_literals" (formula "46") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,2,0"))
                           (rule "applyEq" (formula "46") (term "1") (ifseqformula "47"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "0,0"))
                           (rule "mul_literals" (formula "46") (term "1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "46") (term "0,0") (ifseqformula "44"))
                           (rule "mul_literals" (formula "46") (term "1,1,0,0,0"))
                           (rule "greater_literals" (formula "46") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "46") (term "0,0,0"))
                           (rule "leq_literals" (formula "46") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "46") (term "0,0"))
                           (rule "ifthenelse_true" (formula "46") (term "0"))
                           (rule "polyDiv_pullOut" (formula "46") (term "0") (inst "polyDivCoeff=l_2"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "46") (term "0,0"))
                           (rule "ifthenelse_false" (formula "46") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0,0"))
                           (rule "div_literals" (formula "46") (term "0,0"))
                           (rule "eqClose" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "commute_or" (formula "17") (term "0,0"))
                           (rule "nnf_imp2or" (formula "41") (term "1,0"))
                           (rule "commute_or" (formula "48") (term "0,0,0"))
                           (rule "div_axiom" (formula "45") (term "0,0") (inst "quotient=quotient_0"))
                           (rule "qeq_literals" (formula "45") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "45") (term "1,1"))
                           (rule "equal_literals" (formula "45") (term "0"))
                           (rule "concrete_or_2" (formula "45"))
                           (rule "mul_literals" (formula "45") (term "1,1,1"))
                           (rule "andLeft" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,1"))
                           (rule "add_literals" (formula "47") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "47") (term "1"))
                           (rule "add_literals" (formula "47") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "47"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "45"))
                           (rule "inEqSimp_homoInEq0" (formula "48"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1"))
                           (rule "polySimp_rightDist" (formula "46") (term "1"))
                           (rule "mul_literals" (formula "46") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1"))
                           (rule "polySimp_rightDist" (formula "47") (term "1"))
                           (rule "mul_literals" (formula "47") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1"))
                           (rule "polySimp_rightDist" (formula "48") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                           (rule "mul_literals" (formula "48") (term "0,0,1"))
                           (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "leq_literals" (formula "47") (term "0,0"))
                           (rule "concrete_or_2" (formula "47") (term "0"))
                           (rule "neg_literal" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "qeq_literals" (formula "47") (term "0"))
                           (rule "concrete_or_2" (formula "47"))
                           (rule "elimGcdGeq_antec" (formula "46") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "46") (term "0,0"))
                           (rule "concrete_or_2" (formula "46") (term "0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "leq_literals" (formula "46") (term "0"))
                           (rule "concrete_or_2" (formula "46"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "47"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                           (rule "polySimp_elimOne" (formula "48") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "6"))
                           (rule "leq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_1" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "15"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                           (rule "polySimp_elimOne" (formula "48") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "47"))
                           (rule "polySimp_mulComm0" (formula "7") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "7") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                           (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                           (rule "polySimp_elimOne" (formula "7") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "48"))
                           (rule "mul_literals" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                           (rule "add_literals" (formula "23") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                           (rule "mul_literals" (formula "23") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "23") (term "0,0"))
                           (rule "concrete_or_2" (formula "23") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0"))
                           (rule "add_zero_right" (formula "23") (term "0,0"))
                           (rule "leq_literals" (formula "23") (term "0"))
                           (rule "concrete_or_2" (formula "23"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "16"))
                           (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                           (rule "add_literals" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "48") (term "0,0"))
                           (rule "concrete_or_2" (formula "48") (term "0"))
                           (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "qeq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_2" (formula "48"))
                           (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "48"))
                           (rule "applyEq" (formula "49") (term "0") (ifseqformula "23"))
                           (rule "leq_literals" (formula "49"))
                           (rule "true_left" (formula "49"))
                           (rule "applyEq" (formula "49") (term "0,1,1") (ifseqformula "23"))
                           (rule "mul_literals" (formula "49") (term "1,1"))
                           (rule "add_literals" (formula "49") (term "1"))
                           (rule "applyEq" (formula "51") (term "0,1,1") (ifseqformula "23"))
                           (rule "mul_literals" (formula "51") (term "1,1"))
                           (rule "add_literals" (formula "51") (term "1"))
                           (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "23"))
                           (rule "mul_literals" (formula "7") (term "1,1"))
                           (rule "add_literals" (formula "7") (term "1"))
                           (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "23"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "applyEqRigid" (formula "49") (term "0,1,1") (ifseqformula "23"))
                           (rule "mul_literals" (formula "49") (term "1,1"))
                           (rule "add_literals" (formula "49") (term "1"))
                           (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "23"))
                           (rule "mul_literals" (formula "51") (term "1,0,1"))
                           (rule "add_literals" (formula "51") (term "0,1"))
                           (rule "applyEq" (formula "47") (term "1") (ifseqformula "23"))
                           (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "24"))
                           (rule "leq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_1" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "6"))
                           (rule "leq_literals" (formula "49") (term "0"))
                           (rule "concrete_or_1" (formula "49"))
                           (rule "true_left" (formula "49"))
                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "6"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (rule "concrete_or_1" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "15"))
                           (rule "leq_literals" (formula "47") (term "0"))
                           (rule "concrete_or_1" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "qeq_literals" (formula "47") (term "0"))
                           (rule "concrete_or_1" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "div_axiom" (formula "3") (term "0,0") (inst "quotient=quotient_1"))
                           (rule "equal_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "qeq_literals" (formula "3") (term "0,1"))
                           (rule "ifthenelse_true_for" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "1,1,1"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "3"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                           (rule "add_literals" (formula "5") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "5") (term "1"))
                           (rule "add_literals" (formula "5") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0"))
                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                           (rule "polySimp_elimOne" (formula "6") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "5") (term "0,0"))
                           (rule "concrete_or_2" (formula "5") (term "0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (rule "concrete_or_2" (formula "5"))
                           (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "4") (term "0,0"))
                           (rule "concrete_or_2" (formula "4") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (rule "concrete_or_2" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "5"))
                           (rule "mul_literals" (formula "48") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0"))
                           (rule "add_literals" (formula "48") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                           (rule "mul_literals" (formula "48") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "48") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "48") (term "0,0"))
                           (rule "concrete_or_2" (formula "48") (term "0"))
                           (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                           (rule "add_literals" (formula "48") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "leq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_2" (formula "48"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                           (rule "mul_literals" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (rule "concrete_or_1" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_antiSymm" (formula "49") (ifseqformula "2"))
                           (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "49"))
                           (rule "mul_literals" (formula "6") (term "1,1"))
                           (rule "add_literals" (formula "6") (term "1"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "49"))
                           (rule "mul_literals" (formula "3") (term "1,1"))
                           (rule "add_literals" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "48"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                           (rule "qeq_literals" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "applyEq" (formula "3") (term "1") (ifseqformula "47"))
                           (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "47"))
                           (rule "mul_literals" (formula "5") (term "1,0,1"))
                           (rule "add_literals" (formula "5") (term "0,1"))
                           (rule "add_zero_left" (formula "5") (term "1"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "8"))
                           (rule "leq_literals" (formula "4") (term "0"))
                           (rule "concrete_or_1" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                           (rule "mul_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "mul_literals" (formula "2") (term "1"))
                           (rule "shift_paren_or" (formula "25") (term "0,1,0"))
                           (rule "commute_or_2" (formula "19") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_imp2or" (formula "43") (term "0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or_2" (formula "51") (term "0"))
                           (rule "commute_and" (formula "18") (term "1,0,0,0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "1,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "35") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                           (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,1,0"))
                           (rule "double_not" (formula "43") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,1,0"))
                           (rule "double_not" (formula "44") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "43") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,1,0,1,0"))
                           (rule "double_not" (formula "36") (term "0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "43") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "44") (term "0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "44") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,1,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "11"))
                           (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "12"))
                           (rule "commute_or_2" (formula "53") (term "0,0"))
                           (rule "commute_or_2" (formula "37") (term "0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "27") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "27") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "27") (term "1,0,1,0,1,0"))
                           (rule "eqClose" (formula "27") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true_for" (formula "27") (term "1,0,1,0"))
                           (rule "commute_or" (formula "21") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "38") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "37") (term "0,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,1,1,0"))
                           (rule "commute_or" (formula "27") (term "0,0,1,0"))
                           (rule "shift_paren_or" (formula "37") (term "0,1,0"))
                           (rule "commute_or_2" (formula "37") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "37") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "37") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "37") (term "1,0,1,0,1,0"))
                           (rule "eqClose" (formula "37") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true_for" (formula "37") (term "1,0,1,0"))
                           (rule "commute_or" (formula "37") (term "0,0,1,0"))
                           (rule "commute_or" (formula "43") (term "0,0,1,1,0"))
                           (rule "commute_or_2" (formula "43") (term "0,1,1,0"))
                           (rule "commute_or" (formula "43") (term "0,1,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "43") (term "0,1,1,0"))
                           (rule "commute_or_2" (formula "43") (term "1,0,1,1,0"))
                           (rule "shift_paren_or" (formula "43") (term "0,0,1,1,0"))
                           (rule "commute_or" (formula "43") (term "0,1,0,1,1,0"))
                           (rule "commute_or" (formula "20") (term "0,0,0,0,0,1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "13"))
                           (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "43"))
                           (rule "concrete_or_1" (formula "42"))
                           (rule "true_left" (formula "42"))
                           (rule "cnf_rightDist" (formula "20") (term "1,0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "20") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "all_pull_out3" (formula "21") (term "1,0"))
                           (rule "shift_paren_or" (formula "21") (term "0,1,0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0,0,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                           (rule "eq_or" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "all_pull_out3" (formula "27") (term "0"))
                           (rule "shift_paren_or" (formula "27") (term "0,0"))
                           (rule "shift_paren_or" (formula "27") (term "0,0,0"))
                           (rule "commute_or_2" (formula "27") (term "0,0,0,0"))
                           (rule "commute_or" (formula "27") (term "0,0,0,0,0"))
                           (rule "all_pull_out3" (formula "43") (term "1,0"))
                           (rule "cnf_rightDist" (formula "43") (term "0,1,0"))
                           (rule "commute_or_2" (formula "43") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "43") (term "0,0,1,0"))
                           (rule "commute_or_2" (formula "43") (term "0,1,0,1,0"))
                           (rule "shift_paren_or" (formula "43") (term "0,0,0,1,0"))
                           (rule "commute_or_2" (formula "43") (term "0,0,0,0,1,0"))
                           (rule "shift_paren_or" (formula "43") (term "0,0,1,0,1,0"))
                           (rule "commute_or" (formula "43") (term "0,0,0,1,0,1,0"))
                           (rule "all_pull_out3" (formula "21") (term "0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "21") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "21") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "allLeft" (formula "22") (inst "t=i_1_2"))
                           (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "43"))
                           (rule "concrete_not_1" (formula "22") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "22") (term "0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "42"))
                           (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                           (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "22") (term "0,0,1"))
                           (rule "leq_literals" (formula "22") (term "0,1"))
                           (rule "concrete_and_2" (formula "22") (term "1"))
                           (rule "concrete_or_4" (formula "22"))
                           (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "41"))
                           (rule "qeq_literals" (formula "22") (term "0,1"))
                           (rule "concrete_and_2" (formula "22") (term "1"))
                           (rule "concrete_or_4" (formula "22"))
                           (rule "allLeft" (formula "23") (inst "t=i_1_0"))
                           (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "32"))
                           (rule "concrete_not_1" (formula "23") (term "0,0,0"))
                           (rule "concrete_or_2" (formula "23") (term "0,0"))
                           (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "31"))
                           (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                           (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                           (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "0,0,1"))
                           (rule "leq_literals" (formula "23") (term "0,1"))
                           (rule "concrete_and_2" (formula "23") (term "1"))
                           (rule "concrete_or_4" (formula "23"))
                           (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "30"))
                           (rule "qeq_literals" (formula "23") (term "0,1"))
                           (rule "concrete_and_2" (formula "23") (term "1"))
                           (rule "concrete_or_4" (formula "23"))
                           (rule "shift_paren_and" (formula "20") (term "0,0,0,0,1,1,0"))
                           (rule "all_pull_out3" (formula "45") (term "0"))
                           (rule "cnf_rightDist" (formula "45") (term "0,0"))
                           (rule "distr_forallAnd" (formula "45") (term "0"))
                           (rule "distr_forallAnd" (formula "45"))
                           (rule "andLeft" (formula "45"))
                           (rule "commute_or_2" (formula "46") (term "0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0"))
                           (rule "commute_or_2" (formula "46") (term "0,0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                           (rule "commute_or_2" (formula "46") (term "0,0,0,0"))
                           (rule "shift_paren_or" (formula "45") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "45") (term "0,0,0,0,0"))
                           (rule "shift_paren_or" (formula "46") (term "0,0,0,0,0"))
                           (rule "commute_or" (formula "45") (term "0,0,0,0,0,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                           (rule "commute_or" (formula "20") (term "0,0,0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "1,0,0,0,1,1,0"))
                           (rule "commute_or_2" (formula "20") (term "1,1,0,0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                           (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,1,0"))
                           (rule "eq_or" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,1,0,0,0,1,1,0"))
                           (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                           (rule "eq_or_2" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "cut_direct" (formula "1") (term "0"))
                           (branch "CUT: self.table[-1 + l_2 * 2] = null TRUE"
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "55") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "55"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "0,1,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0,1,1,0"))
                              (rule "eq_and_2" (formula "20") (term "0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "eq_and_2" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "eq_and" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "all_pull_out3" (formula "20") (term "1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,0,1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,1,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,1,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,1,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,1,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,0"))
                              (rule "allLeft" (formula "24") (inst "t=l_1"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "24") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "24") (term "1,0"))
                              (rule "concrete_or_4" (formula "24") (term "0"))
                              (rule "allLeft" (formula "25") (inst "t=l_2"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "51"))
                              (rule "qeq_literals" (formula "25") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "25") (term "1,0"))
                              (rule "concrete_or_4" (formula "25") (term "0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "13"))
                              (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                              (rule "concrete_or_1" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "allLeft" (formula "55") (inst "t=l_2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,1,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                              (rule "mul_literals" (formula "55") (term "1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0,0") (ifseqformula "51"))
                              (rule "qeq_literals" (formula "55") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "55") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "55") (term "0,0"))
                              (rule "allLeft" (formula "56") (inst "t=l_0"))
                              (rule "inEqSimp_contradInEq1" (formula "56") (term "1,0,0") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "56") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "56") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "56") (term "0,0"))
                              (rule "allLeft" (formula "57") (inst "t=l_1"))
                              (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "57") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "57") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "57") (term "0,0"))
                              (rule "allLeft" (formula "58") (inst "t=add(Z(neglit(1(#))), mul(l_1, Z(2(#))))"))
                              (rule "replace_known_left" (formula "58") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "58") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "58") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "1,0,1"))
                              (rule "add_literals" (formula "58") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,2,0,0,0,0"))
                              (rule "add_literals" (formula "58") (term "0,0,2,0,0,0,0"))
                              (rule "replace_known_right" (formula "58") (term "0,0,0") (ifseqformula "60"))
                              (rule "concrete_or_2" (formula "58") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0"))
                              (rule "add_literals" (formula "58") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "58") (term "0,0,1,0"))
                              (rule "applyEq" (formula "58") (term "0,0,0,1") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "58") (term "0,0,1"))
                              (rule "polySimp_rightDist" (formula "58") (term "0,0,1"))
                              (rule "mul_literals" (formula "58") (term "0,0,0,1"))
                              (rule "eqClose" (formula "58") (term "0,1"))
                              (rule "concrete_not_1" (formula "58") (term "1"))
                              (rule "concrete_or_4" (formula "58"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "0"))
                              (rule "mul_literals" (formula "58") (term "1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "58") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                              (rule "inEqSimp_contradInEq5" (formula "58") (term "0") (ifseqformula "4"))
                              (rule "greater_literals" (formula "58") (term "0,0,0"))
                              (rule "concrete_impl_1" (formula "58") (term "0,0"))
                              (rule "mul_literals" (formula "58") (term "1,0,0"))
                              (rule "qeq_literals" (formula "58") (term "0,0"))
                              (rule "concrete_and_2" (formula "58") (term "0"))
                              (rule "concrete_or_2" (formula "58"))
                              (rule "elimGcdGeq_antec" (formula "58") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "58") (term "0,0"))
                              (rule "concrete_or_2" (formula "58") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                              (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                              (rule "add_literals" (formula "58") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "58") (term "1,0,0"))
                              (rule "add_zero_right" (formula "58") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                              (rule "add_literals" (formula "58") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "58") (term "1,0,0"))
                              (rule "add_zero_right" (formula "58") (term "0,0"))
                              (rule "leq_literals" (formula "58") (term "0"))
                              (rule "concrete_or_2" (formula "58"))
                              (rule "inEqSimp_antiSymm" (formula "58") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "24") (term "1,1") (ifseqformula "58"))
                              (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "58"))
                              (rule "applyEqRigid" (formula "57") (term "0,0,0,0,1") (ifseqformula "58"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "58"))
                              (rule "applyEq" (formula "23") (term "0,0,2,0,0,0,0") (ifseqformula "57"))
                              (rule "applyEq" (formula "58") (term "0") (ifseqformula "57"))
                              (rule "inEqSimp_homoInEq1" (formula "58"))
                              (rule "polySimp_pullOutFactor1" (formula "58") (term "0"))
                              (rule "add_literals" (formula "58") (term "1,0"))
                              (rule "times_zero_1" (formula "58") (term "0"))
                              (rule "leq_literals" (formula "58"))
                              (rule "true_left" (formula "58"))
                              (rule "applyEqRigid" (formula "56") (term "0,2,0,0,0,0,0") (ifseqformula "57"))
                              (rule "applyEq" (formula "2") (term "0,1,0,2,1,0") (ifseqformula "57"))
                              (rule "applyEqRigid" (formula "56") (term "1,0,2,0,1,0,0") (ifseqformula "57"))
                              (rule "applyEq" (formula "56") (term "0,1,0") (ifseqformula "57"))
                              (rule "inEqSimp_homoInEq1" (formula "56") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,1,0"))
                              (rule "add_literals" (formula "56") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "56") (term "1,0,1,0"))
                              (rule "applyEqRigid" (formula "59") (term "0,1,0,2,0") (ifseqformula "57"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,2,0") (ifseqformula "57"))
                              (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "57"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "qeq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "22") (term "0,1,0,2,0,1,0") (ifseqformula "56"))
                              (rule "applyEq" (formula "50") (term "0") (ifseqformula "5"))
                              (rule "polySimp_homoEq" (formula "50"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "50") (term "0"))
                              (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "close" (formula "61") (ifseqformula "1"))
                           )
                           (branch "CUT: self.table[-1 + l_2 * 2] = null FALSE"
                              (rule "concrete_or_2" (formula "1"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,1,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "0,1,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "0,1,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0,1,1,0"))
                              (rule "eq_and_2" (formula "20") (term "0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,0,1,1,0"))
                              (rule "eq_or_2" (formula "20") (term "1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,1,0,0,0,0,0,1,0,1,1,0"))
                              (rule "eq_and_2" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "eq_and" (formula "20") (term "0,0,0,0,1,0,1,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,1,1,0"))
                              (rule "shift_paren_and" (formula "20") (term "0,0,0,0,1,1,0"))
                              (rule "all_pull_out3" (formula "20") (term "1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,0,1,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,0,1,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,1,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,0,1,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,1,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,0,0,1,0"))
                              (rule "allLeft" (formula "24") (inst "t=l_2"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "50"))
                              (rule "qeq_literals" (formula "24") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "24") (term "1,0"))
                              (rule "concrete_or_4" (formula "24") (term "0"))
                              (rule "allLeft" (formula "25") (inst "t=l_1"))
                              (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "25") (term "0,1,0"))
                              (rule "concrete_and_2" (formula "25") (term "1,0"))
                              (rule "concrete_or_4" (formula "25") (term "0"))
                              (rule "commute_or_2" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                              (rule "cnf_rightDist" (formula "20") (term "0,0,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "shift_paren_or" (formula "20") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                              (rule "commute_or_2" (formula "20") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "13"))
                              (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "23"))
                              (rule "concrete_or_1" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "commute_or" (formula "20") (term "0,0,0,0,1,0,0,0,0,0,0,1,0"))
                              (rule "allLeft" (formula "55") (inst "t=l_2"))
                              (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,1,0"))
                              (rule "add_literals" (formula "55") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "1,0"))
                              (rule "mul_literals" (formula "55") (term "1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "55") (term "1,0,0") (ifseqformula "51"))
                              (rule "qeq_literals" (formula "55") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "55") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "55") (term "0,0"))
                              (rule "jdiv_axiom" (formula "55") (term "0,0,0,1"))
                              (rule "eqSymm" (formula "55"))
                              (rule "inEqSimp_subsumption1" (formula "55") (term "0,0") (ifseqformula "51"))
                              (rule "leq_literals" (formula "55") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "55") (term "0,0"))
                              (rule "ifthenelse_true" (formula "55") (term "0"))
                              (rule "eqSymm" (formula "55"))
                              (rule "applyEqRigid" (formula "56") (term "0,0,0,1") (ifseqformula "55"))
                              (rule "allLeft" (formula "57") (inst "t=l_0"))
                              (rule "inEqSimp_contradInEq1" (formula "57") (term "1,0,0") (ifseqformula "30"))
                              (rule "qeq_literals" (formula "57") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "57") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "57") (term "0,0"))
                              (rule "allLeft" (formula "58") (inst "t=l_1"))
                              (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "58") (term "0,1,0,0"))
                              (rule "concrete_and_2" (formula "58") (term "1,0,0"))
                              (rule "concrete_or_4" (formula "58") (term "0,0"))
                              (rule "allLeft" (formula "59") (inst "t=add(Z(neglit(1(#))), mul(l_1, Z(2(#))))"))
                              (rule "replace_known_left" (formula "59") (term "0,0,0,0,0") (ifseqformula "3"))
                              (rule "concrete_not_1" (formula "59") (term "0,0,0,0"))
                              (rule "concrete_or_2" (formula "59") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "1,0,1"))
                              (rule "add_literals" (formula "59") (term "0,1,0,1"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0,2,0,0,0,0"))
                              (rule "add_literals" (formula "59") (term "0,0,2,0,0,0,0"))
                              (rule "replace_known_right" (formula "59") (term "0,0,0") (ifseqformula "62"))
                              (rule "concrete_or_2" (formula "59") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "59") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0,1,0"))
                              (rule "polySimp_addComm1" (formula "59") (term "0,0,1,0"))
                              (rule "add_literals" (formula "59") (term "0,0,0,1,0"))
                              (rule "add_zero_left" (formula "59") (term "0,0,1,0"))
                              (rule "applyEq" (formula "59") (term "0,0,0,1") (ifseqformula "7"))
                              (rule "polySimp_mulComm0" (formula "59") (term "0,0,1"))
                              (rule "polySimp_rightDist" (formula "59") (term "0,0,1"))
                              (rule "mul_literals" (formula "59") (term "0,0,0,1"))
                              (rule "eqClose" (formula "59") (term "0,1"))
                              (rule "concrete_not_1" (formula "59") (term "1"))
                              (rule "concrete_or_4" (formula "59"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "59") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0"))
                              (rule "mul_literals" (formula "59") (term "1,0"))
                              (rule "inEqSimp_contradInEq5" (formula "59") (term "0") (ifseqformula "4"))
                              (rule "greater_literals" (formula "59") (term "0,0,0"))
                              (rule "concrete_impl_1" (formula "59") (term "0,0"))
                              (rule "mul_literals" (formula "59") (term "1,0,0"))
                              (rule "qeq_literals" (formula "59") (term "0,0"))
                              (rule "concrete_and_2" (formula "59") (term "0"))
                              (rule "concrete_or_2" (formula "59"))
                              (rule "elimGcdGeq_antec" (formula "59") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,0,1,0"))
                              (rule "leq_literals" (formula "59") (term "0,0"))
                              (rule "concrete_or_2" (formula "59") (term "0"))
                              (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_zero_right" (formula "59") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                              (rule "add_literals" (formula "59") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "59") (term "1,0,0"))
                              (rule "add_zero_right" (formula "59") (term "0,0"))
                              (rule "leq_literals" (formula "59") (term "0"))
                              (rule "concrete_or_2" (formula "59"))
                              (rule "inEqSimp_antiSymm" (formula "59") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "25") (term "1,1") (ifseqformula "59"))
                              (rule "applyEq" (formula "60") (term "0") (ifseqformula "59"))
                              (rule "inEqSimp_homoInEq1" (formula "60"))
                              (rule "polySimp_pullOutFactor1" (formula "60") (term "0"))
                              (rule "add_literals" (formula "60") (term "1,0"))
                              (rule "times_zero_1" (formula "60") (term "0"))
                              (rule "leq_literals" (formula "60"))
                              (rule "true_left" (formula "60"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "59"))
                              (rule "applyEqRigid" (formula "24") (term "0,1,0,2,0,1,0") (ifseqformula "58"))
                              (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "58"))
                              (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "58"))
                              (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,1,0"))
                              (rule "add_literals" (formula "57") (term "1,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "57") (term "1,0,1,0"))
                              (rule "applyEqRigid" (formula "57") (term "0,0,0,0,1") (ifseqformula "58"))
                              (rule "applyEqRigid" (formula "57") (term "0,2,0,0,0,0,0") (ifseqformula "58"))
                              (rule "applyEq" (formula "57") (term "1,0,2,0,1,0,0") (ifseqformula "58"))
                              (rule "applyEqRigid" (formula "2") (term "0,1,0,2,1,0") (ifseqformula "58"))
                              (rule "applyEq" (formula "61") (term "0,1,0,2,0") (ifseqformula "58"))
                              (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "58"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "qeq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEqRigid" (formula "3") (term "0,1,0,2,0") (ifseqformula "57"))
                              (rule "close" (formula "61") (ifseqformula "3"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                        (rule "concrete_or_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "eqClose" (formula "42") (term "0,0"))
                        (rule "allRight" (formula "42") (inst "sk=f_0"))
                        (rule "allRight" (formula "42") (inst "sk=o_0"))
                        (rule "closeTrue" (formula "42"))
                     )
                  )
                  (branch "Case 2"
                     (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                     (rule "concrete_or_2" (formula "1") (term "0"))
                     (rule "concrete_not_2" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,0,0,1,0"))
                     (rule "precOfInt" (formula "42"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "42") (term "1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,1"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "42") (term "0"))
                     (rule "times_zero_2" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "10") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "32") (term "1,0,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "14") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "13") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1") (ifseqformula "27"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "13") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "27"))
                     (rule "applyEq" (formula "42") (term "1,0,1,0,0,1,0,1") (ifseqformula "27"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                     (rule "jmod_axiom" (formula "34") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0,0"))
                     (rule "polySimp_homoEq" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,1,0,0"))
                     (rule "jmod_axiom" (formula "33") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                     (rule "mod_axiom" (formula "42") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "42") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,0,0"))
                     (rule "mod_axiom" (formula "32") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "jmod_axiom" (formula "16") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                     (rule "mod_axiom" (formula "42") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0,1,0,0,1"))
                     (rule "mod_axiom" (formula "42") (term "1,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0,1"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,1,0,1"))
                     (rule "mod_axiom" (formula "42") (term "0,1,0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "42") (term "0,0,1,0,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,1,0,1"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0,0,1,0,1"))
                     (rule "polySimp_sepPosMonomial" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "mul_literals" (formula "33") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                     (rule "polySimp_elimOne" (formula "26") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0"))
                     (rule "mul_literals" (formula "42") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1"))
                     (rule "mul_literals" (formula "32") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                     (rule "mul_literals" (formula "42") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                     (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "9"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (rule "concrete_or_1" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "29"))
                     (rule "leq_literals" (formula "34") (term "0"))
                     (rule "concrete_or_1" (formula "34"))
                     (rule "true_left" (formula "34"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                     (rule "leq_literals" (formula "10") (term "0"))
                     (rule "concrete_or_1" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "elimGcdGeq" (formula "11") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "11") (term "0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "0,0,0,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "11") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "concrete_and_1" (formula "11") (term "0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,1,1,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "polyDiv_pullOut" (formula "38") (term "0,1,0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0,1,0,1,1,1"))
                     (rule "equal_literals" (formula "38") (term "0,0,1,0,1,1,1"))
                     (rule "ifthenelse_false" (formula "38") (term "0,1,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1,1,1,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,1,1,1,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "38") (term "1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                     (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "29") (term "0,0,0"))
                     (rule "ifthenelse_false" (formula "29") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "29") (term "0"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
                     (rule "add_literals" (formula "29") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "0"))
                     (rule "mul_literals" (formula "29") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                     (rule "add_literals" (formula "29") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "polyMod_pullOut" (formula "38") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0"))
                     (rule "elimGcdLeq" (formula "11") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "1,0,1,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "1,1,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,1,1,0"))
                     (rule "polyDiv_pullOut" (formula "38") (term "0,1,0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "38") (term "0,0,1,0,0,0,0"))
                     (rule "ifthenelse_false" (formula "38") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1,1,1,0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,1,1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                     (rule "polyDiv_pullOut" (formula "38") (term "0,1,0,0,0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0,1,0,0,0,1,1,1"))
                     (rule "equal_literals" (formula "38") (term "0,0,1,0,0,0,1,1,1"))
                     (rule "ifthenelse_false" (formula "38") (term "0,1,0,0,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,0,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,1,0,0,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,1"))
                     (rule "polyDiv_pullOut" (formula "38") (term "0,1,0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0,1,0,1,1,1"))
                     (rule "equal_literals" (formula "38") (term "0,0,1,0,1,1,1"))
                     (rule "ifthenelse_false" (formula "38") (term "0,1,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,1,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1,1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,1,1"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1"))
                     (rule "polyMod_pullOut" (formula "38") (term "1,1,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,1,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,1,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,1,1,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,1,1,1"))
                     (rule "add_zero_right" (formula "38") (term "0,1,1,1"))
                     (rule "mod_axiom" (formula "38") (term "1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,1"))
                     (rule "polyMod_pullOut" (formula "38") (term "0,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "38") (term "0,0,1"))
                     (rule "polyMod_pullOut" (formula "38") (term "0,0") (inst "polyDivCoeff=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                     (rule "mod_axiom" (formula "38") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,1,0"))
                     (rule "polyDiv_pullOut" (formula "38") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "38") (term "0,0,0,0"))
                     (rule "ifthenelse_false" (formula "38") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1,1,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1,1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                     (rule "mul_literals" (formula "38") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0,0"))
                     (rule "polyMod_pullOut" (formula "38") (term "0,1") (inst "polyDivCoeff=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,1"))
                     (rule "mod_axiom" (formula "38") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "38") (term "1"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "38") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "38") (term "0,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,0,1"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "38") (term "0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1"))
                     (rule "newSym_eq" (formula "14") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                     (rule "times_zero_1" (formula "14") (term "1,1"))
                     (rule "add_zero_right" (formula "14") (term "1"))
                     (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "19"))
                     (rule "polySimp_addComm1" (formula "19") (term "0"))
                     (rule "applyEqRigid" (formula "12") (term "1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0,1,0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "15") (term "0,0") (ifseqformula "14"))
                     (rule "eqSymm" (formula "15"))
                     (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "17") (term "1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEq" (formula "11") (term "1,1,0,0,0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "10") (term "1,0") (ifseqformula "14"))
                     (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "30") (term "1,0,0,0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq0" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "24") (term "0"))
                     (rule "applyEqRigid" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "39") (term "1,1,0") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "39") (term "1,0"))
                     (rule "applyEq" (formula "12") (term "1,0,1,0,1,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "12") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "16") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "39") (term "1,0,0,0,0") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                     (rule "applyEq" (formula "11") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "11") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "39") (term "1,0,0,0,1") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                     (rule "applyEq" (formula "11") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "15"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "25") (term "1") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "30") (term "1,0") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "30") (term "0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                     (rule "applyEq" (formula "39") (term "1,0,0,1,0,1") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1"))
                     (rule "polySimp_rightDist" (formula "19") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                     (rule "mul_literals" (formula "19") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1"))
                     (rule "polySimp_rightDist" (formula "24") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                     (rule "mul_literals" (formula "24") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1"))
                     (rule "newSym_eq" (formula "31") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                     (rule "times_zero_1" (formula "31") (term "1,1,1"))
                     (rule "add_zero_right" (formula "31") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "31") (term "1"))
                     (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0"))
                     (rule "mul_literals" (formula "32") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                     (rule "mul_literals" (formula "32") (term "0,1"))
                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
                     (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq0" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "add_literals" (formula "34") (term "0,0"))
                     (rule "applyEqRigid" (formula "40") (term "0,1,0,0,0,0") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                     (rule "applyEqRigid" (formula "40") (term "0,1,1,0") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,1,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "1,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0"))
                     (rule "add_literals" (formula "40") (term "0,0,1,0"))
                     (rule "add_zero_left" (formula "40") (term "0,1,0"))
                     (rule "applyEqRigid" (formula "30") (term "0,1,1") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1"))
                     (rule "mul_literals" (formula "30") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1"))
                     (rule "polySimp_addComm1" (formula "30") (term "1"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,1"))
                     (rule "add_literals" (formula "30") (term "0,0,1"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                     (rule "inEqSimp_homoInEq1" (formula "29"))
                     (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                     (rule "mul_literals" (formula "29") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "29") (term "0"))
                     (rule "add_literals" (formula "29") (term "0,0"))
                     (rule "applyEqRigid" (formula "35") (term "0,2,0") (ifseqformula "32"))
                     (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,1,1") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,1"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,1,1"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1,1,1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,1,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,1,1,1"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "40") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                     (rule "applyEq" (formula "33") (term "1,1,0,0,0,0") (ifseqformula "32"))
                     (rule "polySimp_addAssoc" (formula "33") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "33") (term "0,1,0,0,0,0"))
                     (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,0,0,1") (ifseqformula "32"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,1"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1"))
                     (rule "elimGcdGeq_antec" (formula "29") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "29") (term "0,0"))
                     (rule "concrete_or_2" (formula "29") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                     (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0"))
                     (rule "leq_literals" (formula "29") (term "0"))
                     (rule "concrete_or_2" (formula "29"))
                     (rule "elimGcdLeq_antec" (formula "34") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "34") (term "0,0"))
                     (rule "concrete_or_2" (formula "34") (term "0"))
                     (rule "neg_literal" (formula "34") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "34") (term "1,0,0"))
                     (rule "add_zero_right" (formula "34") (term "0,0"))
                     (rule "qeq_literals" (formula "34") (term "0"))
                     (rule "concrete_or_2" (formula "34"))
                     (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "concrete_or_2" (formula "1") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "leq_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "30") (term "0,0"))
                     (rule "concrete_or_2" (formula "30") (term "0"))
                     (rule "neg_literal" (formula "30") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                     (rule "add_literals" (formula "30") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0"))
                     (rule "add_zero_right" (formula "30") (term "0,0"))
                     (rule "qeq_literals" (formula "30") (term "0"))
                     (rule "concrete_or_2" (formula "30"))
                     (rule "elimGcdLeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "9") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "9") (term "0,0"))
                     (rule "concrete_or_2" (formula "9") (term "0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                     (rule "concrete_or_2" (formula "9"))
                     (rule "elimGcdGeq_antec" (formula "16") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "16") (term "0,0"))
                     (rule "concrete_or_2" (formula "16") (term "0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "16") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "16") (term "0,0"))
                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_or_2" (formula "16"))
                     (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "40") (term "0") (inst "elimGcdRightDiv=add(mul(l_1, Z(neglit(1(#)))), l_0)") (inst "elimGcdLeftDiv=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(l_1, Z(neglit(2(#))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,0"))
                     (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "40") (term "0,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "40") (term "0,1,0,0"))
                     (rule "add_literals" (formula "40") (term "1,0,1,0,0"))
                     (rule "times_zero_1" (formula "40") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "40") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "40") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0"))
                     (rule "leq_literals" (formula "40") (term "0,0"))
                     (rule "ifthenelse_true_for" (formula "40") (term "0"))
                     (rule "elimGcdLeq" (formula "11") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "11") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "11") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "11") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "11") (term "0,1,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "40") (term "1") (inst "elimGcdRightDiv=add(Z(neglit(1(#))),
    div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(l_1, Z(neglit(2(#))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(neglit(2(#))))),
        mul(l_0, Z(2(#)))),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1"))
                     (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1"))
                     (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1"))
                     (rule "add_literals" (formula "40") (term "1,1,0,1,0,1"))
                     (rule "times_zero_1" (formula "40") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "40") (term "0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "40") (term "0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1"))
                     (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1"))
                     (rule "add_literals" (formula "40") (term "0,0,0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1"))
                     (rule "add_literals" (formula "40") (term "1,1,0,1,0,1"))
                     (rule "times_zero_1" (formula "40") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "40") (term "0,1,0,1"))
                     (rule "qeq_literals" (formula "40") (term "1,0,1"))
                     (rule "concrete_and_3" (formula "40") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "40") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1"))
                     (rule "add_literals" (formula "40") (term "0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,1"))
                     (rule "add_literals" (formula "40") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "40") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "40") (term "0,0,1"))
                     (rule "leq_literals" (formula "40") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "40") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "19"))
                     (rule "times_zero_1" (formula "18") (term "0,0"))
                     (rule "add_zero_left" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                     (rule "mul_literals" (formula "18") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_1" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "24"))
                     (rule "mul_literals" (formula "23") (term "0,0"))
                     (rule "add_zero_left" (formula "23") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "23") (ifseqformula "16"))
                     (rule "greater_literals" (formula "23") (term "0,0"))
                     (rule "concrete_and_1" (formula "23") (term "0"))
                     (rule "mul_literals" (formula "23") (term "1,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                     (rule "concrete_or_1" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "9"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "1"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (rule "concrete_or_1" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "nnf_imp2or" (formula "34") (term "1,0"))
                     (rule "double_not" (formula "34") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "14") (term "1,0"))
                     (rule "nnf_imp2or" (formula "18") (term "1,0,1,0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "commute_and" (formula "14") (term "0,0"))
                     (rule "commute_and" (formula "18") (term "0,0"))
                     (rule "commute_and" (formula "12") (term "0,0"))
                     (rule "nnf_imp2or" (formula "12") (term "1,0"))
                     (rule "nnf_imp2or" (formula "34") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "13") (term "1,0"))
                     (rule "nnf_notAnd" (formula "34") (term "0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "18") (term "0,1,0"))
                     (rule "jdiv_axiom" (formula "15") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "15"))
                     (rule "applyEqRigid" (formula "15") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_subsumption6" (formula "15") (term "0,0") (ifseqformula "18"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
                     (rule "greater_literals" (formula "15") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "15") (term "0,0,0"))
                     (rule "leq_literals" (formula "15") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "15") (term "0,0"))
                     (rule "ifthenelse_true" (formula "15") (term "0"))
                     (rule "polyDiv_pullOut" (formula "15") (term "0") (inst "polyDivCoeff=l_0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "15") (term "0,0"))
                     (rule "ifthenelse_false" (formula "15") (term "0"))
                     (rule "polySimp_homoEq" (formula "15"))
                     (rule "polySimp_pullOutFactor0" (formula "15") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "15") (term "1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "15") (term "0,0,0,1,0"))
                     (rule "div_literals" (formula "15") (term "0,0,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "1,0"))
                     (rule "times_zero_1" (formula "15") (term "0"))
                     (rule "eqClose" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "nnf_notAnd" (formula "12") (term "0,1,0"))
                     (rule "double_not" (formula "12") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,1,0"))
                     (rule "double_not" (formula "13") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,0"))
                     (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "34") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "34") (term "0,1,0,0,0"))
                     (rule "nnf_imp2or" (formula "13") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,1,0,1,0"))
                     (rule "double_not" (formula "18") (term "0,0,1,0,1,0"))
                     (rule "jdiv_axiom" (formula "32") (term "0"))
                     (rule "eqSymm" (formula "32"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,0,2,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0"))
                     (rule "applyEq" (formula "32") (term "1") (ifseqformula "33"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                     (rule "mul_literals" (formula "32") (term "1,0,0"))
                     (rule "inEqSimp_subsumption6" (formula "32") (term "0,0") (ifseqformula "30"))
                     (rule "mul_literals" (formula "32") (term "1,1,0,0,0"))
                     (rule "greater_literals" (formula "32") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "32") (term "0,0,0"))
                     (rule "leq_literals" (formula "32") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "32") (term "0,0"))
                     (rule "ifthenelse_true" (formula "32") (term "0"))
                     (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "equal_literals" (formula "32") (term "0,0"))
                     (rule "ifthenelse_false" (formula "32") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "32"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,0,1,0"))
                     (rule "div_literals" (formula "32") (term "0,0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "32") (term "0"))
                     (rule "add_literals" (formula "32") (term "1,0"))
                     (rule "times_zero_1" (formula "32") (term "0"))
                     (rule "eqClose" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "28") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "7"))
                     (rule "insert_constant_value" (formula "28") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "28") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "28") (term "1"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MAX" (formula "28") (term "1,0,1"))
                     (rule "replace_int_MIN" (formula "28") (term "0,1,1"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "andLeft" (formula "28"))
                     (rule "notLeft" (formula "28"))
                     (rule "exLeft" (formula "35") (inst "sk=i_1_2"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "exLeft" (formula "33") (inst "sk=i_2_0"))
                     (rule "andLeft" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "eqSymm" (formula "32"))
                     (rule "eqSymm" (formula "31") (term "1,1,0,1,0"))
                     (rule "eqSymm" (formula "31") (term "1,0,1,0,1,0"))
                     (rule "eqSymm" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "0,2,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "0,2,0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0,2,0,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "30") (term "0,2,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "38") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "ifthenelse_negated" (formula "32") (term "2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "41") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "42"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "29"))
                     (rule "inEqSimp_commuteLeq" (formula "28"))
                     (rule "inEqSimp_commuteLeq" (formula "37"))
                     (rule "inEqSimp_commuteLeq" (formula "33"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "40") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "40") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "35"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "41") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "26"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "applyEq" (formula "35") (term "1") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "41") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "36") (term "0,0") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "32") (term "0,1,0") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "38") (term "0,0,1,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "15"))
                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                     (rule "applyEq" (formula "30") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "39") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "26"))
                     (rule "applyEqRigid" (formula "40") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "31") (term "0,0,1,0,0,1,0,0") (ifseqformula "26"))
                     (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "40") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                     (rule "applyEqRigid" (formula "31") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                     (rule "jmod_axiom" (formula "35") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                     (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "15"))
                     (rule "polySimp_pullOutFactor0" (formula "35") (term "0"))
                     (rule "add_literals" (formula "35") (term "1,0"))
                     (rule "times_zero_1" (formula "35") (term "0"))
                     (rule "eqClose" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1"))
                     (rule "polySimp_rightDist" (formula "33") (term "1"))
                     (rule "mul_literals" (formula "33") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1"))
                     (rule "polySimp_rightDist" (formula "36") (term "1"))
                     (rule "mul_literals" (formula "36") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "17"))
                     (rule "greater_literals" (formula "28") (term "0,0"))
                     (rule "concrete_and_1" (formula "28") (term "0"))
                     (rule "mul_literals" (formula "28") (term "1,0"))
                     (rule "leq_literals" (formula "28") (term "0"))
                     (rule "concrete_or_1" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "inEqSimp_subsumption4" (formula "28") (ifseqformula "10"))
                     (rule "mul_literals" (formula "28") (term "0,1,0"))
                     (rule "greater_literals" (formula "28") (term "0,0"))
                     (rule "concrete_and_1" (formula "28") (term "0"))
                     (rule "leq_literals" (formula "28") (term "0"))
                     (rule "concrete_or_1" (formula "28"))
                     (rule "true_left" (formula "28"))
                     (rule "elimGcdLeq" (formula "37") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "37") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "37") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "37") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "37") (term "0,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "37") (term "1,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "37") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "37") (term "1,0,1,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "37") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "37") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "37") (term "0,1,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "37") (term "1,1,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "37") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "37") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "37") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "37") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "37") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "37") (term "0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "37") (term "1,1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "37") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "37") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "37") (term "0,0,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "37") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                     (rule "times_zero_1" (formula "30") (term "0,0"))
                     (rule "add_zero_left" (formula "30") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                     (rule "mul_literals" (formula "30") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "17"))
                     (rule "greater_literals" (formula "30") (term "0,0"))
                     (rule "concrete_and_1" (formula "30") (term "0"))
                     (rule "mul_literals" (formula "30") (term "1,0"))
                     (rule "leq_literals" (formula "30") (term "0"))
                     (rule "concrete_or_1" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                     (rule "times_zero_1" (formula "33") (term "0,0"))
                     (rule "add_zero_left" (formula "33") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                     (rule "mul_literals" (formula "33") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "17"))
                     (rule "leq_literals" (formula "33") (term "0"))
                     (rule "concrete_or_1" (formula "33"))
                     (rule "true_left" (formula "33"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0,0,1,1,0"))
                     (rule "nnf_notOr" (formula "12") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,1,0"))
                     (rule "div_axiom" (formula "40") (term "0,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "40") (term "1,1,1,1,1"))
                     (rule "equal_literals" (formula "40") (term "0"))
                     (rule "concrete_or_2" (formula "40"))
                     (rule "qeq_literals" (formula "40") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "40") (term "1"))
                     (rule "andLeft" (formula "40"))
                     (rule "andLeft" (formula "40"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,1"))
                     (rule "add_literals" (formula "42") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "42") (term "1"))
                     (rule "add_literals" (formula "42") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "41"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "41") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "42"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                     (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "40"))
                     (rule "inEqSimp_homoInEq0" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1"))
                     (rule "polySimp_rightDist" (formula "41") (term "1"))
                     (rule "mul_literals" (formula "41") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1"))
                     (rule "mul_literals" (formula "42") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1"))
                     (rule "polySimp_rightDist" (formula "43") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "43") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1"))
                     (rule "mul_literals" (formula "43") (term "0,0,1"))
                     (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "42") (term "0,0"))
                     (rule "concrete_or_2" (formula "42") (term "0"))
                     (rule "neg_literal" (formula "42") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "qeq_literals" (formula "42") (term "0"))
                     (rule "concrete_or_2" (formula "42"))
                     (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "41") (term "0,0"))
                     (rule "concrete_or_2" (formula "41") (term "0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                     (rule "add_literals" (formula "41") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                     (rule "add_literals" (formula "41") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "leq_literals" (formula "41") (term "0"))
                     (rule "concrete_or_2" (formula "41"))
                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "42"))
                     (rule "mul_literals" (formula "17") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                     (rule "add_literals" (formula "17") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                     (rule "mul_literals" (formula "17") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "17") (term "0,0"))
                     (rule "concrete_or_2" (formula "17") (term "0"))
                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                     (rule "add_literals" (formula "17") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0"))
                     (rule "leq_literals" (formula "17") (term "0"))
                     (rule "concrete_or_2" (formula "17"))
                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "43"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "1"))
                     (rule "leq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_1" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "polySimp_rightDist" (formula "44") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "10"))
                     (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0"))
                     (rule "add_literals" (formula "42") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "42") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "42") (term "0,0"))
                     (rule "concrete_or_2" (formula "42") (term "0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "42") (term "0,0,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                     (rule "add_literals" (formula "42") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0"))
                     (rule "qeq_literals" (formula "42") (term "0"))
                     (rule "concrete_or_2" (formula "42"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "44"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "43"))
                     (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "applyEq" (formula "45") (term "0,1,1") (ifseqformula "18"))
                     (rule "mul_literals" (formula "45") (term "1,1"))
                     (rule "add_literals" (formula "45") (term "1"))
                     (rule "applyEqRigid" (formula "44") (term "0,1,1") (ifseqformula "18"))
                     (rule "mul_literals" (formula "44") (term "1,1"))
                     (rule "add_literals" (formula "44") (term "1"))
                     (rule "applyEqRigid" (formula "43") (term "0") (ifseqformula "18"))
                     (rule "leq_literals" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "18"))
                     (rule "mul_literals" (formula "2") (term "1,1"))
                     (rule "add_literals" (formula "2") (term "1"))
                     (rule "applyEqRigid" (formula "45") (term "0,1,1") (ifseqformula "18"))
                     (rule "mul_literals" (formula "45") (term "1,1"))
                     (rule "add_literals" (formula "45") (term "1"))
                     (rule "applyEq" (formula "46") (term "0,1,0,1") (ifseqformula "18"))
                     (rule "mul_literals" (formula "46") (term "1,0,1"))
                     (rule "add_literals" (formula "46") (term "0,1"))
                     (rule "applyEqRigid" (formula "42") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "11"))
                     (rule "leq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_1" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "44"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption0" (formula "43") (ifseqformula "1"))
                     (rule "leq_literals" (formula "43") (term "0"))
                     (rule "concrete_or_1" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "43") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0"))
                     (rule "add_literals" (formula "43") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0"))
                     (rule "qeq_literals" (formula "43") (term "0"))
                     (rule "concrete_or_1" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "18"))
                     (rule "leq_literals" (formula "42") (term "0"))
                     (rule "concrete_or_1" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "nnf_imp2or" (formula "29") (term "1,0"))
                     (rule "commute_or" (formula "44") (term "1,0"))
                     (rule "nnf_imp2or" (formula "30") (term "1,0,1,0"))
                     (rule "commute_or_2" (formula "14") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "div_axiom" (formula "50") (term "0,0,0") (inst "quotient=quotient_1"))
                     (rule "qeq_literals" (formula "1") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,1,1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "applyEq" (formula "53") (term "1,1,1") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "53") (term "0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                     (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
        mul(quotient_1,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
        mul(quotient_1,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "4"))
                     (rule "mul_literals" (formula "22") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1"))
                     (rule "polySimp_rightDist" (formula "22") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                     (rule "mul_literals" (formula "22") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "4"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "6") (term "0"))
                     (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                     (rule "add_literals" (formula "6") (term "1,1,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "6") (term "0,0"))
                     (rule "concrete_or_2" (formula "6") (term "0"))
                     (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "leq_literals" (formula "6") (term "0"))
                     (rule "concrete_or_2" (formula "6"))
                     (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "2"))
                     (rule "mul_literals" (formula "46") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "add_literals" (formula "46") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "46") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "46") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "46") (term "0,0"))
                     (rule "concrete_or_2" (formula "46") (term "0"))
                     (rule "polySimp_addLiterals" (formula "46") (term "0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0"))
                     (rule "qeq_literals" (formula "46") (term "0"))
                     (rule "concrete_or_2" (formula "46"))
                     (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "46"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "2") (term "1,1"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "24") (term "1,1"))
                     (rule "add_zero_right" (formula "24") (term "1"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "6"))
                     (rule "leq_literals" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "applyEqRigid" (formula "56") (term "1,1,1") (ifseqformula "6"))
                     (rule "add_zero_right" (formula "56") (term "1,1"))
                     (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "4") (term "1,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,1"))
                     (rule "applyEq" (formula "56") (term "0,0,1,0") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "56") (term "0,1,0"))
                     (rule "add_zero_left" (formula "56") (term "1,0"))
                     (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "7"))
                     (rule "concrete_and_1" (formula "56"))
                     (rule "inEqSimp_leqRight" (formula "56"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "7"))
                     (rule "mul_literals" (formula "4") (term "1,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,1"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "7"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "47"))
                     (rule "leq_literals" (formula "24") (term "0"))
                     (rule "concrete_or_1" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_1" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "3"))
                     (rule "mul_literals" (formula "22") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "add_literals" (formula "22") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "45"))
                     (rule "leq_literals" (formula "22") (term "0"))
                     (rule "concrete_or_1" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "nnf_imp2or" (formula "41") (term "1,0"))
                     (rule "commute_or" (formula "48") (term "0,0,0"))
                     (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                     (rule "commute_or_2" (formula "17") (term "0,1,1,0"))
                     (rule "nnf_imp2or" (formula "42") (term "0"))
                     (rule "nnf_notOr" (formula "16") (term "1,0,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,1,1,0"))
                     (rule "commute_and" (formula "34") (term "0,0,1,0"))
                     (rule "nnf_imp2or" (formula "33") (term "0"))
                     (rule "nnf_notAnd" (formula "34") (term "0,1,0,1,0"))
                     (rule "double_not" (formula "34") (term "0,0,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "41") (term "0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                     (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "42") (term "1,0"))
                     (rule "nnf_imp2or" (formula "34") (term "0"))
                     (rule "nnf_notAnd" (formula "33") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                     (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                     (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                     (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                     (rule "commute_or" (formula "18") (term "0,0"))
                     (rule "nnf_notAnd" (formula "41") (term "0,1,0"))
                     (rule "double_not" (formula "41") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                     (rule "nnf_notAnd" (formula "34") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                     (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "41") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "42") (term "0,1,0"))
                     (rule "double_not" (formula "42") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "42") (term "0,1,1,0"))
                     (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "nnf_notOr" (formula "16") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                     (rule "nnf_notAnd" (formula "42") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "42") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,1,0"))
                     (rule "nnf_notOr" (formula "43") (term "0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "43") (term "1,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "43") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "43") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "43") (term "0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,1,0,0,1,1,0"))
                     (rule "commute_or_2" (formula "49") (term "0"))
                     (rule "commute_or_2" (formula "34") (term "0"))
                     (rule "commute_or_2" (formula "24") (term "0,0,1,0"))
                     (rule "inEqSimp_or_weaken2" (formula "24") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,1,0"))
                     (rule "add_literals" (formula "24") (term "0,1,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "24") (term "1,0,1,0,1,0"))
                     (rule "eqClose" (formula "24") (term "0,1,0,1,0"))
                     (rule "ifthenelse_true_for" (formula "24") (term "1,0,1,0"))
                     (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                     (rule "div_axiom" (formula "2") (term "0") (inst "quotient=quotient_2"))
                     (rule "qeq_literals" (formula "2") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                     (rule "equal_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,1,1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "1"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                     (rule "add_literals" (formula "4") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                     (rule "mul_literals" (formula "3") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
                     (rule "mul_literals" (formula "4") (term "0,0,1"))
                     (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
        mul(quotient_2,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "4") (term "0,0"))
                     (rule "concrete_or_2" (formula "4") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_2" (formula "4"))
                     (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
        mul(quotient_2,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "4"))
                     (rule "mul_literals" (formula "26") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "add_zero_left" (formula "3") (term "0"))
                     (rule "inEqSimp_invertInEq1" (formula "3"))
                     (rule "mul_literals" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "neg_literal" (formula "3") (term "0,0,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "5"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "6"))
                     (rule "greater_literals" (formula "11") (term "0,0"))
                     (rule "concrete_and_1" (formula "11") (term "0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (rule "concrete_or_1" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "19"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "4") (term "1,1"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "27") (term "1,1"))
                     (rule "add_zero_right" (formula "27") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "6"))
                     (rule "times_zero_2" (formula "4") (term "1,0,1"))
                     (rule "add_zero_right" (formula "4") (term "0,1"))
                     (rule "applyEq" (formula "2") (term "1") (ifseqformula "6"))
                     (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "6"))
                     (rule "mul_literals" (formula "5") (term "1,0,1"))
                     (rule "add_zero_right" (formula "5") (term "0,1"))
                     (rule "inEqSimp_contradInEq0" (formula "50") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "50") (term "0"))
                     (rule "concrete_and_2" (formula "50"))
                     (rule "closeFalse" (formula "50"))
                  )
               )
               (branch "if x_6 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "42"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "37"))
                  (rule "applyOnPV" (formula "37") (term "0"))
                  (rule "simplifyUpdate1" (formula "37") (term "1"))
                  (rule "ifthenelse_concrete4" (formula "37"))
                  (rule "boolean_not_equal_2" (formula "37") (term "1"))
                  (rule "concrete_or_4" (formula "37"))
                  (rule "notRight" (formula "37"))
                  (rule "compound_inequality_comparison_1" (formula "42") (term "1") (inst "#v0=o"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "o_1"))
                  (rule "eval_order_array_access5" (formula "42") (term "1") (inst "#v1=x_6") (inst "#ar1=o_arr"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "o_arr"))
                  (rule "assignment" (formula "42") (term "1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "applyOnElementary" (formula "42") (term "1,0"))
                  (rule "applyOnPV" (formula "42") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "42") (term "1"))
                  (rule "variableDeclaration" (formula "42") (term "1") (newnames "x_8"))
                  (rule "assignmentSubtractionInt" (formula "42") (term "1"))
                  (rule "translateJavaSubInt" (formula "42") (term "0,0,1"))
                  (rule "sequentialToParallel2" (formula "42"))
                  (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                  (rule "applyOnElementary" (formula "42") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "42") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0"))
                  (rule "applyOnPV" (formula "42") (term "0,0,1,0"))
                  (rule "assignment_array2" (formula "42"))
                  (branch "Normal Execution (o_arr != null)"
                     (rule "sequentialToParallel2" (formula "42"))
                     (rule "simplifyUpdate2" (formula "42"))
                     (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                     (rule "applyOnElementary" (formula "42") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "42") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "42") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "42") (term "2,0,1,0"))
                     (rule "applyOnPV" (formula "42") (term "0,2,0,1,0"))
                     (rule "expand_subJint" (formula "42") (term "0,2,0,1,0"))
                     (rule "polySimp_elimSub" (formula "42") (term "0,0,2,0,1,0"))
                     (rule "mul_literals" (formula "42") (term "1,0,0,2,0,1,0"))
                     (rule "polySimp_addComm0" (formula "42") (term "0,0,2,0,1,0"))
                     (rule "expand_moduloInteger" (formula "42") (term "0,2,0,1,0"))
                     (rule "replace_int_HALFRANGE" (formula "42") (term "0,0,1,0,2,0,1,0"))
                     (rule "replace_int_RANGE" (formula "42") (term "1,1,0,2,0,1,0"))
                     (rule "replace_int_MIN" (formula "42") (term "0,0,2,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,2,0,1,0"))
                     (rule "add_literals" (formula "42") (term "0,0,1,0,2,0,1,0"))
                     (rule "inequality_comparison_simple" (formula "42") (term "1"))
                     (rule "sequentialToParallel2" (formula "42"))
                     (rule "simplifyUpdate2" (formula "42"))
                     (rule "simplifyUpdate3" (formula "42") (term "1,0"))
                     (rule "applyOnElementary" (formula "42") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "42") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "2,0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "42") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "42") (term "1,0,0,1,0"))
                     (rule "applyOnPV" (formula "42") (term "0,0,0,1,0"))
                     (rule "blockEmpty" (formula "42") (term "1"))
                     (rule "ifSplit" (formula "42"))
                     (branch "if x_5 true"
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "applyOnRigidFormula" (formula "1"))
                        (rule "simplifyUpdate1" (formula "1") (term "1"))
                        (rule "applyOnPV" (formula "1") (term "0"))
                        (rule "ifthenelse_concrete4" (formula "1"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1"))
                        (rule "concrete_or_4" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "blockBreakNoLabel" (formula "43") (term "1"))
                        (rule "blockBreakLabel" (formula "43") (term "1"))
                        (rule "blockEmpty" (formula "43") (term "1"))
                        (rule "tryEmpty" (formula "43") (term "1"))
                        (rule "methodCallEmpty" (formula "43") (term "1"))
                        (rule "emptyModality" (formula "43") (term "1"))
                        (rule "applyOnRigidFormula" (formula "43"))
                        (rule "simplifyUpdate2" (formula "43") (term "0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0"))
                        (rule "boolean_not_equal_2" (formula "43") (term "0,0"))
                        (rule "concrete_impl_2" (formula "43") (term "0"))
                        (rule "concrete_and_1" (formula "43"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0"))
                        (rule "boolean_equal" (formula "43") (term "0,0"))
                        (rule "concrete_impl_1" (formula "43") (term "0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,1,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0,0,1"))
                        (rule "boolean_equal" (formula "43") (term "0,0,0,1"))
                        (rule "concrete_or_1" (formula "43") (term "0,0,1"))
                        (rule "concrete_not_1" (formula "43") (term "0,1"))
                        (rule "concrete_impl_2" (formula "43") (term "1"))
                        (rule "concrete_and_3" (formula "43"))
                        (rule "methodCallReturn" (formula "43") (term "1"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "methodCallEmpty" (formula "43") (term "1"))
                        (rule "tryEmpty" (formula "43") (term "1"))
                        (rule "emptyModality" (formula "43") (term "1"))
                        (rule "applyOnRigidFormula" (formula "43"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0"))
                        (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "30"))
                        (rule "concrete_impl_4" (formula "43") (term "0"))
                        (rule "concrete_and_1" (formula "43"))
                        (rule "impRight" (formula "43"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "44"))
                        (rule "simplifyUpdate2" (formula "44") (term "0"))
                        (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "30"))
                        (rule "concrete_and_1" (formula "44"))
                        (rule "orRight" (formula "44"))
                        (rule "applyOnRigidFormula" (formula "38"))
                        (rule "simplifyUpdate1" (formula "38") (term "1"))
                        (rule "applyOnPV" (formula "38") (term "0"))
                        (rule "eqClose" (formula "38"))
                        (rule "closeTrue" (formula "38"))
                     )
                     (branch "if x_5 false"
                        (rule "false_to_not_true" (formula "1") (term "1"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "simplifyUpdate2" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "applyOnRigidFormula" (formula "38"))
                        (rule "simplifyUpdate1" (formula "38") (term "1"))
                        (rule "applyOnPV" (formula "38") (term "0"))
                        (rule "ifthenelse_concrete4" (formula "38"))
                        (rule "boolean_not_equal_2" (formula "38") (term "1"))
                        (rule "concrete_or_4" (formula "38"))
                        (rule "notRight" (formula "38"))
                        (rule "compound_assignment_op_plus" (formula "43") (term "1"))
                        (rule "unusedLabel" (formula "43") (term "1"))
                        (rule "compound_int_cast_expression" (formula "43") (term "1") (inst "#v=x"))
                        (rule "variableDeclarationAssign" (formula "43") (term "1"))
                        (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_9"))
                        (rule "remove_parentheses_right" (formula "43") (term "1"))
                        (rule "compound_addition_2" (formula "43") (term "1") (inst "#v1=x_11") (inst "#v0=x_10"))
                        (rule "variableDeclarationAssign" (formula "43") (term "1"))
                        (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_10"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "applyOnElementary" (formula "43") (term "1,0"))
                        (rule "applyOnPV" (formula "43") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "43") (term "1"))
                        (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_11"))
                        (rule "remove_parentheses_right" (formula "43") (term "1"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "assignmentAdditionInt" (formula "43") (term "1"))
                        (rule "translateJavaAddInt" (formula "43") (term "0,0,1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "applyOnElementary" (formula "43") (term "1,0"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0"))
                        (rule "applyOnPV" (formula "43") (term "1,0,1,0"))
                        (rule "applyOnPV" (formula "43") (term "0,0,1,0"))
                        (rule "expand_addJint" (formula "43") (term "0,1,0"))
                        (rule "polySimp_addComm0" (formula "43") (term "0,0,1,0"))
                        (rule "expand_moduloInteger" (formula "43") (term "0,1,0"))
                        (rule "replace_int_HALFRANGE" (formula "43") (term "0,0,1,0,1,0"))
                        (rule "replace_int_MIN" (formula "43") (term "0,0,1,0"))
                        (rule "replace_int_RANGE" (formula "43") (term "1,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,1,0,1,0"))
                        (rule "widening_identity_cast_5" (formula "43") (term "1"))
                        (rule "assignment" (formula "43") (term "1"))
                        (rule "sequentialToParallel2" (formula "43"))
                        (rule "simplifyUpdate2" (formula "43"))
                        (rule "simplifyUpdate3" (formula "43") (term "1,0"))
                        (rule "applyOnElementary" (formula "43") (term "1,0"))
                        (rule "applyOnPV" (formula "43") (term "0,1,0"))
                        (rule "tryEmpty" (formula "43") (term "1"))
                        (rule "methodCallEmpty" (formula "43") (term "1"))
                        (rule "emptyModality" (formula "43") (term "1"))
                        (rule "applyOnRigidFormula" (formula "43"))
                        (rule "simplifyUpdate2" (formula "43") (term "0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0"))
                        (rule "boolean_not_equal_2" (formula "43") (term "0,0"))
                        (rule "concrete_impl_2" (formula "43") (term "0"))
                        (rule "concrete_and_1" (formula "43"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0"))
                        (rule "boolean_not_equal_2" (formula "43") (term "0,0"))
                        (rule "concrete_impl_2" (formula "43") (term "0"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,1,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,0,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,0,1"))
                        (rule "applyOnPV" (formula "43") (term "0,1,0,0,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0,0,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "1,0,1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,1,0,1,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,1,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0,1,0,1,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,1,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0,0,1,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "1,0,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,1,0,0,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,1,0,0,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,0,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,0,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,1,0,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,0,1,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0,1,0,1,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0,1,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,0,1,0,0,1,1"))
                        (rule "simplifyUpdate2" (formula "43") (term "0,0,0,0,1,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "1,0,1,0,1,0,1,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,1,0,1,0,1,0,1,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,1,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,1,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,1,0,1,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,0,1,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "0,0,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,0,0,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidFormula" (formula "43") (term "1,0,0,0,1,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,1,0,0,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,1,0,0,0,1,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "1,0,1,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "1,1,0,1,0,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,0,1,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "2,0,0,1,1,0,1,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,0,0,1,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,0,1,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,0,0,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "2,0,0,0,1,0,1,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "1,0,0,0,1,0,1,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,0,0,1,0,1,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "0,1,0,1,0,0,0,0,1,1"))
                        (rule "simplifyUpdate1" (formula "43") (term "0,0,1,0,1,0,0,0,0,1,1"))
                        (rule "applyOnRigidTerm" (formula "43") (term "1,0,1,0,1,0,0,0,0,1,1"))
                        (rule "applyOnPV" (formula "43") (term "0,1,0,1,0,1,0,0,0,0,1,1"))
                        (rule "concrete_and_1" (formula "43") (userinteraction))
                        (rule "impRight" (formula "43") (userinteraction))
                        (rule "andRight" (formula "44"))
                        (branch "Case 1"
                           (rule "andRight" (formula "44"))
                           (branch "Case 1"
                              (rule "andRight" (formula "44"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "44"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "44"))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "35") (term "1,0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,1,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "30"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,2,0"))
                                       (rule "jmod_axiom" (formula "37") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_homoEq" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0"))
                                       (rule "jmod_axiom" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "mod_axiom" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                       (rule "jmod_axiom" (formula "19") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "34"))
                                       (rule "leq_literals" (formula "39") (term "0"))
                                       (rule "concrete_or_1" (formula "39"))
                                       (rule "true_left" (formula "39"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                       (rule "concrete_or_1" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "32") (term "0,0,0"))
                                       (rule "ifthenelse_false" (formula "32") (term "0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "elimGcdLeq" (formula "14") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "14") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "0,1,1,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "14") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "newSym_eq" (formula "17") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                       (rule "times_zero_1" (formula "17") (term "1,1"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "20") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEqRigid" (formula "18") (term "0,0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "15") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "33") (term "1,0,0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "18"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "mul_literals" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                       (rule "concrete_or_2" (formula "12") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "newSym_eq" (formula "34") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                       (rule "times_zero_1" (formula "34") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "34") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1"))
                                       (rule "applyEqRigid" (formula "35") (term "0,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0"))
                                       (rule "mul_literals" (formula "35") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                       (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "applyEqRigid" (formula "36") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,1,0,0,0,0"))
                                       (rule "applyEq" (formula "3") (term "0,2,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,1"))
                                       (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "0,1"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,0,1,0,2,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,2,0"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,2,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                       (rule "concrete_or_2" (formula "32") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_2" (formula "32"))
                                       (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_2" (formula "4") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "37") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (rule "concrete_or_2" (formula "37") (term "0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0"))
                                       (rule "concrete_or_2" (formula "37"))
                                       (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcdRightDiv=add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                       (rule "concrete_or_2" (formula "33") (term "0"))
                                       (rule "neg_literal" (formula "33") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                       (rule "concrete_or_2" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "times_zero_1" (formula "26") (term "0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "19"))
                                       (rule "greater_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_and_1" (formula "26") (term "0"))
                                       (rule "mul_literals" (formula "26") (term "1,0"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (rule "concrete_or_1" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
                                       (rule "times_zero_1" (formula "22") (term "0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                       (rule "mul_literals" (formula "22") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "22") (term "0"))
                                       (rule "concrete_or_1" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "nnf_imp2or" (formula "17") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "1,0"))
                                       (rule "double_not" (formula "37") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "commute_and" (formula "17") (term "0,0"))
                                       (rule "commute_and" (formula "21") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,1,0"))
                                       (rule "double_not" (formula "16") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
                                       (rule "double_not" (formula "15") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,1,0,1,0"))
                                       (rule "double_not" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                       (rule "jdiv_axiom" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEq" (formula "18") (term "1") (ifseqformula "19"))
                                       (rule "inEqSimp_subsumption6" (formula "18") (term "0,0") (ifseqformula "21"))
                                       (rule "greater_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "18") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "18") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "equal_literals" (formula "18") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "18"))
                                       (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "18") (term "0,0,0,1,0"))
                                       (rule "div_literals" (formula "18") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                       (rule "add_literals" (formula "18") (term "1,0"))
                                       (rule "times_zero_1" (formula "18") (term "0"))
                                       (rule "eqClose" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "31") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                                       (rule "insert_constant_value" (formula "31") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "insert_constant_value" (formula "31") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "expand_inInt" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
                                       (rule "replace_int_MAX" (formula "31") (term "1,0,1"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "exLeft" (formula "38") (inst "sk=i_1_2"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "eqSymm" (formula "34") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "34") (term "1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,0,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "ifthenelse_negated" (formula "35") (term "2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "45"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "32"))
                                       (rule "inEqSimp_commuteLeq" (formula "31"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "inEqSimp_commuteLeq" (formula "36"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "43") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "29") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                                       (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "jmod_axiom" (formula "38") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                                       (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_pullOutFactor0" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,0"))
                                       (rule "times_zero_1" (formula "38") (term "0"))
                                       (rule "eqClose" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "20"))
                                       (rule "greater_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_1" (formula "31") (term "0"))
                                       (rule "mul_literals" (formula "31") (term "1,0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (rule "concrete_or_1" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "inEqSimp_subsumption4" (formula "31") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0"))
                                       (rule "greater_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_1" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (rule "concrete_or_1" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "elimGcdLeq" (formula "40") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "1,0,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "40") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "1,0,1,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "1,1,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "40") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addLiterals" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "36") (term "0"))
                                       (rule "concrete_or_1" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                       (rule "times_zero_1" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "20"))
                                       (rule "greater_literals" (formula "33") (term "0,0"))
                                       (rule "concrete_and_1" (formula "33") (term "0"))
                                       (rule "mul_literals" (formula "33") (term "1,0"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                       (rule "concrete_or_1" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "15") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "1,0"))
                                       (rule "commute_or" (formula "46") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "32") (term "1,0,1,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "commute_or" (formula "15") (term "0,0"))
                                       (rule "jdiv_axiom" (formula "44") (term "0"))
                                       (rule "eqSymm" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "44") (term "0,0,0,2,0"))
                                       (rule "applyEq" (formula "44") (term "1") (ifseqformula "45"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0"))
                                       (rule "inEqSimp_subsumption6" (formula "44") (term "0,0") (ifseqformula "42"))
                                       (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "44") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "44") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "44") (term "0") (inst "polyDivCoeff=l_1"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "44") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "44") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                       (rule "div_literals" (formula "44") (term "0,0"))
                                       (rule "eqClose" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "div_axiom" (formula "2") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                                       (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                       (rule "add_literals" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_2" (formula "4") (term "0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "45") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                       (rule "add_literals" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                       (rule "mul_literals" (formula "45") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "45") (term "0,0"))
                                       (rule "concrete_or_2" (formula "45") (term "0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "45") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0"))
                                       (rule "leq_literals" (formula "45") (term "0"))
                                       (rule "concrete_or_2" (formula "45"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "3"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "46"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "45"))
                                       (rule "qeq_literals" (formula "46"))
                                       (rule "true_left" (formula "46"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "45"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_zero_right" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "45"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,0,2,0") (ifseqformula "45"))
                                       (rule "times_zero_2" (formula "5") (term "1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,2,0"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "45"))
                                       (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_1" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "45"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "nnf_imp2or" (formula "40") (term "1,0"))
                                       (rule "commute_or" (formula "48") (term "0,0,0"))
                                       (rule "div_axiom" (formula "1") (term "0,0") (inst "quotient=quotient_1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEqRigid" (formula "4") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "4"))
                                       (rule "greater_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_and_1" (formula "3") (term "0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "46") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                       (rule "add_literals" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                       (rule "mul_literals" (formula "46") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "46") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "46") (term "0,0"))
                                       (rule "concrete_or_2" (formula "46") (term "0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "46") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0"))
                                       (rule "leq_literals" (formula "46") (term "0"))
                                       (rule "concrete_or_2" (formula "46"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "47"))
                                       (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "2") (term "0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "Case 2"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "16") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0"))
                                       (rule "applyEq" (formula "35") (term "1,0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "29") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,0,1,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "22") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "30"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "30"))
                                       (rule "mod_axiom" (formula "2") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,2,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,2,0"))
                                       (rule "jmod_axiom" (formula "37") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_homoEq" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0"))
                                       (rule "jmod_axiom" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                       (rule "polySimp_homoEq" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                       (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                       (rule "mod_axiom" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                       (rule "jmod_axiom" (formula "19") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "19"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                       (rule "polySimp_elimOne" (formula "29") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0,1"))
                                       (rule "mul_literals" (formula "35") (term "0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                       (rule "concrete_or_1" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                       (rule "concrete_or_1" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "32") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "32") (term "0,0,0"))
                                       (rule "ifthenelse_false" (formula "32") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "14") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "14") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,1,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "0,1,1,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "1,1,0,0,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "14") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_1" (formula "14") (term "0,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,0,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,1,0,1") (inst "polyDivCoeff=Z(1(#))"))
                                       (rule "equal_literals" (formula "1") (term "0,0,1,0,1"))
                                       (rule "ifthenelse_false" (formula "1") (term "0,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1,0,1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1"))
                                       (rule "newSym_eq" (formula "17") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                       (rule "times_zero_1" (formula "17") (term "1,1"))
                                       (rule "add_zero_right" (formula "17") (term "1"))
                                       (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0,1,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEqRigid" (formula "20") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "13") (term "1,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0") (ifseqformula "17"))
                                       (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "17"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0"))
                                       (rule "applyEqRigid" (formula "15") (term "1,0,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "15") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "33") (term "1,0,0,0") (ifseqformula "18"))
                                       (rule "inEqSimp_homoInEq0" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "14") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "28") (term "1") (ifseqformula "18"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "applyEqRigid" (formula "33") (term "1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1"))
                                       (rule "mul_literals" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1"))
                                       (rule "mul_literals" (formula "27") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                       (rule "neg_literal" (formula "12") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "12") (term "0,0"))
                                       (rule "concrete_or_2" (formula "12") (term "0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "12") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                       (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0"))
                                       (rule "qeq_literals" (formula "12") (term "0"))
                                       (rule "concrete_or_2" (formula "12"))
                                       (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                       (rule "concrete_or_2" (formula "19") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (rule "concrete_or_2" (formula "19"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "sub_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "14") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0,1,0,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
                                       (rule "newSym_eq" (formula "34") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                       (rule "times_zero_1" (formula "34") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "34") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1"))
                                       (rule "applyEqRigid" (formula "35") (term "0,0") (ifseqformula "34"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "0"))
                                       (rule "mul_literals" (formula "35") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                       (rule "mul_literals" (formula "35") (term "0,1"))
                                       (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,1"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                       (rule "add_literals" (formula "37") (term "0,0"))
                                       (rule "applyEqRigid" (formula "3") (term "0,2,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "1") (term "1,0,0,1,1") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,1"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq1" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "applyEq" (formula "36") (term "1,1,0,0,0,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,1,0,0,0,0"))
                                       (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "35"))
                                       (rule "applyEq" (formula "2") (term "1,0,0,1,0,2,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,1,0,2,0"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "applyEqRigid" (formula "2") (term "1,0,0,2,0") (ifseqformula "35"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,2,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,2,0"))
                                       (rule "applyEqRigid" (formula "1") (term "0,1,0,0,0") (ifseqformula "35"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,1"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1"))
                                       (rule "elimGcdLeq_antec" (formula "1") (inst "elimGcdRightDiv=add(add(add(Z(neglit(1(#))), l_1),
        mul(l_0, Z(neglit(1(#))))),
    mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
                mul(l_0, Z(2(#)))),
            Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
        Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_2" (formula "4") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "32") (term "0,0"))
                                       (rule "concrete_or_2" (formula "32") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_2" (formula "32"))
                                       (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                       (rule "concrete_or_2" (formula "37") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "qeq_literals" (formula "37") (term "0"))
                                       (rule "concrete_or_2" (formula "37"))
                                       (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "33") (term "0,0"))
                                       (rule "concrete_or_2" (formula "33") (term "0"))
                                       (rule "neg_literal" (formula "33") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                       (rule "concrete_or_2" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                       (rule "times_zero_1" (formula "21") (term "0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                       (rule "leq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                       (rule "times_zero_1" (formula "26") (term "0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "19"))
                                       (rule "greater_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_and_1" (formula "26") (term "0"))
                                       (rule "mul_literals" (formula "26") (term "1,0"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                       (rule "concrete_or_1" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (rule "concrete_or_1" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "nnf_imp2or" (formula "37") (term "1,0"))
                                       (rule "double_not" (formula "37") (term "0,1,0"))
                                       (rule "nnf_imp2or" (formula "17") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "commute_and" (formula "21") (term "0,0"))
                                       (rule "commute_and" (formula "17") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,1,0"))
                                       (rule "double_not" (formula "16") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
                                       (rule "double_not" (formula "15") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "37") (term "0,1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                                       (rule "jdiv_axiom" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "19"))
                                       (rule "inEqSimp_subsumption6" (formula "18") (term "0,0") (ifseqformula "21"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "greater_literals" (formula "18") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "18") (term "0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "18") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "18") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "18") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,2,0"))
                                       (rule "equal_literals" (formula "18") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "18") (term "0"))
                                       (rule "polySimp_pullOutFactor0" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "0,0,0"))
                                       (rule "div_literals" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "eqClose" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,1,0,1,0"))
                                       (rule "double_not" (formula "21") (term "0,0,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,1,0"))
                                       (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "31") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                                       (rule "insert_constant_value" (formula "31") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "insert_constant_value" (formula "31") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "expand_inInt" (formula "31") (term "1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                       (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
                                       (rule "replace_int_MAX" (formula "31") (term "1,0,1"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "exLeft" (formula "38") (inst "sk=i_1_2"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "eqSymm" (formula "34") (term "1,1,0,1,0"))
                                       (rule "eqSymm" (formula "34") (term "1,0,1,0,1,0"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,0,0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,1,0,1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "ifthenelse_negated" (formula "35") (term "2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "45"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "32"))
                                       (rule "inEqSimp_commuteLeq" (formula "31"))
                                       (rule "inEqSimp_commuteLeq" (formula "40"))
                                       (rule "inEqSimp_commuteLeq" (formula "36"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "32") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0"))
                                       (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "43") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "38") (term "0") (ifseqformula "29"))
                                       (rule "eqSymm" (formula "38"))
                                       (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "38"))
                                       (rule "applyEqRigid" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "40") (term "0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "applyEqRigid" (formula "43") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "37"))
                                       (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                                       (rule "jmod_axiom" (formula "38") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                                       (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_pullOutFactor0" (formula "38") (term "0"))
                                       (rule "add_literals" (formula "38") (term "1,0"))
                                       (rule "times_zero_1" (formula "38") (term "0"))
                                       (rule "eqClose" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_subsumption4" (formula "32") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "32") (term "0,0"))
                                       (rule "concrete_and_1" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "0,0"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                       (rule "concrete_or_1" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "31") (term "1,1,0"))
                                       (rule "greater_literals" (formula "31") (term "0,0"))
                                       (rule "concrete_and_1" (formula "31") (term "0"))
                                       (rule "leq_literals" (formula "31") (term "0"))
                                       (rule "concrete_or_1" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "elimGcdLeq" (formula "40") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "0,1,0,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "1,0,0,0,1,1,0"))
                                       (rule "elimGcdLeq" (formula "40") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "1,0,1,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "1,1,0,0,1,1,0"))
                                       (rule "elimGcdGeq" (formula "40") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "leq_literals" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "concrete_and_3" (formula "40") (term "0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,1,0,0,1,1,0"))
                                       (rule "ifthenelse_true_for" (formula "40") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                                       (rule "times_zero_1" (formula "33") (term "0,0"))
                                       (rule "add_zero_left" (formula "33") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "20"))
                                       (rule "mul_literals" (formula "33") (term "1,1,0"))
                                       (rule "greater_literals" (formula "33") (term "0,0"))
                                       (rule "concrete_and_1" (formula "33") (term "0"))
                                       (rule "leq_literals" (formula "33") (term "0"))
                                       (rule "concrete_or_1" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                                       (rule "times_zero_1" (formula "36") (term "0,0"))
                                       (rule "add_zero_left" (formula "36") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                       (rule "mul_literals" (formula "36") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "36") (term "0"))
                                       (rule "concrete_or_1" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0,0,0,1,1,0"))
                                       (rule "nnf_notOr" (formula "15") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,1,1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "1,0"))
                                       (rule "nnf_imp2or" (formula "32") (term "1,0,1,0"))
                                       (rule "commute_or" (formula "46") (term "1,0"))
                                       (rule "jdiv_axiom" (formula "44") (term "0"))
                                       (rule "eqSymm" (formula "44"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,2,0"))
                                       (rule "mul_literals" (formula "44") (term "0,0,0,2,0"))
                                       (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "45"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0"))
                                       (rule "inEqSimp_subsumption6" (formula "44") (term "0,0") (ifseqformula "42"))
                                       (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "44") (term "0,0,0"))
                                       (rule "concrete_or_1" (formula "44") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "44") (term "0"))
                                       (rule "polyDiv_pullOut" (formula "44") (term "0") (inst "polyDivCoeff=l_1"))
                                       (rule "equal_literals" (formula "44") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "44") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "44"))
                                       (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0,1,0"))
                                       (rule "div_literals" (formula "44") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                       (rule "add_literals" (formula "44") (term "1,0"))
                                       (rule "times_zero_1" (formula "44") (term "0"))
                                       (rule "eqClose" (formula "44"))
                                       (rule "true_left" (formula "44"))
                                       (rule "div_axiom" (formula "2") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                       (rule "add_literals" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_2" (formula "4") (term "0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "45") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                       (rule "add_literals" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                       (rule "mul_literals" (formula "45") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "45") (term "0,0"))
                                       (rule "concrete_or_2" (formula "45") (term "0"))
                                       (rule "polySimp_addLiterals" (formula "45") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                       (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0"))
                                       (rule "leq_literals" (formula "45") (term "0"))
                                       (rule "concrete_or_2" (formula "45"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "3"))
                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "46"))
                                       (rule "qeq_literals" (formula "47"))
                                       (rule "true_left" (formula "47"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "46"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "45"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_zero_right" (formula "4") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "45"))
                                       (rule "times_zero_2" (formula "3") (term "1,1"))
                                       (rule "add_zero_right" (formula "3") (term "1"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0,2,0") (ifseqformula "45"))
                                       (rule "times_zero_2" (formula "5") (term "1,0,0,2,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,2,0"))
                                       (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "45"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "46"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_1" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "commute_or" (formula "17") (term "0,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "40") (term "1,0"))
                                       (rule "div_axiom" (formula "1") (term "0,1,1") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                       (rule "add_literals" (formula "3") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "48"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0,0"))
                                       (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                       (rule "polySimp_rightDist" (formula "48") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "48") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1"))
                                       (rule "mul_literals" (formula "48") (term "0,0,1"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "3"))
                                       (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                       (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                                       (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                       (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                       (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "48") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                       (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                       (rule "polySimp_elimOne" (formula "48") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "8"))
                                       (rule "leq_literals" (formula "48") (term "0"))
                                       (rule "concrete_or_1" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                       (rule "concrete_or_2" (formula "2") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0"))
                                       (rule "polySimp_rightDist" (formula "49") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                       (rule "polySimp_elimOne" (formula "49") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "26") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                       (rule "concrete_or_2" (formula "26") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0"))
                                       (rule "leq_literals" (formula "26") (term "0"))
                                       (rule "concrete_or_2" (formula "26"))
                                       (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                                       (rule "qeq_literals" (formula "27"))
                                       (rule "true_left" (formula "27"))
                                       (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "4") (term "1,1"))
                                       (rule "add_literals" (formula "4") (term "1"))
                                       (rule "applyEqRigid" (formula "10") (term "0,1,1") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "10") (term "1,1"))
                                       (rule "add_literals" (formula "10") (term "1"))
                                       (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "3") (term "1,1"))
                                       (rule "add_literals" (formula "3") (term "1"))
                                       (rule "applyEqRigid" (formula "51") (term "0,1,1") (ifseqformula "26"))
                                       (rule "mul_literals" (formula "51") (term "1,1"))
                                       (rule "add_literals" (formula "51") (term "1"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "51") (term "0,1,0,1") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "51") (term "1,0,1"))
                                       (rule "add_literals" (formula "51") (term "0,1"))
                                       (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "25"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,0,1") (ifseqformula "25"))
                                       (rule "mul_literals" (formula "4") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "4") (term "0,0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "10"))
                                       (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                       (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "51") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                       (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "51") (term "0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0"))
                                       (rule "concrete_or_1" (formula "51"))
                                       (rule "true_left" (formula "51"))
                                       (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "48") (term "0"))
                                       (rule "concrete_or_1" (formula "48"))
                                       (rule "true_left" (formula "48"))
                                       (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                       (rule "concrete_or_1" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "div_axiom" (formula "2") (term "0,0") (inst "quotient=quotient_2"))
                                       (rule "qeq_literals" (formula "2") (term "0,1,1"))
                                       (rule "ifthenelse_true_for" (formula "2") (term "1,1"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_2" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                       (rule "add_literals" (formula "4") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "4") (term "0,0"))
                                       (rule "concrete_or_2" (formula "4") (term "0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (rule "concrete_or_2" (formula "4"))
                                       (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                       (rule "concrete_or_2" (formula "3") (term "0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                       (rule "concrete_or_2" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "49") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                       (rule "add_literals" (formula "49") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                       (rule "mul_literals" (formula "49") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "49") (term "0,0"))
                                       (rule "concrete_or_2" (formula "49") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                       (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "49") (term "0,0"))
                                       (rule "leq_literals" (formula "49") (term "0"))
                                       (rule "concrete_or_2" (formula "49"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0"))
                                       (rule "add_zero_right" (formula "10") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                       (rule "inEqSimp_contradInEq5" (formula "10") (ifseqformula "50"))
                                       (rule "greater_literals" (formula "10") (term "0,0"))
                                       (rule "concrete_impl_1" (formula "10") (term "0"))
                                       (rule "mul_literals" (formula "10") (term "1,0"))
                                       (rule "qeq_literals" (formula "10") (term "0"))
                                       (rule "concrete_and_2" (formula "10"))
                                       (rule "closeFalse" (formula "10"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                    (rule "concrete_or_2" (formula "1") (term "0"))
                                    (rule "concrete_not_2" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                    (rule "applyEq" (formula "34") (term "1,0,0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "13") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "16") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                                    (rule "mod_axiom" (formula "1") (term "1,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,2,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,2,0"))
                                    (rule "jmod_axiom" (formula "36") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                                    (rule "polySimp_homoEq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0"))
                                    (rule "mod_axiom" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "jmod_axiom" (formula "35") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                    (rule "mod_axiom" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                    (rule "jmod_axiom" (formula "18") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                    (rule "polySimp_sepNegMonomial" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,0,1"))
                                    (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "33"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                    (rule "concrete_or_1" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_1" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                                    (rule "leq_literals" (formula "12") (term "0"))
                                    (rule "concrete_or_1" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,2,0,0"))
                                    (rule "equal_literals" (formula "31") (term "0,0,0"))
                                    (rule "ifthenelse_false" (formula "31") (term "0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "0"))
                                    (rule "mul_literals" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "elimGcdLeq" (formula "13") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,1,1,0"))
                                    (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,1,1,0"))
                                    (rule "polyDiv_pullOut" (formula "39") (term "0,1,0,0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "equal_literals" (formula "39") (term "0,0,1,0,0"))
                                    (rule "ifthenelse_false" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                    (rule "elimGcdGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "elimGcdGeq" (formula "13") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "newSym_eq" (formula "16") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                    (rule "times_zero_1" (formula "16") (term "1,1"))
                                    (rule "add_zero_right" (formula "16") (term "1"))
                                    (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "applyEq" (formula "19") (term "1,1,0,0,0,1,0") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "13") (term "1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "12") (term "1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "16"))
                                    (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "16"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "applyEq" (formula "13") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq0" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "17"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "27") (term "1") (ifseqformula "17"))
                                    (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "mul_literals" (formula "26") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "11") (term "0,0"))
                                    (rule "concrete_or_2" (formula "11") (term "0"))
                                    (rule "neg_literal" (formula "11") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                    (rule "concrete_or_2" (formula "11"))
                                    (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,1,1,0"))
                                    (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "newSym_eq" (formula "33") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                    (rule "times_zero_1" (formula "33") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "33") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "1"))
                                    (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "0"))
                                    (rule "mul_literals" (formula "34") (term "0,0"))
                                    (rule "polySimp_homoEq" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "34") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "0,0"))
                                    (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "32") (term "0,1,1") (ifseqformula "34"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                    (rule "polySimp_addComm1" (formula "32") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                                    (rule "add_literals" (formula "32") (term "0,0,1"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                    (rule "inEqSimp_homoInEq1" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                    (rule "add_literals" (formula "31") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "1,0,0,1,0,2,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,2,0"))
                                    (rule "applyEq" (formula "41") (term "1,0,0,1,0,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "applyEq" (formula "35") (term "1,1,0,0,0,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,1,0,0,0,0"))
                                    (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "34"))
                                    (rule "applyEqRigid" (formula "41") (term "1,0,0,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "1,0,0,2,0") (ifseqformula "34"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,2,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                    (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "31") (term "0,0"))
                                    (rule "concrete_or_2" (formula "31") (term "0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0"))
                                    (rule "leq_literals" (formula "31") (term "0"))
                                    (rule "concrete_or_2" (formula "31"))
                                    (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                    (rule "concrete_or_2" (formula "3") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_2" (formula "3"))
                                    (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "neg_literal" (formula "36") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0"))
                                    (rule "concrete_or_2" (formula "36") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0"))
                                    (rule "qeq_literals" (formula "36") (term "0"))
                                    (rule "concrete_or_2" (formula "36"))
                                    (rule "elimGcdLeq_antec" (formula "32") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "32") (term "0,0"))
                                    (rule "concrete_or_2" (formula "32") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                    (rule "neg_literal" (formula "32") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0"))
                                    (rule "concrete_or_2" (formula "32"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                    (rule "concrete_or_1" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                                    (rule "times_zero_1" (formula "26") (term "0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                    (rule "mul_literals" (formula "26") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "26") (term "0,0"))
                                    (rule "concrete_and_1" (formula "26") (term "0"))
                                    (rule "mul_literals" (formula "26") (term "1,0"))
                                    (rule "leq_literals" (formula "26") (term "0"))
                                    (rule "concrete_or_1" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "22"))
                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                    (rule "mul_literals" (formula "21") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                    (rule "concrete_or_1" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "nnf_imp2or" (formula "36") (term "1,0"))
                                    (rule "double_not" (formula "36") (term "0,1,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "20") (term "1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "commute_and" (formula "16") (term "0,0"))
                                    (rule "commute_and" (formula "20") (term "0,0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "14") (term "1,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
                                    (rule "double_not" (formula "15") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                                    (rule "double_not" (formula "14") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,1,0,1,0"))
                                    (rule "double_not" (formula "20") (term "0,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "17") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "18"))
                                    (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "20"))
                                    (rule "greater_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "17") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "17") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "17") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "17") (term "0"))
                                    (rule "polySimp_homoEq" (formula "17"))
                                    (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "17") (term "1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "17") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "17") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                    (rule "add_literals" (formula "17") (term "1,0"))
                                    (rule "times_zero_1" (formula "17") (term "0"))
                                    (rule "eqClose" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "nnf_notOr" (formula "14") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0,0,1,1,0"))
                                    (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "30") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "9"))
                                    (rule "insert_constant_value" (formula "30") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "insert_constant_value" (formula "30") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "expand_inInt" (formula "30") (term "1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replace_int_MAX" (formula "30") (term "1,0,1"))
                                    (rule "replace_int_MIN" (formula "30") (term "0,1,1"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "andLeft" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "exLeft" (formula "37") (inst "sk=i_1_2"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "exLeft" (formula "35") (inst "sk=i_2_0"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "eqSymm" (formula "33") (term "1,0,1,0,1,0"))
                                    (rule "eqSymm" (formula "33") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,0,0,2,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "40") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "ifthenelse_negated" (formula "34") (term "2,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "31"))
                                    (rule "inEqSimp_commuteLeq" (formula "30"))
                                    (rule "inEqSimp_commuteLeq" (formula "39"))
                                    (rule "inEqSimp_commuteLeq" (formula "35"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "28"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "37"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "37"))
                                    (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "17"))
                                    (rule "applyEqRigid" (formula "39") (term "0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                                    (rule "jmod_axiom" (formula "37") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                                    (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "17"))
                                    (rule "polySimp_pullOutFactor0" (formula "37") (term "0"))
                                    (rule "add_literals" (formula "37") (term "1,0"))
                                    (rule "times_zero_1" (formula "37") (term "0"))
                                    (rule "eqClose" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "19"))
                                    (rule "mul_literals" (formula "30") (term "1,1,0"))
                                    (rule "greater_literals" (formula "30") (term "0,0"))
                                    (rule "concrete_and_1" (formula "30") (term "0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (rule "concrete_or_1" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "inEqSimp_subsumption4" (formula "30") (ifseqformula "12"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0"))
                                    (rule "greater_literals" (formula "30") (term "0,0"))
                                    (rule "concrete_and_1" (formula "30") (term "0"))
                                    (rule "leq_literals" (formula "30") (term "0"))
                                    (rule "concrete_or_1" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "elimGcdLeq" (formula "39") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "39") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "39") (term "0,1,0,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "39") (term "1,0,0,0,1,1,0"))
                                    (rule "elimGcdLeq" (formula "39") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "39") (term "1,0,1,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "39") (term "1,1,0,0,1,1,0"))
                                    (rule "elimGcdGeq" (formula "39") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "leq_literals" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "concrete_and_3" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
                                    (rule "ifthenelse_true_for" (formula "39") (term "0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                                    (rule "times_zero_1" (formula "32") (term "0,0"))
                                    (rule "add_zero_left" (formula "32") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                    (rule "mul_literals" (formula "32") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "19"))
                                    (rule "greater_literals" (formula "32") (term "0,0"))
                                    (rule "concrete_and_1" (formula "32") (term "0"))
                                    (rule "mul_literals" (formula "32") (term "1,0"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (rule "concrete_or_1" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                                    (rule "times_zero_1" (formula "35") (term "0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                    (rule "mul_literals" (formula "35") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (rule "concrete_or_1" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "14") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "30") (term "1,0"))
                                    (rule "nnf_imp2or" (formula "31") (term "1,0,1,0"))
                                    (rule "commute_or" (formula "45") (term "1,0"))
                                    (rule "commute_or" (formula "15") (term "0,0"))
                                    (rule "commute_or_2" (formula "16") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "jdiv_axiom" (formula "43") (term "0"))
                                    (rule "eqSymm" (formula "43"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "0,0,2,0"))
                                    (rule "mul_literals" (formula "43") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                                    (rule "applyEq" (formula "43") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "41"))
                                    (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "43") (term "0,0,0"))
                                    (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                    (rule "leq_literals" (formula "43") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "43") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "43") (term "0"))
                                    (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "equal_literals" (formula "43") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "43") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                    (rule "polySimp_homoEq" (formula "43"))
                                    (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0"))
                                    (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "43") (term "0,0,0,1,0"))
                                    (rule "div_literals" (formula "43") (term "0,0,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                    (rule "add_literals" (formula "43") (term "1,0"))
                                    (rule "times_zero_1" (formula "43") (term "0"))
                                    (rule "eqClose" (formula "43"))
                                    (rule "true_left" (formula "43"))
                                    (rule "nnf_imp2or" (formula "38") (term "1,0"))
                                    (rule "div_axiom" (formula "1") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (rule "ifthenelse_true_for" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,0,2,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                    (rule "concrete_or_2" (formula "3") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_2" (formula "3"))
                                    (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (rule "concrete_or_2" (formula "2") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (rule "concrete_or_2" (formula "2") (term "0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "45") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                    (rule "add_literals" (formula "45") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                                    (rule "mul_literals" (formula "45") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "45") (term "0,0"))
                                    (rule "concrete_or_2" (formula "45") (term "0"))
                                    (rule "polySimp_addLiterals" (formula "45") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "45") (term "0,0"))
                                    (rule "leq_literals" (formula "45") (term "0"))
                                    (rule "concrete_or_2" (formula "45"))
                                    (rule "inEqSimp_antiSymm" (formula "45") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "45"))
                                    (rule "times_zero_2" (formula "3") (term "1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1"))
                                    (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "45"))
                                    (rule "times_zero_2" (formula "4") (term "1,1"))
                                    (rule "add_zero_right" (formula "4") (term "1"))
                                    (rule "applyEqRigid" (formula "46") (term "0") (ifseqformula "45"))
                                    (rule "qeq_literals" (formula "46"))
                                    (rule "true_left" (formula "46"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "45"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "4") (term "0,1,0,0,2,0") (ifseqformula "44"))
                                    (rule "times_zero_2" (formula "4") (term "1,0,0,2,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
                                    (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "44"))
                                    (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_1" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "44"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "div_axiom" (formula "52") (term "0,1,0,0") (inst "quotient=quotient_1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                                    (rule "equal_literals" (formula "1") (term "0"))
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (rule "ifthenelse_true_for" (formula "1") (term "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                    (rule "add_literals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1"))
                                    (rule "add_literals" (formula "3") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "55") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                    (rule "jmod_axiom" (formula "55") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "55"))
                                    (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                                    (rule "mul_literals" (formula "55") (term "0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "elimGcdEq" (formula "55") (inst "elimGcdRightDiv=add(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(quotient_1,
            Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=jdiv(add(add(Z(neglit(5(9(2(7(6(9(4(9(2(4(#)))))))))))),
             mul(quotient_1,
                 Z(neglit(6(9(2(7(6(9(4(9(2(4(#)))))))))))))),
         mul(l_1, Z(2(#)))),
     Z(2(#)))") (inst "elimGcd=Z(2(#))"))
                                    (rule "eqClose" (formula "55") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "55") (term "0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,1"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "55") (term "0,0,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,1,0,1,0"))
                                    (rule "mul_literals" (formula "55") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "55") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "55") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,1"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,1,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,0"))
                                    (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,1"))
                                    (rule "add_literals" (formula "55") (term "1,0,0,1"))
                                    (rule "times_zero_1" (formula "55") (term "0,0,1"))
                                    (rule "eqClose" (formula "55") (term "0,1"))
                                    (rule "concrete_and_1" (formula "55") (term "1"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,1,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "55") (term "0,0,1,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "55") (term "0,1,0"))
                                    (rule "add_literals" (formula "55") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "55") (term "0,1,0"))
                                    (rule "qeq_literals" (formula "55") (term "1,0"))
                                    (rule "concrete_and_3" (formula "55") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                                    (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                    (rule "add_zero_left" (formula "55") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0"))
                                    (rule "add_literals" (formula "55") (term "1,0,0"))
                                    (rule "times_zero_1" (formula "55") (term "0,0"))
                                    (rule "leq_literals" (formula "55") (term "0"))
                                    (rule "ifthenelse_true_for" (formula "55"))
                                    (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "3") (term "0,0"))
                                    (rule "concrete_or_2" (formula "3") (term "0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_or_2" (formula "3"))
                                    (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (rule "concrete_or_2" (formula "2") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                    (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "2") (term "0,0"))
                                    (rule "concrete_or_2" (formula "2") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_2" (formula "2"))
                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "4"))
                                    (rule "mul_literals" (formula "47") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                    (rule "add_literals" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                    (rule "mul_literals" (formula "47") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "47") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                    (rule "leq_literals" (formula "47") (term "0,0"))
                                    (rule "concrete_or_2" (formula "47") (term "0"))
                                    (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "47") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0"))
                                    (rule "leq_literals" (formula "47") (term "0"))
                                    (rule "concrete_or_2" (formula "47"))
                                    (rule "inEqSimp_antiSymm" (formula "47") (ifseqformula "2"))
                                    (rule "applyEq" (formula "48") (term "0") (ifseqformula "47"))
                                    (rule "qeq_literals" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "47"))
                                    (rule "mul_literals" (formula "4") (term "1,1"))
                                    (rule "add_literals" (formula "4") (term "1"))
                                    (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "47"))
                                    (rule "mul_literals" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "47"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "46"))
                                    (rule "applyEqRigid" (formula "56") (term "0,1,0,0,0") (ifseqformula "46"))
                                    (rule "mul_literals" (formula "56") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0"))
                                    (rule "applyEq" (formula "56") (term "0,1,0,1") (ifseqformula "46"))
                                    (rule "mul_literals" (formula "56") (term "1,0,1"))
                                    (rule "add_literals" (formula "56") (term "0,1"))
                                    (rule "add_zero_left" (formula "56") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "47"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "commute_or" (formula "49") (term "0,0,0"))
                                    (rule "shift_paren_or" (formula "22") (term "0,1,0"))
                                    (rule "div_axiom" (formula "46") (term "0,0") (inst "quotient=quotient_2"))
                                    (rule "equal_literals" (formula "46") (term "0"))
                                    (rule "concrete_or_2" (formula "46"))
                                    (rule "qeq_literals" (formula "46") (term "0,1"))
                                    (rule "ifthenelse_true_for" (formula "46") (term "1"))
                                    (rule "mul_literals" (formula "46") (term "1,1,1"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,1"))
                                    (rule "add_literals" (formula "48") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "48") (term "1"))
                                    (rule "add_literals" (formula "48") (term "0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "47"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "48"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0"))
                                    (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "46"))
                                    (rule "inEqSimp_homoInEq0" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                    (rule "mul_literals" (formula "47") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                    (rule "mul_literals" (formula "48") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "49") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1"))
                                    (rule "mul_literals" (formula "49") (term "0,0,1"))
                                    (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "leq_literals" (formula "48") (term "0,0"))
                                    (rule "concrete_or_2" (formula "48") (term "0"))
                                    (rule "neg_literal" (formula "48") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                    (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                    (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0"))
                                    (rule "qeq_literals" (formula "48") (term "0"))
                                    (rule "concrete_or_2" (formula "48"))
                                    (rule "elimGcdGeq_antec" (formula "47") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "47") (term "0,0"))
                                    (rule "concrete_or_2" (formula "47") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "47") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "47") (term "0,0,0"))
                                    (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                    (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "47") (term "0,0"))
                                    (rule "leq_literals" (formula "47") (term "0"))
                                    (rule "concrete_or_2" (formula "47"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "48"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "49"))
                                    (rule "mul_literals" (formula "22") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                    (rule "add_literals" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                    (rule "mul_literals" (formula "22") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                    (rule "concrete_or_2" (formula "22") (term "0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                    (rule "leq_literals" (formula "22") (term "0"))
                                    (rule "concrete_or_2" (formula "22"))
                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "50"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "51") (term "0"))
                                    (rule "concrete_or_1" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "15"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "0,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                    (rule "add_literals" (formula "51") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "15"))
                                    (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0"))
                                    (rule "mul_literals" (formula "49") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "49") (term "0"))
                                    (rule "add_literals" (formula "49") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                    (rule "neg_literal" (formula "49") (term "0,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "49") (term "0,0"))
                                    (rule "concrete_or_2" (formula "49") (term "0"))
                                    (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0"))
                                    (rule "qeq_literals" (formula "49") (term "0"))
                                    (rule "concrete_or_2" (formula "49"))
                                    (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "6"))
                                    (rule "mul_literals" (formula "47") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                    (rule "add_literals" (formula "47") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                                    (rule "mul_literals" (formula "47") (term "1"))
                                    (rule "inEqSimp_subsumption6" (formula "47") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "47") (term "1,1,0"))
                                    (rule "greater_literals" (formula "47") (term "0,0"))
                                    (rule "concrete_and_1" (formula "47") (term "0"))
                                    (rule "leq_literals" (formula "47") (term "0"))
                                    (rule "concrete_or_1" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "49"))
                                    (rule "applyEq" (formula "51") (term "0,1,1") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "51") (term "1,1"))
                                    (rule "add_literals" (formula "51") (term "1"))
                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                    (rule "qeq_literals" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "applyEqRigid" (formula "6") (term "0,1,1") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "6") (term "1,1"))
                                    (rule "add_literals" (formula "6") (term "1"))
                                    (rule "applyEqRigid" (formula "51") (term "0,1,1") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "51") (term "1,1"))
                                    (rule "add_literals" (formula "51") (term "1"))
                                    (rule "applyEq" (formula "50") (term "0,1,1") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "50") (term "1,1"))
                                    (rule "add_literals" (formula "50") (term "1"))
                                    (rule "applyEq" (formula "52") (term "0,1,0,1") (ifseqformula "22"))
                                    (rule "mul_literals" (formula "52") (term "1,0,1"))
                                    (rule "add_literals" (formula "52") (term "0,1"))
                                    (rule "applyEq" (formula "48") (term "1") (ifseqformula "22"))
                                    (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "23"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (rule "concrete_or_1" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                    (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "51") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                    (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "51") (term "0,0"))
                                    (rule "qeq_literals" (formula "51") (term "0"))
                                    (rule "concrete_or_1" (formula "51"))
                                    (rule "true_left" (formula "51"))
                                    (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "15"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (rule "concrete_or_1" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "49") (term "0"))
                                    (rule "concrete_or_1" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "5"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                    (rule "concrete_or_1" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "commute_or_2" (formula "17") (term "0,1,1,0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                    (rule "nnf_imp2or" (formula "34") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "nnf_notOr" (formula "16") (term "1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "16") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "42") (term "1,0"))
                                    (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                    (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,1,0"))
                                    (rule "double_not" (formula "41") (term "0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                                    (rule "commute_or_2" (formula "50") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,1,0"))
                                    (rule "double_not" (formula "42") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1,0,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "23") (term "0,0,1,0"))
                                    (rule "inEqSimp_or_weaken2" (formula "23") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "1,0,1,0,1,0"))
                                    (rule "add_literals" (formula "23") (term "0,1,0,1,0,1,0"))
                                    (rule "add_zero_left" (formula "23") (term "1,0,1,0,1,0"))
                                    (rule "eqClose" (formula "23") (term "0,1,0,1,0"))
                                    (rule "ifthenelse_true_for" (formula "23") (term "1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,1,0,1,0"))
                                    (rule "double_not" (formula "34") (term "0,0,1,0,1,0"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0,1,1,0"))
                                    (rule "nnf_notOr" (formula "42") (term "0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,1,1,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "1,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,1,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "1,0,1,0,0,1,1,0"))
                                    (rule "jdiv_axiom" (formula "55") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "47"))
                                    (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0,0"))
                                    (rule "concrete_or_1" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEqRigid" (formula "56") (term "0") (ifseqformula "1"))
                                    (rule "polyDiv_pullOut" (formula "56") (term "0") (inst "polyDivCoeff=l_1"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "56") (term "0,0"))
                                    (rule "ifthenelse_false" (formula "56") (term "0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0,0"))
                                    (rule "add_literals" (formula "56") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "56") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "56") (term "0,0,0"))
                                    (rule "div_literals" (formula "56") (term "0,0"))
                                    (rule "add_zero_left" (formula "56") (term "0"))
                                    (rule "eqClose" (formula "56"))
                                    (rule "closeTrue" (formula "56"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                 (rule "eq_or" (formula "1") (term "0"))
                                 (rule "concrete_not_2" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "allRight" (formula "43") (inst "sk=n_0"))
                                 (rule "impRight" (formula "43"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "impRight" (formula "45"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "notRight" (formula "47"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "19") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "24") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "1,0,1,0,1,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "38") (term "1,0,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "20") (term "1,0,1,0,1,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "27") (term "0,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "20") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "jmod_axiom" (formula "39") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                 (rule "mod_axiom" (formula "5") (term "1,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,2,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,2,0"))
                                 (rule "jmod_axiom" (formula "40") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0"))
                                 (rule "polySimp_homoEq" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
                                 (rule "jmod_axiom" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "mod_axiom" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "jmod_axiom" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0"))
                                 (rule "mod_axiom" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                 (rule "polySimp_sepPosMonomial" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "38") (term "0,1"))
                                 (rule "mul_literals" (formula "38") (term "0,0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "36"))
                                 (rule "leq_literals" (formula "41") (term "0"))
                                 (rule "concrete_or_1" (formula "41"))
                                 (rule "true_left" (formula "41"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (rule "concrete_or_1" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (rule "concrete_or_1" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "elimGcdGeq" (formula "17") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "17") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "1,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "0,1,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "polyDiv_pullOut" (formula "35") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "equal_literals" (formula "35") (term "0,0,0"))
                                 (rule "ifthenelse_false" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "0"))
                                 (rule "mul_literals" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "3") (term "0,1,1") (inst "polyDivCoeff=Z(1(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,2,0,1,1"))
                                 (rule "equal_literals" (formula "3") (term "0,0,1,1"))
                                 (rule "ifthenelse_false" (formula "3") (term "0,1,1"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,1,1,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "3") (term "1,1,1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "elimGcdLeq" (formula "17") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,1,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "1,0,1,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "1,1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "17") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "0,1,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "20") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                                 (rule "times_zero_1" (formula "20") (term "1,1"))
                                 (rule "add_zero_right" (formula "20") (term "1"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "23") (term "1,1,0,0,0") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "25") (term "0") (ifseqformula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "25"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "23") (term "1,1,0,0,0,1,0") (ifseqformula "20"))
                                 (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "21"))
                                 (rule "polySimp_addComm1" (formula "36") (term "1"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "15") (term "0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "17") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "18") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "17") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "18") (term "1,0,1,0,1,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "36") (term "1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "30"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "30") (term "0"))
                                 (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "17") (term "1,0,1,0,1,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "17") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "21"))
                                 (rule "applyEqRigid" (formula "17") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "21"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1"))
                                 (rule "mul_literals" (formula "30") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                 (rule "elimGcdGeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (rule "concrete_or_2" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "leq_literals" (formula "22") (term "0"))
                                 (rule "concrete_or_2" (formula "22"))
                                 (rule "elimGcdLeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "neg_literal" (formula "15") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "15") (term "0,0"))
                                 (rule "concrete_or_2" (formula "15") (term "0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0"))
                                 (rule "qeq_literals" (formula "15") (term "0"))
                                 (rule "concrete_or_2" (formula "15"))
                                 (rule "elimGcdLeq" (formula "17") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "17") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "17") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "17") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "17") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "17") (term "0,1,0,0,0,1,1,0"))
                                 (rule "newSym_eq" (formula "4") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(n_0, Z(0(#))))"))
                                 (rule "times_zero_1" (formula "4") (term "1,1,1"))
                                 (rule "add_literals" (formula "4") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "4"))
                                 (rule "polySimp_homoEq" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "applyEq" (formula "41") (term "1,0,2,0") (ifseqformula "5"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,2,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,2,0"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "2") (term "0,0"))
                                 (rule "concrete_or_2" (formula "2") (term "0"))
                                 (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "newSym_eq" (formula "38") (inst "l=l_2") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                                 (rule "times_zero_1" (formula "38") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "38") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "38") (term "1"))
                                 (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "38"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "0"))
                                 (rule "mul_literals" (formula "39") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "39"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                 (rule "mul_literals" (formula "39") (term "0,1"))
                                 (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "39"))
                                 (rule "polySimp_addComm1" (formula "3") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                                 (rule "add_literals" (formula "3") (term "0,0,1"))
                                 (rule "applyEq" (formula "3") (term "1,0,0,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0"))
                                 (rule "applyEq" (formula "40") (term "1,1,0,0,0,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "1,0,0,0,0"))
                                 (rule "add_literals" (formula "40") (term "0,1,0,0,0,0"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "39"))
                                 (rule "inEqSimp_homoInEq0" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                 (rule "add_literals" (formula "41") (term "0,0"))
                                 (rule "applyEq" (formula "7") (term "0,2,0") (ifseqformula "39"))
                                 (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "39"))
                                 (rule "inEqSimp_homoInEq1" (formula "36"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                 (rule "add_literals" (formula "36") (term "0,0"))
                                 (rule "applyEqRigid" (formula "6") (term "1,0,0,1,0,2,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,2,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,2,0"))
                                 (rule "applyEqRigid" (formula "37") (term "0,1,1") (ifseqformula "39"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                 (rule "polySimp_addComm1" (formula "37") (term "1"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                 (rule "add_literals" (formula "37") (term "0,0,1"))
                                 (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "6") (term "1,0,0,2,0") (ifseqformula "39"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,2,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,2,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,0"))
                                 (rule "concrete_or_2" (formula "36") (term "0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                 (rule "concrete_or_2" (formula "36"))
                                 (rule "elimGcdLeq_antec" (formula "41") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "41") (term "0,0"))
                                 (rule "concrete_or_2" (formula "41") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                 (rule "neg_literal" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "41") (term "0,0,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                 (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0"))
                                 (rule "qeq_literals" (formula "41") (term "0"))
                                 (rule "concrete_or_2" (formula "41"))
                                 (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "8") (term "0,0"))
                                 (rule "concrete_or_2" (formula "8") (term "0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_2" (formula "8"))
                                 (rule "elimGcdLeq_antec" (formula "37") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_2, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "37") (term "0,0"))
                                 (rule "concrete_or_2" (formula "37") (term "0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                 (rule "neg_literal" (formula "37") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                 (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                 (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "37") (term "0,0"))
                                 (rule "qeq_literals" (formula "37") (term "0"))
                                 (rule "concrete_or_2" (formula "37"))
                                 (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(neglit(8(4(6(3(8(4(7(4(1(2(#)))))))))))),
        l_2),
    mul(l_1, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_2, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                 (rule "concrete_or_2" (formula "3") (term "0"))
                                 (rule "neg_literal" (formula "3") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_2" (formula "3"))
                                 (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "31"))
                                 (rule "times_zero_1" (formula "30") (term "0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                 (rule "mul_literals" (formula "30") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "23"))
                                 (rule "mul_literals" (formula "30") (term "1,1,0"))
                                 (rule "greater_literals" (formula "30") (term "0,0"))
                                 (rule "concrete_and_1" (formula "30") (term "0"))
                                 (rule "leq_literals" (formula "30") (term "0"))
                                 (rule "concrete_or_1" (formula "30"))
                                 (rule "true_left" (formula "30"))
                                 (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                                 (rule "times_zero_1" (formula "25") (term "0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                 (rule "mul_literals" (formula "25") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (rule "concrete_or_1" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "8") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "42") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "42") (term "0"))
                                 (rule "concrete_or_1" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "nnf_imp2or" (formula "41") (term "1,0"))
                                 (rule "double_not" (formula "41") (term "0,1,0"))
                                 (rule "nnf_imp2or" (formula "21") (term "1,0"))
                                 (rule "nnf_imp2or" (formula "25") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "commute_and" (formula "25") (term "0,0"))
                                 (rule "commute_and" (formula "21") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "41") (term "0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,1,0"))
                                 (rule "double_not" (formula "20") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,1,0"))
                                 (rule "double_not" (formula "19") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "41") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "41") (term "0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "41") (term "0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
                                 (rule "jdiv_axiom" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "applyEqRigid" (formula "22") (term "1") (ifseqformula "23"))
                                 (rule "inEqSimp_subsumption6" (formula "22") (term "0,0") (ifseqformula "25"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "22") (term "0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "22") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "22") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "22") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "22") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "22") (term "0"))
                                 (rule "polySimp_homoEq" (formula "22"))
                                 (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "22") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,0"))
                                 (rule "times_zero_1" (formula "22") (term "0"))
                                 (rule "eqClose" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,1,0,1,0"))
                                 (rule "double_not" (formula "25") (term "0,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "19") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,1,1,0"))
                                 (rule "jdiv_axiom" (formula "4") (term "0"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0,2,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,2,0"))
                                 (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "4") (term "0,0") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "greater_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "4") (term "0,0,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "4") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "4") (term "0") (inst "polyDivCoeff=l_1"))
                                 (rule "equal_literals" (formula "4") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_homoEq" (formula "4"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "eqClose" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "nnf_notOr" (formula "19") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,1,1,0"))
                                 (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "35") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "14"))
                                 (rule "insert_constant_value" (formula "35") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "insert_constant_value" (formula "35") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "expand_inInt" (formula "35") (term "1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                                 (rule "replace_int_MIN" (formula "35") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "35") (term "1,0,1"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "exLeft" (formula "42") (inst "sk=i_1_2"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "exLeft" (formula "40") (inst "sk=i_2_0"))
                                 (rule "andLeft" (formula "40"))
                                 (rule "andLeft" (formula "40"))
                                 (rule "eqSymm" (formula "39"))
                                 (rule "eqSymm" (formula "38") (term "1,0,1,0,1,0"))
                                 (rule "eqSymm" (formula "38") (term "1,1,0,1,0"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,1,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,2,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,0,0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "0,2,0,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,2,0,1,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,2,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "45"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                 (rule "ifthenelse_negated" (formula "39") (term "2,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "48") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "48") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "47") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "47") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "49"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "36"))
                                 (rule "inEqSimp_commuteLeq" (formula "35"))
                                 (rule "inEqSimp_commuteLeq" (formula "44"))
                                 (rule "inEqSimp_commuteLeq" (formula "40"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "48") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "42"))
                                 (rule "applyEq" (formula "47") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "41") (term "0,1,0") (ifseqformula "42"))
                                 (rule "applyEq" (formula "43") (term "0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "33"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "applyEq" (formula "45") (term "0,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "48") (term "1,0,1,0,1,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "39") (term "0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "36") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "47") (term "1,0,1,0,1,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "37") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "33"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "applyEq" (formula "47") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "48") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "38") (term "0,0,1,0,0,1,0,0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "48") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "42"))
                                 (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "42"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                 (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "44") (term "0,1,0") (ifseqformula "22"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0"))
                                 (rule "applyEq" (formula "37") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "46") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "38") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "22"))
                                 (rule "applyEqRigid" (formula "38") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                                 (rule "jmod_axiom" (formula "42") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "42") (term "1,0"))
                                 (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "22"))
                                 (rule "polySimp_pullOutFactor0" (formula "42") (term "0"))
                                 (rule "add_literals" (formula "42") (term "1,0"))
                                 (rule "times_zero_1" (formula "42") (term "0"))
                                 (rule "eqClose" (formula "42"))
                                 (rule "true_left" (formula "42"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "43"))
                                 (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                 (rule "polySimp_rightDist" (formula "43") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                 (rule "mul_literals" (formula "43") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "43") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "24"))
                                 (rule "greater_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_and_1" (formula "35") (term "0"))
                                 (rule "mul_literals" (formula "35") (term "1,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_1" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "inEqSimp_subsumption4" (formula "35") (ifseqformula "17"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                 (rule "greater_literals" (formula "35") (term "0,0"))
                                 (rule "concrete_and_1" (formula "35") (term "0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (rule "concrete_or_1" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "elimGcdLeq" (formula "44") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,1,0,1,0,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "44") (term "1,0,1,0,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "44") (term "0,1,0,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "44") (term "1,0,0,0,1,1,0"))
                                 (rule "elimGcdLeq" (formula "44") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,1,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,1,0,1,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "44") (term "1,0,1,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "44") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "0,0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "44") (term "0,1,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "44") (term "1,1,0,0,1,1,0"))
                                 (rule "elimGcdGeq" (formula "44") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "sub_literals" (formula "44") (term "0,0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "44") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "leq_literals" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "concrete_and_3" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "44") (term "1,1,0,0,0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "44") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "44") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "qeq_literals" (formula "44") (term "0,0,1,0,0,1,1,0"))
                                 (rule "ifthenelse_true_for" (formula "44") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                                 (rule "times_zero_1" (formula "40") (term "0,0"))
                                 (rule "add_zero_left" (formula "40") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                 (rule "mul_literals" (formula "40") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "24"))
                                 (rule "leq_literals" (formula "40") (term "0"))
                                 (rule "concrete_or_1" (formula "40"))
                                 (rule "true_left" (formula "40"))
                                 (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "38"))
                                 (rule "times_zero_1" (formula "37") (term "0,0"))
                                 (rule "add_zero_left" (formula "37") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                 (rule "mul_literals" (formula "37") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "24"))
                                 (rule "greater_literals" (formula "37") (term "0,0"))
                                 (rule "concrete_and_1" (formula "37") (term "0"))
                                 (rule "mul_literals" (formula "37") (term "1,0"))
                                 (rule "leq_literals" (formula "37") (term "0"))
                                 (rule "concrete_or_1" (formula "37"))
                                 (rule "true_left" (formula "37"))
                                 (rule "commute_or" (formula "50") (term "1,0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "1,0"))
                                 (rule "nnf_notOr" (formula "19") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,1,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,1,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "19") (term "0,0"))
                                 (rule "div_axiom" (formula "6") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "6") (term "1,1,1,1,1"))
                                 (rule "equal_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_2" (formula "6"))
                                 (rule "qeq_literals" (formula "6") (term "0,1"))
                                 (rule "ifthenelse_true_for" (formula "6") (term "1"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1"))
                                 (rule "add_literals" (formula "8") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "8") (term "1"))
                                 (rule "add_literals" (formula "8") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "8"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "applyEq" (formula "9") (term "0,1,0,2,0") (ifseqformula "6"))
                                 (rule "polySimp_addComm1" (formula "9") (term "0,2,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1"))
                                 (rule "mul_literals" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1"))
                                 (rule "mul_literals" (formula "8") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                 (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "8") (term "0,0"))
                                 (rule "concrete_or_2" (formula "8") (term "0"))
                                 (rule "neg_literal" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0"))
                                 (rule "qeq_literals" (formula "8") (term "0"))
                                 (rule "concrete_or_2" (formula "8"))
                                 (rule "elimGcdGeq_antec" (formula "7") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (rule "concrete_or_2" (formula "7") (term "0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_2" (formula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "8"))
                                 (rule "mul_literals" (formula "49") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                 (rule "add_literals" (formula "49") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                 (rule "mul_literals" (formula "49") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "49") (term "0,0"))
                                 (rule "concrete_or_2" (formula "49") (term "0"))
                                 (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0"))
                                 (rule "leq_literals" (formula "49") (term "0"))
                                 (rule "concrete_or_2" (formula "49"))
                                 (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "11"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                 (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,0"))
                                 (rule "concrete_or_2" (formula "7") (term "0"))
                                 (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_2" (formula "7"))
                                 (rule "inEqSimp_antiSymm" (formula "50") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "50"))
                                 (rule "qeq_literals" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "applyEq" (formula "8") (term "0,1,1") (ifseqformula "50"))
                                 (rule "times_zero_2" (formula "8") (term "1,1"))
                                 (rule "add_zero_right" (formula "8") (term "1"))
                                 (rule "applyEqRigid" (formula "9") (term "0,1,1") (ifseqformula "50"))
                                 (rule "times_zero_2" (formula "9") (term "1,1"))
                                 (rule "add_zero_right" (formula "9") (term "1"))
                                 (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "50"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "applyEq" (formula "9") (term "0,1,0,0,2,0") (ifseqformula "49"))
                                 (rule "times_zero_2" (formula "9") (term "1,0,0,2,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,2,0"))
                                 (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "49"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "50"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "10"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (rule "concrete_or_1" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "nnf_imp2or" (formula "37") (term "1,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0"))
                                 (rule "jdiv_axiom" (formula "50") (term "0"))
                                 (rule "eqSymm" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "0,0,2,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,2,0"))
                                 (rule "mul_literals" (formula "50") (term "0,0,0,2,0"))
                                 (rule "applyEq" (formula "50") (term "1") (ifseqformula "51"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0"))
                                 (rule "inEqSimp_subsumption6" (formula "50") (term "0,0") (ifseqformula "48"))
                                 (rule "greater_literals" (formula "50") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "50") (term "0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "50") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "50") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "50") (term "0"))
                                 (rule "polyDiv_pullOut" (formula "50") (term "0") (inst "polyDivCoeff=l_2"))
                                 (rule "equal_literals" (formula "50") (term "0,0"))
                                 (rule "ifthenelse_false" (formula "50") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                 (rule "div_literals" (formula "50") (term "0,0"))
                                 (rule "eqClose" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "commute_or" (formula "52") (term "0,0,0"))
                                 (rule "nnf_imp2or" (formula "44") (term "1,0"))
                                 (rule "div_axiom" (formula "49") (term "0,0") (inst "quotient=quotient_1"))
                                 (rule "qeq_literals" (formula "49") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "49") (term "1,1"))
                                 (rule "equal_literals" (formula "49") (term "0"))
                                 (rule "concrete_or_2" (formula "49"))
                                 (rule "mul_literals" (formula "49") (term "1,1,1"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "andLeft" (formula "49"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,1"))
                                 (rule "add_literals" (formula "51") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "51") (term "1"))
                                 (rule "add_literals" (formula "51") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "50"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "51"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0"))
                                 (rule "applyEqRigid" (formula "52") (term "0,0") (ifseqformula "49"))
                                 (rule "inEqSimp_homoInEq0" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                 (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1"))
                                 (rule "mul_literals" (formula "50") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "51"))
                                 (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                 (rule "mul_literals" (formula "51") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                 (rule "mul_literals" (formula "52") (term "0,0,1"))
                                 (rule "elimGcdLeq_antec" (formula "51") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "leq_literals" (formula "51") (term "0,0"))
                                 (rule "concrete_or_2" (formula "51") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0"))
                                 (rule "neg_literal" (formula "51") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "51") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                 (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                 (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "51") (term "0,0"))
                                 (rule "qeq_literals" (formula "51") (term "0"))
                                 (rule "concrete_or_2" (formula "51"))
                                 (rule "elimGcdGeq_antec" (formula "50") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "50") (term "0,0"))
                                 (rule "concrete_or_2" (formula "50") (term "0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                 (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                 (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0"))
                                 (rule "leq_literals" (formula "50") (term "0"))
                                 (rule "concrete_or_2" (formula "50"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "51"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "52"))
                                 (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0"))
                                 (rule "polySimp_rightDist" (formula "53") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                 (rule "polySimp_elimOne" (formula "53") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "53") (term "0"))
                                 (rule "concrete_or_1" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "52"))
                                 (rule "mul_literals" (formula "26") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "add_literals" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                 (rule "mul_literals" (formula "26") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "26") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "26") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "26") (term "0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                 (rule "concrete_or_2" (formula "26"))
                                 (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0"))
                                 (rule "polySimp_rightDist" (formula "54") (term "0,0,0"))
                                 (rule "mul_literals" (formula "54") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                 (rule "add_literals" (formula "54") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                 (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                 (rule "polySimp_elimOne" (formula "54") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "19"))
                                 (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "52") (term "0"))
                                 (rule "add_literals" (formula "52") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "52") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "52") (term "0,0"))
                                 (rule "concrete_or_2" (formula "52") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "neg_literal" (formula "52") (term "0,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "52") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0"))
                                 (rule "qeq_literals" (formula "52") (term "0"))
                                 (rule "concrete_or_2" (formula "52"))
                                 (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "10"))
                                 (rule "mul_literals" (formula "50") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                 (rule "add_literals" (formula "50") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                 (rule "mul_literals" (formula "50") (term "1"))
                                 (rule "inEqSimp_subsumption6" (formula "50") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "50") (term "1,1,0"))
                                 (rule "greater_literals" (formula "50") (term "0,0"))
                                 (rule "concrete_and_1" (formula "50") (term "0"))
                                 (rule "leq_literals" (formula "50") (term "0"))
                                 (rule "concrete_or_1" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "52"))
                                 (rule "applyEq" (formula "55") (term "0,1,1") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "55") (term "1,1"))
                                 (rule "add_literals" (formula "55") (term "1"))
                                 (rule "applyEqRigid" (formula "54") (term "0,1,1") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "54") (term "1,1"))
                                 (rule "add_literals" (formula "54") (term "1"))
                                 (rule "applyEq" (formula "53") (term "0") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "10") (term "0,1,1") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "10") (term "1,1"))
                                 (rule "add_literals" (formula "10") (term "1"))
                                 (rule "applyEq" (formula "54") (term "0,1,1") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "54") (term "1,1"))
                                 (rule "add_literals" (formula "54") (term "1"))
                                 (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "26"))
                                 (rule "applyEqRigid" (formula "55") (term "0,1,0,1") (ifseqformula "26"))
                                 (rule "mul_literals" (formula "55") (term "1,0,1"))
                                 (rule "add_literals" (formula "55") (term "0,1"))
                                 (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "53") (term "0"))
                                 (rule "concrete_or_1" (formula "53"))
                                 (rule "true_left" (formula "53"))
                                 (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "52") (term "0"))
                                 (rule "concrete_or_1" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                 (rule "concrete_or_1" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "10"))
                                 (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                 (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                 (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "52") (term "0,0"))
                                 (rule "qeq_literals" (formula "52") (term "0"))
                                 (rule "concrete_or_1" (formula "52"))
                                 (rule "true_left" (formula "52"))
                                 (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "51") (term "0"))
                                 (rule "concrete_or_1" (formula "51"))
                                 (rule "true_left" (formula "51"))
                                 (rule "div_axiom" (formula "3") (term "0,0") (inst "quotient=quotient_2"))
                                 (rule "mul_literals" (formula "3") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "3") (term "0,1,1"))
                                 (rule "ifthenelse_true_for" (formula "3") (term "1,1"))
                                 (rule "equal_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_2" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1"))
                                 (rule "add_literals" (formula "5") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "5") (term "1"))
                                 (rule "add_literals" (formula "5") (term "0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1"))
                                 (rule "mul_literals" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "5") (term "0,0"))
                                 (rule "concrete_or_2" (formula "5") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_2" (formula "5"))
                                 (rule "elimGcdGeq_antec" (formula "4") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_2, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_2") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_2" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "4") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "4") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,0"))
                                 (rule "concrete_or_2" (formula "4") (term "0"))
                                 (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "4") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_2" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                 (rule "mul_literals" (formula "2") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (rule "concrete_or_1" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "6"))
                                 (rule "mul_literals" (formula "53") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                 (rule "add_literals" (formula "53") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                 (rule "mul_literals" (formula "53") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "53") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "53") (term "0,0"))
                                 (rule "concrete_or_2" (formula "53") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "53") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                 (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "53") (term "0,0"))
                                 (rule "leq_literals" (formula "53") (term "0"))
                                 (rule "concrete_or_2" (formula "53"))
                                 (rule "inEqSimp_antiSymm" (formula "53") (ifseqformula "5"))
                                 (rule "applyEq" (formula "54") (term "0") (ifseqformula "53"))
                                 (rule "qeq_literals" (formula "54"))
                                 (rule "true_left" (formula "54"))
                                 (rule "applyEq" (formula "5") (term "0") (ifseqformula "53"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "52"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "51"))
                                 (rule "mul_literals" (formula "4") (term "1,1"))
                                 (rule "add_literals" (formula "4") (term "1"))
                                 (rule "applyEq" (formula "5") (term "0,1,0,1") (ifseqformula "51"))
                                 (rule "mul_literals" (formula "5") (term "1,0,1"))
                                 (rule "add_literals" (formula "5") (term "0,1"))
                                 (rule "add_zero_left" (formula "5") (term "1"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "51"))
                                 (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (rule "concrete_or_1" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                 (rule "mul_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "shift_paren_or" (formula "28") (term "0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                 (rule "nnf_imp2or" (formula "47") (term "0"))
                                 (rule "nnf_imp2or" (formula "38") (term "0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0"))
                                 (rule "nnf_imp2or" (formula "46") (term "0"))
                                 (rule "commute_or" (formula "23") (term "0,0"))
                                 (rule "commute_or_2" (formula "55") (term "0"))
                                 (rule "commute_and" (formula "21") (term "1,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "47") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "47") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0"))
                                 (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "47") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "47") (term "1,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "46") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0"))
                                 (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,1,0"))
                                 (rule "double_not" (formula "46") (term "0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "46") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "47") (term "0,1,0"))
                                 (rule "double_not" (formula "47") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "47") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,1,0"))
                                 (rule "add_literals" (formula "47") (term "0,0,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "47") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "47") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,1,0,1,0"))
                                 (rule "double_not" (formula "39") (term "0,0,1,0,1,0"))
                                 (rule "nnf_notAnd" (formula "46") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "46") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "46") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "46") (term "0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "46") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0,0,1,1,0"))
                                 (rule "nnf_notOr" (formula "47") (term "0,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                 (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "3"))
                                 (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "62"))
                                 (rule "concrete_or_2" (formula "2"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "3"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "11"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "62"))
                                 (rule "concrete_or_2" (formula "10"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "11"))
                                 (rule "nnf_notAnd" (formula "48") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "48") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "48") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "48") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "48") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "48") (term "0,1,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "48") (term "1,0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "1,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "48") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "48") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "56") (term "0,0"))
                                 (rule "commute_or_2" (formula "39") (term "0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,1,0"))
                                 (rule "inEqSimp_or_weaken2" (formula "29") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,0,1,0,1,0"))
                                 (rule "add_literals" (formula "29") (term "0,1,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "29") (term "1,0,1,0,1,0"))
                                 (rule "eqClose" (formula "29") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true_for" (formula "29") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                 (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "39") (term "0,0"))
                                 (rule "commute_or" (formula "55") (term "0,0,0"))
                                 (rule "commute_or" (formula "47") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "29") (term "0,0,1,0"))
                                 (rule "shift_paren_or" (formula "39") (term "0,1,0"))
                                 (rule "commute_or_2" (formula "39") (term "0,0,1,0"))
                                 (rule "inEqSimp_or_weaken2" (formula "39") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "1,0,1,0,1,0"))
                                 (rule "add_literals" (formula "39") (term "0,1,0,1,0,1,0"))
                                 (rule "add_zero_left" (formula "39") (term "1,0,1,0,1,0"))
                                 (rule "eqClose" (formula "39") (term "0,1,0,1,0"))
                                 (rule "ifthenelse_true_for" (formula "39") (term "1,0,1,0"))
                                 (rule "commute_or" (formula "39") (term "0,0,1,0"))
                                 (rule "commute_or" (formula "45") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "45") (term "0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "45") (term "0,1,1,0"))
                                 (rule "commute_or_2" (formula "45") (term "1,0,1,1,0"))
                                 (rule "shift_paren_or" (formula "45") (term "0,0,1,1,0"))
                                 (rule "commute_or" (formula "45") (term "0,1,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "45"))
                                 (rule "concrete_or_1" (formula "44"))
                                 (rule "true_left" (formula "44"))
                                 (rule "cnf_rightDist" (formula "22") (term "1,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "1,1,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "all_pull_out3" (formula "23") (term "1,0"))
                                 (rule "shift_paren_or" (formula "23") (term "0,1,0"))
                                 (rule "shift_paren_or" (formula "23") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "eq_or" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "all_pull_out3" (formula "29") (term "0"))
                                 (rule "shift_paren_or" (formula "29") (term "0,0"))
                                 (rule "shift_paren_or" (formula "29") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "29") (term "0,0,0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0,0,0,0"))
                                 (rule "all_pull_out3" (formula "45") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "45") (term "0,1,0"))
                                 (rule "commute_or_2" (formula "45") (term "1,0,1,0"))
                                 (rule "shift_paren_or" (formula "45") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,1,0,1,0"))
                                 (rule "shift_paren_or" (formula "45") (term "0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "45") (term "0,0,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "45") (term "0,0,1,0,1,0"))
                                 (rule "commute_or" (formula "45") (term "0,0,0,1,0,1,0"))
                                 (rule "allLeft" (formula "24") (inst "t=i_1_0"))
                                 (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "concrete_not_1" (formula "24") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "32"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                 (rule "concrete_and_2" (formula "24") (term "1"))
                                 (rule "concrete_or_4" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "24") (term "0,1"))
                                 (rule "concrete_and_2" (formula "24") (term "1"))
                                 (rule "concrete_or_4" (formula "24"))
                                 (rule "all_pull_out3" (formula "23") (term "0"))
                                 (rule "shift_paren_or" (formula "23") (term "0,0"))
                                 (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "23") (term "0,0,0,0,0"))
                                 (rule "commute_or" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "allLeft" (formula "25") (inst "t=i_1_2"))
                                 (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "46"))
                                 (rule "concrete_not_1" (formula "25") (term "0,0,0"))
                                 (rule "concrete_or_2" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "45"))
                                 (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "25") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                 (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                 (rule "leq_literals" (formula "25") (term "0,1"))
                                 (rule "concrete_and_2" (formula "25") (term "1"))
                                 (rule "concrete_or_4" (formula "25"))
                                 (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "44"))
                                 (rule "qeq_literals" (formula "25") (term "0,1"))
                                 (rule "concrete_and_2" (formula "25") (term "1"))
                                 (rule "concrete_or_4" (formula "25"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "all_pull_out3" (formula "47") (term "0"))
                                 (rule "cnf_rightDist" (formula "47") (term "0,0"))
                                 (rule "distr_forallAnd" (formula "47") (term "0"))
                                 (rule "distr_forallAnd" (formula "47"))
                                 (rule "andLeft" (formula "47"))
                                 (rule "commute_or_2" (formula "48") (term "0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,0"))
                                 (rule "commute_or_2" (formula "48") (term "0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                 (rule "commute_or_2" (formula "48") (term "0,0,0,0"))
                                 (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                 (rule "commute_or_2" (formula "47") (term "0,0,0,0,0"))
                                 (rule "shift_paren_or" (formula "48") (term "0,0,0,0,0"))
                                 (rule "commute_or" (formula "47") (term "0,0,0,0,0,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "10"))
                                 (rule "concrete_or_1" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "cnf_rightDist" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,1,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,1,1,0"))
                                 (rule "eq_or" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,1,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,1,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,1,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,1,0,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "1,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "0,1,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,1,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "0,1,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0,1,1,0"))
                                 (rule "eq_and_2" (formula "22") (term "0,0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,0,1,1,0"))
                                 (rule "eq_or_2" (formula "22") (term "1,0,0,0,0,0,1,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,0,0,1,0,1,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,0,1,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,1,0,0,0,0,0,1,0,1,1,0"))
                                 (rule "eq_and_2" (formula "22") (term "0,0,0,0,1,0,1,1,0"))
                                 (rule "eq_and" (formula "22") (term "0,0,0,0,1,0,1,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,1,1,0"))
                                 (rule "shift_paren_and" (formula "22") (term "0,0,0,0,1,1,0"))
                                 (rule "all_pull_out3" (formula "22") (term "1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,1,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,0,1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,1,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,0,1,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,1,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,0,0,0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,0,1,0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,1,0,0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,1,0,0,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,0,0,0,1,0"))
                                 (rule "allLeft" (formula "26") (inst "t=l_1"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "26") (term "1,0"))
                                 (rule "concrete_or_4" (formula "26") (term "0"))
                                 (rule "allLeft" (formula "27") (inst "t=l_2"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "54"))
                                 (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                 (rule "concrete_and_2" (formula "27") (term "1,0"))
                                 (rule "concrete_or_4" (formula "27") (term "0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,1,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,0,1,0,0,0,0,0,0,0,1,0"))
                                 (rule "cnf_rightDist" (formula "22") (term "0,0,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "1,0,0,0,0,0,0,0,0,1,0"))
                                 (rule "commute_or" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1,0"))
                                 (rule "commute_or_2" (formula "22") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
                                 (rule "shift_paren_or" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "15"))
                                 (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
                                 (rule "concrete_or_1" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "allLeft" (formula "58") (inst "t=add(Z(neglit(2(#))), mul(l_2, Z(2(#))))"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "1,0,1"))
                                 (rule "add_literals" (formula "58") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,2,0,1,0,0,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,2,0,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "58") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "58") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "58") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "58") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "58") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "58") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,1,0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "58") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "58") (term "0,1,0"))
                                 (rule "leq_literals" (formula "58") (term "1,0"))
                                 (rule "concrete_or_4" (formula "58") (term "0"))
                                 (rule "applyEq" (formula "58") (term "0,0,0,0,0") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "58") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "64"))
                                 (rule "concrete_not_2" (formula "58") (term "0,0,0"))
                                 (rule "concrete_or_1" (formula "58") (term "0,0"))
                                 (rule "concrete_or_1" (formula "58") (term "0"))
                                 (rule "concrete_or_1" (formula "58"))
                                 (rule "true_left" (formula "58"))
                                 (rule "allLeft" (formula "58") (inst "t=l_2"))
                                 (rule "inEqSimp_homoInEq1" (formula "58") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,1,0"))
                                 (rule "add_literals" (formula "58") (term "1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "58") (term "1,0"))
                                 (rule "mul_literals" (formula "58") (term "1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "58") (term "1,0,0") (ifseqformula "54"))
                                 (rule "qeq_literals" (formula "58") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "58") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "58") (term "0,0"))
                                 (rule "allLeft" (formula "59") (inst "t=l_0"))
                                 (rule "inEqSimp_contradInEq1" (formula "59") (term "1,0,0") (ifseqformula "32"))
                                 (rule "qeq_literals" (formula "59") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "59") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "59") (term "0,0"))
                                 (rule "allLeft" (formula "60") (inst "t=l_1"))
                                 (rule "inEqSimp_contradInEq1" (formula "60") (term "1,0,0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "60") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "60") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "60") (term "0,0"))
                                 (rule "allLeft" (formula "61") (inst "t=add(Z(neglit(1(#))), mul(l_1, Z(2(#))))"))
                                 (rule "replace_known_left" (formula "61") (term "0,0,0,0,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "61") (term "0,0,0,0"))
                                 (rule "concrete_or_2" (formula "61") (term "0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "1,0,1"))
                                 (rule "add_literals" (formula "61") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,2,0,0,0,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,2,0,0,0,0"))
                                 (rule "replace_known_right" (formula "61") (term "0,0,0") (ifseqformula "63"))
                                 (rule "concrete_or_2" (formula "61") (term "0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "61") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "61") (term "0,0,1,0"))
                                 (rule "applyEqRigid" (formula "61") (term "0,0,0,1") (ifseqformula "6"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "0,0,1"))
                                 (rule "polySimp_rightDist" (formula "61") (term "0,0,1"))
                                 (rule "mul_literals" (formula "61") (term "0,0,0,1"))
                                 (rule "eqClose" (formula "61") (term "0,1"))
                                 (rule "concrete_not_1" (formula "61") (term "1"))
                                 (rule "concrete_or_4" (formula "61"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "0"))
                                 (rule "mul_literals" (formula "61") (term "1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "0,1"))
                                 (rule "inEqSimp_contradInEq5" (formula "61") (term "0") (ifseqformula "3"))
                                 (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "greater_literals" (formula "61") (term "0,0,0"))
                                 (rule "concrete_impl_1" (formula "61") (term "0,0"))
                                 (rule "qeq_literals" (formula "61") (term "0,0"))
                                 (rule "concrete_and_2" (formula "61") (term "0"))
                                 (rule "concrete_or_2" (formula "61"))
                                 (rule "elimGcdGeq_antec" (formula "61") (inst "elimGcdRightDiv=l_2") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                                 (rule "mul_literals" (formula "61") (term "0,1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "61") (term "0,0"))
                                 (rule "concrete_or_2" (formula "61") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0"))
                                 (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "61") (term "0,0"))
                                 (rule "add_literals" (formula "61") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "61") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "61") (term "0,0"))
                                 (rule "leq_literals" (formula "61") (term "0"))
                                 (rule "concrete_or_2" (formula "61"))
                                 (rule "inEqSimp_antiSymm" (formula "61") (ifseqformula "5"))
                                 (rule "applyEq" (formula "60") (term "0,1,0") (ifseqformula "61"))
                                 (rule "inEqSimp_homoInEq1" (formula "60") (term "1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,1,0"))
                                 (rule "add_literals" (formula "60") (term "1,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "60") (term "1,0,1,0"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "61"))
                                 (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "60"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "60"))
                                 (rule "inEqSimp_homoInEq0" (formula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "1,0"))
                                 (rule "times_zero_1" (formula "4") (term "0"))
                                 (rule "qeq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "58") (term "0,2,0,0,0,0,0") (ifseqformula "59"))
                                 (rule "applyEqRigid" (formula "58") (term "1,0,2,0,1,0,0") (ifseqformula "59"))
                                 (rule "applyEqRigid" (formula "24") (term "0,1,0,2,0,1,0") (ifseqformula "59"))
                                 (rule "applyEq" (formula "58") (term "0,0,0,0,1") (ifseqformula "59"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "59"))
                                 (rule "applyEqRigid" (formula "2") (term "0,1,0,2,0") (ifseqformula "59"))
                                 (rule "applyEqRigid" (formula "59") (term "0") (ifseqformula "58"))
                                 (rule "inEqSimp_homoInEq1" (formula "59"))
                                 (rule "polySimp_pullOutFactor1" (formula "59") (term "0"))
                                 (rule "add_literals" (formula "59") (term "1,0"))
                                 (rule "times_zero_1" (formula "59") (term "0"))
                                 (rule "leq_literals" (formula "59"))
                                 (rule "true_left" (formula "59"))
                                 (rule "applyEq" (formula "23") (term "0,0,2,0,0,0,0") (ifseqformula "58"))
                                 (rule "applyEqRigid" (formula "59") (term "0,1,0,2,0") (ifseqformula "57"))
                                 (rule "close" (formula "59") (ifseqformula "6"))
                              )
                           )
                           (branch "Case 2"
                              (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                              (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                              (rule "concrete_or_2" (formula "1") (term "0"))
                              (rule "concrete_not_2" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "eqClose" (formula "43") (term "0,0"))
                              (rule "allRight" (formula "43") (inst "sk=f_0"))
                              (rule "allRight" (formula "43") (inst "sk=o_0"))
                              (rule "closeTrue" (formula "43"))
                           )
                        )
                        (branch "Case 2"
                           (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                           (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                           (rule "eq_or" (formula "1") (term "0"))
                           (rule "concrete_not_2" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "43") (term "0,0,0,1,0"))
                           (rule "precOfInt" (formula "43"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "1"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "43") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,1"))
                           (rule "add_literals" (formula "43") (term "0,0,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "43") (term "0"))
                           (rule "times_zero_2" (formula "43") (term "1,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0"))
                           (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "16") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1") (ifseqformula "29"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                           (rule "applyEq" (formula "34") (term "1,0,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "43") (term "1,0,1,0,0,1,0,1") (ifseqformula "29"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                           (rule "mod_axiom" (formula "1") (term "1,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,2,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,2,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,2,0"))
                           (rule "jmod_axiom" (formula "36") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                           (rule "polySimp_homoEq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0"))
                           (rule "jmod_axiom" (formula "35") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                           (rule "polySimp_homoEq" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0"))
                           (rule "mod_axiom" (formula "43") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "43") (term "0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,0"))
                           (rule "jmod_axiom" (formula "18") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                           (rule "mod_axiom" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "43") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0,0"))
                           (rule "mod_axiom" (formula "43") (term "0,1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "0,0,1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,1"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,1,0,1"))
                           (rule "mod_axiom" (formula "43") (term "1,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,1,0,0,1"))
                           (rule "mod_axiom" (formula "43") (term "1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0,1,0,1"))
                           (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0,1"))
                           (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "35"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1"))
                           (rule "polySimp_rightDist" (formula "35") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                           (rule "mul_literals" (formula "35") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                           (rule "polySimp_sepNegMonomial" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                           (rule "mul_literals" (formula "34") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0"))
                           (rule "mul_literals" (formula "43") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                           (rule "mul_literals" (formula "43") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "43") (term "1,1,1"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (rule "concrete_or_1" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "32"))
                           (rule "leq_literals" (formula "37") (term "0"))
                           (rule "concrete_or_1" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                           (rule "leq_literals" (formula "12") (term "0"))
                           (rule "concrete_or_1" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "11"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (rule "concrete_or_1" (formula "18"))
                           (rule "true_left" (formula "18"))
                           (rule "elimGcdGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "concrete_and_1" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "elimGcdGeq" (formula "13") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "1,0,1,1,0,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "polyDiv_pullOut" (formula "39") (term "0,1,0,0,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "39") (term "0,0,1,0,0,1"))
                           (rule "ifthenelse_false" (formula "39") (term "0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,0,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1"))
                           (rule "polyMod_pullOut" (formula "39") (term "0,0") (inst "polyDivCoeff=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0"))
                           (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0,0"))
                           (rule "equal_literals" (formula "31") (term "0,0,0"))
                           (rule "ifthenelse_false" (formula "31") (term "0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "0"))
                           (rule "mul_literals" (formula "31") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "elimGcdLeq" (formula "13") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,1,1,0"))
                           (rule "polyDiv_pullOut" (formula "39") (term "0,1,0,1,1,1") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "equal_literals" (formula "39") (term "0,0,1,0,1,1,1"))
                           (rule "ifthenelse_false" (formula "39") (term "0,1,0,1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,1,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,1,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,1,1,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,1,0,1,1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,1,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,1,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1,1,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,1"))
                           (rule "polyMod_pullOut" (formula "39") (term "1,1,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,1,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,1,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,1,1,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,1,1,1"))
                           (rule "add_zero_right" (formula "39") (term "0,1,1,1"))
                           (rule "mod_axiom" (formula "39") (term "1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,1"))
                           (rule "polyDiv_pullOut" (formula "39") (term "0,1,0,0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,2,0,1,0,0,0,0"))
                           (rule "equal_literals" (formula "39") (term "0,0,1,0,0,0,0"))
                           (rule "ifthenelse_false" (formula "39") (term "0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,1,1,1,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,1,1,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,0"))
                           (rule "polyMod_pullOut" (formula "39") (term "0,1") (inst "polyDivCoeff=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(neglit(1(#))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1"))
                           (rule "polyMod_pullOut" (formula "39") (term "0,1") (inst "polyDivCoeff=div(add(Z(0(5(6(3(8(4(7(4(1(2(#))))))))))), i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,1"))
                           (rule "mod_axiom" (formula "39") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "39") (term "1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "39") (term "0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                           (rule "polyMod_pullOut" (formula "39") (term "0,0") (inst "polyDivCoeff=div(add(Z(neglit(6(4(6(3(8(4(7(4(1(2(#)))))))))))),
        i_0),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                           (rule "mod_axiom" (formula "39") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "39") (term "0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,1,0"))
                           (rule "mul_literals" (formula "39") (term "0,0,1,0"))
                           (rule "polyDiv_pullOut" (formula "39") (term "0,0,0") (inst "polyDivCoeff=Z(1(#))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,2,0,0,0"))
                           (rule "equal_literals" (formula "39") (term "0,0,0,0"))
                           (rule "ifthenelse_false" (formula "39") (term "0,0,0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,1,1,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,1,1,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                           (rule "mul_literals" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "39") (term "0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                           (rule "elimGcdGeq" (formula "39") (term "1") (inst "elimGcdRightDiv=add(Z(0(#)),
    div(add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
                mul(i_0, Z(neglit(1(#))))),
            pow(Z(2(#)), i_1_1)),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))))") (inst "elimGcdLeftDiv=div(add(add(Z(neglit(9(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(i_0, Z(neglit(1(#))))),
        pow(Z(2(#)), i_1_1)),
    Z(6(9(2(7(6(9(4(9(2(4(#))))))))))))") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1"))
                           (rule "add_zero_left" (formula "39") (term "1,1,0,0,0,0,0,0,1"))
                           (rule "add_zero_left" (formula "39") (term "1,1,1"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1"))
                           (rule "add_zero_left" (formula "39") (term "1,0,0,0,0,1,0,1"))
                           (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,1,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,1,0,1"))
                           (rule "leq_literals" (formula "39") (term "1,0,1"))
                           (rule "concrete_and_3" (formula "39") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1"))
                           (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                           (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,1"))
                           (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "39") (term "0,0,1"))
                           (rule "qeq_literals" (formula "39") (term "0,1"))
                           (rule "ifthenelse_true_for" (formula "39") (term "1"))
                           (rule "newSym_eq" (formula "16") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                           (rule "times_zero_1" (formula "16") (term "1,1"))
                           (rule "add_zero_right" (formula "16") (term "1"))
                           (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "16"))
                           (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "16"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "16"))
                           (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0") (ifseqformula "16"))
                           (rule "applyEqRigid" (formula "17") (term "0,0") (ifseqformula "16"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0") (ifseqformula "16"))
                           (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0,1,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "15") (term "1,1,0,0,0") (ifseqformula "16"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "26"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "applyEqRigid" (formula "32") (term "1,0,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq0" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "applyEqRigid" (formula "40") (term "1,0,1,1") (ifseqformula "17"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,1,1"))
                           (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "40") (term "1,0,0,1") (ifseqformula "17"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "13") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "14") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "40") (term "1,0,0,0,0") (ifseqformula "17"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "40") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                           (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "17"))
                           (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "17"))
                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "17"))
                           (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "17"))
                           (rule "polySimp_addComm1" (formula "32") (term "0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "applyEq" (formula "40") (term "1,0,0") (ifseqformula "17"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
                           (rule "newSym_eq" (formula "33") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                           (rule "times_zero_1" (formula "33") (term "1,1,1"))
                           (rule "add_literals" (formula "33") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "33") (term "1"))
                           (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0"))
                           (rule "polySimp_rightDist" (formula "34") (term "0"))
                           (rule "mul_literals" (formula "34") (term "0,0"))
                           (rule "polySimp_homoEq" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "34") (term "0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "34"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                           (rule "mul_literals" (formula "34") (term "0,1"))
                           (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                           (rule "mul_literals" (formula "32") (term "0,1,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "1"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                           (rule "add_literals" (formula "32") (term "0,0,1"))
                           (rule "applyEqRigid" (formula "41") (term "0,1,0,1,1") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,1"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "applyEq" (formula "41") (term "0,1,0,0,0,0") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                           (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "1,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,1,0"))
                           (rule "add_literals" (formula "41") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "41") (term "0,1,0"))
                           (rule "applyEq" (formula "1") (term "1,0,0,1,0,2,0") (ifseqformula "34"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,2,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,2,0"))
                           (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq0" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0"))
                           (rule "add_literals" (formula "36") (term "0,0"))
                           (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq1" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "0,0"))
                           (rule "applyEq" (formula "35") (term "1,1,0,0,0,0") (ifseqformula "34"))
                           (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,1,0,0,0,0"))
                           (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "34"))
                           (rule "inEqSimp_homoInEq0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "add_zero_left" (formula "3") (term "0,0"))
                           (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "34"))
                           (rule "applyEqRigid" (formula "33") (term "0,0") (ifseqformula "34"))
                           (rule "applyEqRigid" (formula "1") (term "1,0,0,2,0") (ifseqformula "34"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,2,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,2,0"))
                           (rule "applyEq" (formula "41") (term "0,1,0,1,1") (ifseqformula "34"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,1,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,1,1"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,1,1"))
                           (rule "inEqSimp_commuteLeq" (formula "41") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "31") (term "0,0"))
                           (rule "concrete_or_2" (formula "31") (term "0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0"))
                           (rule "leq_literals" (formula "31") (term "0"))
                           (rule "concrete_or_2" (formula "31"))
                           (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "36") (term "0,0"))
                           (rule "concrete_or_2" (formula "36") (term "0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "qeq_literals" (formula "36") (term "0"))
                           (rule "concrete_or_2" (formula "36"))
                           (rule "elimGcdLeq_antec" (formula "32") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "32") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "32") (term "0,0"))
                           (rule "concrete_or_2" (formula "32") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0"))
                           (rule "qeq_literals" (formula "32") (term "0"))
                           (rule "concrete_or_2" (formula "32"))
                           (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "11") (term "0,0"))
                           (rule "concrete_or_2" (formula "11") (term "0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0,0"))
                           (rule "add_zero_right" (formula "11") (term "0,0"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_2" (formula "11"))
                           (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "concrete_or_2" (formula "18") (term "0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0"))
                           (rule "leq_literals" (formula "18") (term "0"))
                           (rule "concrete_or_2" (formula "18"))
                           (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "41") (term "0") (inst "elimGcdRightDiv=add(mul(l_1, Z(neglit(1(#)))), l_0)") (inst "elimGcdLeftDiv=mul(div(add(add(Z(8(4(6(3(8(4(7(4(1(2(#))))))))))),
                mul(l_1, Z(neglit(2(#))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "sub_literals" (formula "41") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "41") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "41") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "1,0,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "41") (term "0,1,0,0"))
                           (rule "add_literals" (formula "41") (term "1,0,1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "41") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "41") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0,0"))
                           (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,0"))
                           (rule "leq_literals" (formula "41") (term "0,0"))
                           (rule "ifthenelse_true_for" (formula "41") (term "0"))
                           (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,1,1,0"))
                           (rule "polyDiv_pullOut" (formula "41") (term "0,1") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                           (rule "equal_literals" (formula "41") (term "0,0,1"))
                           (rule "ifthenelse_false" (formula "41") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "41") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0,1"))
                           (rule "add_literals" (formula "41") (term "0,0,0,0,0,1"))
                           (rule "polySimp_addComm0" (formula "41") (term "0,1"))
                           (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "26"))
                           (rule "mul_literals" (formula "25") (term "0,0"))
                           (rule "add_zero_left" (formula "25") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "mul_literals" (formula "25") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "25") (ifseqformula "18"))
                           (rule "mul_literals" (formula "25") (term "1,1,0"))
                           (rule "greater_literals" (formula "25") (term "0,0"))
                           (rule "concrete_and_1" (formula "25") (term "0"))
                           (rule "leq_literals" (formula "25") (term "0"))
                           (rule "concrete_or_1" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                           (rule "times_zero_1" (formula "20") (term "0,0"))
                           (rule "add_zero_left" (formula "20") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                           (rule "leq_literals" (formula "20") (term "0"))
                           (rule "concrete_or_1" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "3"))
                           (rule "leq_literals" (formula "37") (term "0"))
                           (rule "concrete_or_1" (formula "37"))
                           (rule "true_left" (formula "37"))
                           (rule "nnf_imp2or" (formula "16") (term "1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "1,0"))
                           (rule "double_not" (formula "36") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "20") (term "1,0,1,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "commute_and" (formula "14") (term "0,0"))
                           (rule "commute_and" (formula "20") (term "0,0"))
                           (rule "commute_and" (formula "16") (term "0,0"))
                           (rule "nnf_imp2or" (formula "14") (term "1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                           (rule "double_not" (formula "14") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
                           (rule "double_not" (formula "15") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,1,0,0,0"))
                           (rule "jdiv_axiom" (formula "17") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                           (rule "eqSymm" (formula "17"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "20"))
                           (rule "greater_literals" (formula "17") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "leq_literals" (formula "17") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "17") (term "0,0"))
                           (rule "ifthenelse_true" (formula "17") (term "0"))
                           (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "17") (term "0,0"))
                           (rule "ifthenelse_false" (formula "17") (term "0"))
                           (rule "polySimp_homoEq" (formula "17"))
                           (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "17") (term "1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "17") (term "0,0,0,1,0"))
                           (rule "div_literals" (formula "17") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "17") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                           (rule "add_literals" (formula "17") (term "1,0"))
                           (rule "times_zero_1" (formula "17") (term "0"))
                           (rule "eqClose" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "20") (term "0,1,0,1,0"))
                           (rule "double_not" (formula "20") (term "0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,1,0"))
                           (rule "div_axiom" (formula "1") (term "0,1,0,2,0") (inst "quotient=quotient_0"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "add_literals" (formula "3") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1,0,2,0") (ifseqformula "1"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,2,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "4"))
                           (rule "mul_literals" (formula "36") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0"))
                           (rule "add_literals" (formula "36") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                           (rule "mul_literals" (formula "36") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "36") (term "0,0"))
                           (rule "concrete_or_2" (formula "36") (term "0"))
                           (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "leq_literals" (formula "36") (term "0"))
                           (rule "concrete_or_2" (formula "36"))
                           (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "2"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "36"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                           (rule "qeq_literals" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "35"))
                           (rule "times_zero_2" (formula "3") (term "1,1"))
                           (rule "add_literals" (formula "3") (term "1"))
                           (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "35"))
                           (rule "times_zero_2" (formula "2") (term "1,1"))
                           (rule "add_literals" (formula "2") (term "1"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "35"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,0,2,0") (ifseqformula "35"))
                           (rule "times_zero_2" (formula "4") (term "1,0,0,2,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,2,0"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "6"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "35"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_1" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "jdiv_axiom" (formula "36") (term "0"))
                           (rule "eqSymm" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,2,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "0,0,2,0"))
                           (rule "mul_literals" (formula "36") (term "0,0,0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                           (rule "applyEqRigid" (formula "36") (term "1") (ifseqformula "37"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0"))
                           (rule "inEqSimp_subsumption6" (formula "36") (term "0,0") (ifseqformula "34"))
                           (rule "mul_literals" (formula "36") (term "1,1,0,0,0"))
                           (rule "greater_literals" (formula "36") (term "0,0,0,0"))
                           (rule "concrete_and_1" (formula "36") (term "0,0,0"))
                           (rule "leq_literals" (formula "36") (term "0,0,0"))
                           (rule "concrete_or_1" (formula "36") (term "0,0"))
                           (rule "ifthenelse_true" (formula "36") (term "0"))
                           (rule "polyDiv_pullOut" (formula "36") (term "0") (inst "polyDivCoeff=l_1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,2,0"))
                           (rule "equal_literals" (formula "36") (term "0,0"))
                           (rule "ifthenelse_false" (formula "36") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0,0"))
                           (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0"))
                           (rule "div_literals" (formula "36") (term "0,0"))
                           (rule "eqClose" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "15") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,1,1,0"))
                           (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "31") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "10"))
                           (rule "insert_constant_value" (formula "31") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "insert_constant_value" (formula "31") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "expand_inInt" (formula "31") (term "1"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replace_int_MIN" (formula "31") (term "0,1,1"))
                           (rule "replace_int_MAX" (formula "31") (term "1,0,1"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "32"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "exLeft" (formula "38") (inst "sk=i_1_2"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "38"))
                           (rule "exLeft" (formula "36") (inst "sk=i_2_0"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "36"))
                           (rule "eqSymm" (formula "35"))
                           (rule "eqSymm" (formula "34") (term "1,0,1,0,1,0"))
                           (rule "eqSymm" (formula "34") (term "1,1,0,1,0"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,2,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,0,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "0,2,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "0,2,0,0,0,2,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,1,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "0,2,1,1,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "41") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "37"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0"))
                           (rule "ifthenelse_negated" (formula "35") (term "2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "44") (term "0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "45"))
                           (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_commuteGeq" (formula "32"))
                           (rule "inEqSimp_commuteLeq" (formula "31"))
                           (rule "inEqSimp_commuteLeq" (formula "40"))
                           (rule "inEqSimp_commuteLeq" (formula "36"))
                           (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,1,0"))
                           (rule "applyEq" (formula "31") (term "0") (ifseqformula "38"))
                           (rule "applyEq" (formula "39") (term "0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "32") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "41") (term "0,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "43") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "29") (term "0") (ifseqformula "38"))
                           (rule "applyEq" (formula "37") (term "0,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                           (rule "applyEq" (formula "44") (term "0,0,1,0,0,1,0,0") (ifseqformula "38"))
                           (rule "applyEqRigid" (formula "39") (term "0,0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "41") (term "0,1,0") (ifseqformula "18"))
                           (rule "polySimp_addComm1" (formula "41") (term "0"))
                           (rule "applyEqRigid" (formula "44") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "38") (term "1") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "29"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0"))
                           (rule "applyEqRigid" (formula "35") (term "0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "44") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "44") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "applyEqRigid" (formula "35") (term "1,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "34") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                           (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "29"))
                           (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "43") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "18"))
                           (rule "applyEqRigid" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "18"))
                           (rule "jmod_axiom" (formula "38") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0"))
                           (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "18"))
                           (rule "polySimp_pullOutFactor0" (formula "38") (term "0"))
                           (rule "add_literals" (formula "38") (term "1,0"))
                           (rule "times_zero_1" (formula "38") (term "0"))
                           (rule "eqClose" (formula "38"))
                           (rule "true_left" (formula "38"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "41") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1"))
                           (rule "polySimp_rightDist" (formula "39") (term "1"))
                           (rule "mul_literals" (formula "39") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1"))
                           (rule "mul_literals" (formula "36") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                           (rule "inEqSimp_subsumption4" (formula "32") (ifseqformula "13"))
                           (rule "greater_literals" (formula "32") (term "0,0"))
                           (rule "concrete_and_1" (formula "32") (term "0"))
                           (rule "mul_literals" (formula "32") (term "0,0"))
                           (rule "leq_literals" (formula "32") (term "0"))
                           (rule "concrete_or_1" (formula "32"))
                           (rule "true_left" (formula "32"))
                           (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "20"))
                           (rule "greater_literals" (formula "31") (term "0,0"))
                           (rule "concrete_and_1" (formula "31") (term "0"))
                           (rule "mul_literals" (formula "31") (term "1,0"))
                           (rule "leq_literals" (formula "31") (term "0"))
                           (rule "concrete_or_1" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "elimGcdLeq" (formula "40") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,1,0,1,0,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "40") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "40") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "leq_literals" (formula "40") (term "0,1,0,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "40") (term "1,0,0,0,1,1,0"))
                           (rule "elimGcdLeq" (formula "40") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,1,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,1,0,1,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "40") (term "1,0,1,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "40") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "40") (term "1,1,0,0,1,1,0"))
                           (rule "elimGcdGeq" (formula "40") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "sub_literals" (formula "40") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,0,1,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "leq_literals" (formula "40") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "concrete_and_3" (formula "40") (term "0,0,1,0,0,1,1,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0,0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "qeq_literals" (formula "40") (term "0,0,1,0,0,1,1,0"))
                           (rule "ifthenelse_true_for" (formula "40") (term "0,1,0,0,1,1,0"))
                           (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                           (rule "times_zero_1" (formula "36") (term "0,0"))
                           (rule "add_zero_left" (formula "36") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                           (rule "mul_literals" (formula "36") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "20"))
                           (rule "leq_literals" (formula "36") (term "0"))
                           (rule "concrete_or_1" (formula "36"))
                           (rule "true_left" (formula "36"))
                           (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "34"))
                           (rule "times_zero_1" (formula "33") (term "0,0"))
                           (rule "add_zero_left" (formula "33") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                           (rule "mul_literals" (formula "33") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "33") (ifseqformula "20"))
                           (rule "mul_literals" (formula "33") (term "1,1,0"))
                           (rule "greater_literals" (formula "33") (term "0,0"))
                           (rule "concrete_and_1" (formula "33") (term "0"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (rule "concrete_or_1" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "commute_or" (formula "47") (term "1,0"))
                           (rule "div_axiom" (formula "44") (term "0,0") (inst "quotient=quotient_1"))
                           (rule "mul_literals" (formula "44") (term "1,1,1,1,1"))
                           (rule "qeq_literals" (formula "44") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "44") (term "1,1"))
                           (rule "equal_literals" (formula "44") (term "0"))
                           (rule "concrete_or_2" (formula "44"))
                           (rule "andLeft" (formula "44"))
                           (rule "andLeft" (formula "44"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                           (rule "add_literals" (formula "46") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "46") (term "1"))
                           (rule "add_literals" (formula "46") (term "0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "45"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "46"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0"))
                           (rule "applyEqRigid" (formula "47") (term "0,0") (ifseqformula "44"))
                           (rule "inEqSimp_homoInEq0" (formula "47"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1"))
                           (rule "polySimp_rightDist" (formula "45") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                           (rule "mul_literals" (formula "45") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1"))
                           (rule "polySimp_rightDist" (formula "46") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                           (rule "mul_literals" (formula "46") (term "0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1"))
                           (rule "polySimp_rightDist" (formula "47") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "47") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1"))
                           (rule "mul_literals" (formula "47") (term "0,0,1"))
                           (rule "elimGcdLeq_antec" (formula "46") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "46") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "46") (term "0,0"))
                           (rule "concrete_or_2" (formula "46") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "add_literals" (formula "46") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "0,0"))
                           (rule "qeq_literals" (formula "46") (term "0"))
                           (rule "concrete_or_2" (formula "46"))
                           (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "45") (term "0,0"))
                           (rule "concrete_or_2" (formula "45") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                           (rule "add_literals" (formula "45") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0"))
                           (rule "leq_literals" (formula "45") (term "0"))
                           (rule "concrete_or_2" (formula "45"))
                           (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "46"))
                           (rule "mul_literals" (formula "20") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                           (rule "add_literals" (formula "20") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                           (rule "mul_literals" (formula "20") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "leq_literals" (formula "20") (term "0,0"))
                           (rule "concrete_or_2" (formula "20") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "leq_literals" (formula "20") (term "0"))
                           (rule "concrete_or_2" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "47"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "48"))
                           (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0"))
                           (rule "polySimp_rightDist" (formula "49") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "49") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                           (rule "add_literals" (formula "49") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "49") (term "1,0,0"))
                           (rule "add_literals" (formula "49") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                           (rule "polySimp_elimOne" (formula "49") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "4"))
                           (rule "leq_literals" (formula "49") (term "0"))
                           (rule "concrete_or_1" (formula "49"))
                           (rule "true_left" (formula "49"))
                           (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "14"))
                           (rule "polySimp_rightDist" (formula "49") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0"))
                           (rule "polySimp_rightDist" (formula "49") (term "0,0,0"))
                           (rule "mul_literals" (formula "49") (term "0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0"))
                           (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                           (rule "add_literals" (formula "49") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                           (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                           (rule "polySimp_elimOne" (formula "49") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "14"))
                           (rule "polySimp_rightDist" (formula "47") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                           (rule "add_literals" (formula "47") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "leq_literals" (formula "47") (term "0,0"))
                           (rule "concrete_or_2" (formula "47") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                           (rule "neg_literal" (formula "47") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "47") (term "0,0,0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "47") (term "1,0,0"))
                           (rule "add_zero_right" (formula "47") (term "0,0"))
                           (rule "qeq_literals" (formula "47") (term "0"))
                           (rule "concrete_or_2" (formula "47"))
                           (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "47"))
                           (rule "applyEqRigid" (formula "51") (term "0,1,1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "51") (term "1,1"))
                           (rule "add_literals" (formula "51") (term "1"))
                           (rule "applyEqRigid" (formula "22") (term "0") (ifseqformula "21"))
                           (rule "qeq_literals" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "48") (term "1,1"))
                           (rule "add_literals" (formula "48") (term "1"))
                           (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "5") (term "1,1"))
                           (rule "add_literals" (formula "5") (term "1"))
                           (rule "applyEqRigid" (formula "49") (term "0,1,1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "49") (term "1,1"))
                           (rule "add_literals" (formula "49") (term "1"))
                           (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "21"))
                           (rule "leq_literals" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "applyEq" (formula "46") (term "1") (ifseqformula "21"))
                           (rule "applyEqRigid" (formula "50") (term "0,1,0,1") (ifseqformula "21"))
                           (rule "mul_literals" (formula "50") (term "1,0,1"))
                           (rule "add_literals" (formula "50") (term "0,1"))
                           (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "4"))
                           (rule "leq_literals" (formula "5") (term "0"))
                           (rule "concrete_or_1" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "4"))
                           (rule "leq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_1" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "48") (term "0"))
                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                           (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "48") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0"))
                           (rule "qeq_literals" (formula "48") (term "0"))
                           (rule "concrete_or_1" (formula "48"))
                           (rule "true_left" (formula "48"))
                           (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "13"))
                           (rule "leq_literals" (formula "47") (term "0"))
                           (rule "concrete_or_1" (formula "47"))
                           (rule "true_left" (formula "47"))
                           (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "21"))
                           (rule "leq_literals" (formula "46") (term "0"))
                           (rule "concrete_or_1" (formula "46"))
                           (rule "true_left" (formula "46"))
                           (rule "commute_or" (formula "16") (term "0,0"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "div_axiom" (formula "53") (term "0,0,0") (inst "quotient=quotient_2"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "applyEq" (formula "56") (term "1,1,1") (ifseqformula "1"))
                           (rule "applyEqRigid" (formula "56") (term "0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "56") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "56") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "56") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "56") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                           (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
        mul(quotient_2,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(neglit(4(2(8(1(4(7(3(7(0(1(#)))))))))))),
        mul(quotient_2,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "3"))
                           (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0"))
                           (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "8") (term "0"))
                           (rule "add_literals" (formula "8") (term "1,1,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "8") (term "0,0"))
                           (rule "concrete_or_2" (formula "8") (term "0"))
                           (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                           (rule "add_literals" (formula "8") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0"))
                           (rule "add_zero_right" (formula "8") (term "0,0"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (rule "concrete_or_2" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "17"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "4"))
                           (rule "mul_literals" (formula "26") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                           (rule "add_literals" (formula "26") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1"))
                           (rule "polySimp_rightDist" (formula "26") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                           (rule "mul_literals" (formula "26") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "2"))
                           (rule "mul_literals" (formula "50") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "50") (term "0"))
                           (rule "add_literals" (formula "50") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "50") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0"))
                           (rule "neg_literal" (formula "50") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "50") (term "0,0"))
                           (rule "concrete_or_2" (formula "50") (term "0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "50") (term "0,0,0,0"))
                           (rule "add_literals" (formula "50") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                           (rule "add_literals" (formula "50") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "50") (term "1,0,0"))
                           (rule "add_zero_right" (formula "50") (term "0,0"))
                           (rule "qeq_literals" (formula "50") (term "0"))
                           (rule "concrete_or_2" (formula "50"))
                           (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "8"))
                           (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "26") (term "0"))
                           (rule "add_literals" (formula "26") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                           (rule "mul_literals" (formula "26") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "9"))
                           (rule "greater_literals" (formula "26") (term "0,0"))
                           (rule "concrete_and_1" (formula "26") (term "0"))
                           (rule "times_zero_1" (formula "26") (term "1,0"))
                           (rule "leq_literals" (formula "26") (term "0"))
                           (rule "concrete_or_1" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "50"))
                           (rule "applyEq" (formula "27") (term "0,1,1") (ifseqformula "9"))
                           (rule "times_zero_2" (formula "27") (term "1,1"))
                           (rule "add_zero_right" (formula "27") (term "1"))
                           (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "9"))
                           (rule "qeq_literals" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "applyEq" (formula "50") (term "0") (ifseqformula "9"))
                           (rule "leq_literals" (formula "50"))
                           (rule "true_left" (formula "50"))
                           (rule "applyEqRigid" (formula "59") (term "1,1,1") (ifseqformula "9"))
                           (rule "add_zero_right" (formula "59") (term "1,1"))
                           (rule "applyEqRigid" (formula "2") (term "0,1,1") (ifseqformula "9"))
                           (rule "times_zero_2" (formula "2") (term "1,1"))
                           (rule "add_literals" (formula "2") (term "1"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "9"))
                           (rule "times_zero_2" (formula "3") (term "1,0,1"))
                           (rule "add_zero_right" (formula "3") (term "0,1"))
                           (rule "applyEqRigid" (formula "1") (term "1") (ifseqformula "9"))
                           (rule "applyEq" (formula "59") (term "0,0,1,0") (ifseqformula "9"))
                           (rule "mul_literals" (formula "59") (term "0,1,0"))
                           (rule "add_zero_left" (formula "59") (term "1,0"))
                           (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "10"))
                           (rule "concrete_and_1" (formula "59"))
                           (rule "inEqSimp_leqRight" (formula "59"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEqRigid" (formula "5") (term "0,1,0,1") (ifseqformula "10"))
                           (rule "times_zero_2" (formula "5") (term "1,0,1"))
                           (rule "add_zero_right" (formula "5") (term "0,1"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "51"))
                           (rule "leq_literals" (formula "27") (term "0"))
                           (rule "concrete_or_1" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "9"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "10"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "3"))
                           (rule "mul_literals" (formula "25") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "25") (term "0"))
                           (rule "add_literals" (formula "25") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                           (rule "mul_literals" (formula "25") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "49"))
                           (rule "leq_literals" (formula "25") (term "0"))
                           (rule "concrete_or_1" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "nnf_notOr" (formula "19") (term "1,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,1,1,0"))
                           (rule "commute_or" (formula "52") (term "0,0,0"))
                           (rule "nnf_imp2or" (formula "36") (term "1,0"))
                           (rule "nnf_imp2or" (formula "37") (term "1,0,1,0"))
                           (rule "shift_paren_or" (formula "26") (term "0,1,0"))
                           (rule "commute_or_2" (formula "20") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "1,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,1,1,0"))
                           (rule "nnf_imp2or" (formula "45") (term "0"))
                           (rule "commute_and" (formula "37") (term "0,0,1,0"))
                           (rule "nnf_imp2or" (formula "36") (term "0"))
                           (rule "nnf_imp2or" (formula "44") (term "0"))
                           (rule "commute_or" (formula "21") (term "0,0"))
                           (rule "nnf_imp2or" (formula "37") (term "0"))
                           (rule "nnf_imp2or" (formula "45") (term "1,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                           (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                           (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                           (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,1,0"))
                           (rule "double_not" (formula "44") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "37") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,1,0"))
                           (rule "double_not" (formula "45") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,1,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "44") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "45") (term "0,1,1,0"))
                           (rule "nnf_notOr" (formula "19") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "19") (term "1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "19") (term "0,0,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,1,1,0,0,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,1,0"))
                           (rule "nnf_notAnd" (formula "37") (term "0,1,0,1,0"))
                           (rule "double_not" (formula "37") (term "0,0,1,0,1,0"))
                           (rule "nnf_notAnd" (formula "44") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,1,1,0"))
                           (rule "nnf_notOr" (formula "45") (term "0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "45") (term "1,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,1,0,0,1,1,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "45") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "45") (term "1,0,1,0,0,1,1,0"))
                           (rule "nnf_notAnd" (formula "45") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "45") (term "0,0,1,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,0,1,1,0"))
                           (rule "commute_or_2" (formula "52") (term "0"))
                           (rule "commute_or_2" (formula "36") (term "0"))
                           (rule "commute_or_2" (formula "26") (term "0,0,1,0"))
                           (rule "inEqSimp_or_weaken2" (formula "26") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "1,0,1,0,1,0"))
                           (rule "add_literals" (formula "26") (term "0,1,0,1,0,1,0"))
                           (rule "add_zero_left" (formula "26") (term "1,0,1,0,1,0"))
                           (rule "eqClose" (formula "26") (term "0,1,0,1,0"))
                           (rule "ifthenelse_true_for" (formula "26") (term "1,0,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0") (ifseqformula "12"))
                           (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "7"))
                           (rule "replace_known_left" (formula "6") (term "1") (ifseqformula "16"))
                           (rule "concrete_or_3" (formula "6"))
                           (rule "true_left" (formula "6"))
                           (rule "commute_or" (formula "20") (term "0,0,1,1,0"))
                           (rule "div_axiom" (formula "1") (term "0") (inst "quotient=quotient_3"))
                           (rule "qeq_literals" (formula "1") (term "0,1,1"))
                           (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                           (rule "equal_literals" (formula "1") (term "0"))
                           (rule "concrete_or_2" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1,1,1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "1"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                           (rule "add_literals" (formula "3") (term "0,0,1"))
                           (rule "inEqSimp_homoInEq0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                           (rule "mul_literals" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1"))
                           (rule "mul_literals" (formula "3") (term "0,0,1"))
                           (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(add(Z(0(7(4(5(2(2(1(2(2(3(#))))))))))),
        mul(quotient_3,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                           (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "3") (term "0,0"))
                           (rule "concrete_or_2" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_2" (formula "3"))
                           (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(add(Z(3(2(8(1(4(7(3(7(0(1(#))))))))))),
        mul(quotient_3,
            Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))),
    l_1)") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "leq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "add_zero_left" (formula "2") (term "0"))
                           (rule "inEqSimp_invertInEq1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "times_zero_2" (formula "2") (term "1"))
                           (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_3") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                           (rule "leq_literals" (formula "2") (term "0,0"))
                           (rule "concrete_or_2" (formula "2") (term "0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (rule "concrete_or_2" (formula "2"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "21"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_rightDist" (formula "3") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                           (rule "add_literals" (formula "14") (term "1,1,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0"))
                           (rule "add_zero_right" (formula "14") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                           (rule "mul_literals" (formula "14") (term "1"))
                           (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "6"))
                           (rule "times_zero_1" (formula "14") (term "1,1,0"))
                           (rule "greater_literals" (formula "14") (term "0,0"))
                           (rule "concrete_and_1" (formula "14") (term "0"))
                           (rule "leq_literals" (formula "14") (term "0"))
                           (rule "concrete_or_1" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "5"))
                           (rule "mul_literals" (formula "30") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1"))
                           (rule "mul_literals" (formula "30") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                           (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "2"))
                           (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "6"))
                           (rule "times_zero_2" (formula "31") (term "1,1"))
                           (rule "add_zero_right" (formula "31") (term "1"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "6"))
                           (rule "times_zero_2" (formula "3") (term "1,1"))
                           (rule "add_zero_right" (formula "3") (term "1"))
                           (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "6"))
                           (rule "leq_literals" (formula "2"))
                           (rule "true_left" (formula "2"))
                           (rule "applyEqRigid" (formula "3") (term "0,1,0,1") (ifseqformula "5"))
                           (rule "times_zero_2" (formula "3") (term "1,0,1"))
                           (rule "add_zero_right" (formula "3") (term "0,1"))
                           (rule "applyEqRigid" (formula "4") (term "0,1,0,1") (ifseqformula "5"))
                           (rule "times_zero_2" (formula "4") (term "1,0,1"))
                           (rule "add_zero_right" (formula "4") (term "0,1"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "5"))
                           (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
                           (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "13") (term "1,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0"))
                           (rule "qeq_literals" (formula "13") (term "0"))
                           (rule "concrete_or_1" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "2"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_1" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "51"))
                           (rule "leq_literals" (formula "27") (term "0"))
                           (rule "concrete_or_1" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "7"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (rule "concrete_or_1" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "inEqSimp_contradInEq0" (formula "49") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "49") (term "0"))
                           (rule "concrete_and_2" (formula "49"))
                           (rule "closeFalse" (formula "49"))
                        )
                     )
                  )
                  (branch "Null Reference (o_arr = null)"
                     (rule "false_right" (formula "43"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "39") (ifseqformula "1"))
                  )
                  (branch "Index Out of Bounds (o_arr != null, but x_8 Out of Bounds!)"
                     (rule "false_right" (formula "43"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "simplifyUpdate2" (formula "1") (term "1"))
                     (rule "applyOnRigidFormula" (formula "39"))
                     (rule "applyOnPV" (formula "39") (term "0"))
                     (rule "simplifyUpdate1" (formula "39") (term "1"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0"))
                     (rule "applyOnPV" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1"))
                     (rule "applyOnPV" (formula "1") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1"))
                     (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "28"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq1" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                     (rule "applyEq" (formula "34") (term "1,0,0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "16") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "16") (term "1,0,1,0,1,0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "19") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "29"))
                     (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "29"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                     (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "17") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "29"))
                     (rule "applyEq" (formula "21") (term "0,0,1,0,0,0,0,0") (ifseqformula "29"))
                     (rule "jmod_axiom" (formula "36") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0"))
                     (rule "polySimp_homoEq" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,1,0,0"))
                     (rule "jmod_axiom" (formula "35") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0"))
                     (rule "mod_axiom" (formula "34") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,1,0"))
                     (rule "mul_literals" (formula "34") (term "0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0,0"))
                     (rule "jmod_axiom" (formula "18") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                     (rule "polySimp_sepNegMonomial" (formula "18"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "16") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1"))
                     (rule "polySimp_rightDist" (formula "34") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "34") (term "0,1"))
                     (rule "mul_literals" (formula "34") (term "0,0,1"))
                     (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "11"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_1" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "13"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (rule "concrete_or_1" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                     (rule "leq_literals" (formula "12") (term "0"))
                     (rule "concrete_or_1" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "30"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (rule "concrete_or_1" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "polyDiv_pullOut" (formula "31") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
                     (rule "equal_literals" (formula "31") (term "0,0,0"))
                     (rule "ifthenelse_false" (formula "31") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "0"))
                     (rule "polySimp_addComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,1,1,0"))
                     (rule "add_literals" (formula "31") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "0"))
                     (rule "mul_literals" (formula "31") (term "0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "13") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,1,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,1,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "1,0,0,0,0,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "0,0,0,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "13") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "concrete_and_1" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,1,1,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,1,1,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "1,1,0,0,0,0,1,1,0"))
                     (rule "newSym_eq" (formula "16") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
                     (rule "times_zero_1" (formula "16") (term "1,1"))
                     (rule "add_zero_right" (formula "16") (term "1"))
                     (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEqRigid" (formula "13") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "16"))
                     (rule "inEqSimp_homoInEq1" (formula "21"))
                     (rule "polySimp_addComm1" (formula "21") (term "0"))
                     (rule "applyEqRigid" (formula "15") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "19") (term "1,1,0,0,0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "16"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq0" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,0,1,0,1,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "14") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "13") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "26"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "27") (term "1") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "32") (term "1,0") (ifseqformula "17"))
                     (rule "polySimp_addComm1" (formula "32") (term "0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1"))
                     (rule "mul_literals" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1"))
                     (rule "polySimp_rightDist" (formula "26") (term "1"))
                     (rule "mul_literals" (formula "26") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "11") (term "0,0"))
                     (rule "concrete_or_2" (formula "11") (term "0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                     (rule "concrete_or_2" (formula "11"))
                     (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "18") (term "0,0"))
                     (rule "concrete_or_2" (formula "18") (term "0"))
                     (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0"))
                     (rule "leq_literals" (formula "18") (term "0"))
                     (rule "concrete_or_2" (formula "18"))
                     (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "13") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "13") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "13") (term "1,0,0,1,0,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,1,0,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "13") (term "0,0,1,0,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "13") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "newSym_eq" (formula "33") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
                     (rule "times_zero_1" (formula "33") (term "1,1,1"))
                     (rule "add_zero_right" (formula "33") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "33") (term "1"))
                     (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "33"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0"))
                     (rule "polySimp_rightDist" (formula "34") (term "0"))
                     (rule "mul_literals" (formula "34") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "34") (term "0"))
                     (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                     (rule "add_literals" (formula "34") (term "0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "34"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1"))
                     (rule "polySimp_rightDist" (formula "34") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                     (rule "mul_literals" (formula "34") (term "0,1"))
                     (rule "applyEqRigid" (formula "1") (term "0,0,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "35") (term "1,1,0,0,0,0") (ifseqformula "34"))
                     (rule "polySimp_addAssoc" (formula "35") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,1,0,0,0,0"))
                     (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "34"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                     (rule "mul_literals" (formula "32") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "32") (term "1"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,1"))
                     (rule "add_literals" (formula "32") (term "0,0,1"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "applyEqRigid" (formula "2") (term "0,2,0") (ifseqformula "34"))
                     (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq0" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0"))
                     (rule "add_literals" (formula "36") (term "0,0"))
                     (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "34"))
                     (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "34"))
                     (rule "inEqSimp_homoInEq1" (formula "31"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0"))
                     (rule "add_literals" (formula "31") (term "0,0"))
                     (rule "applyEq" (formula "1") (term "0,0,1") (ifseqformula "34"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                     (rule "elimGcdGeq_antec" (formula "31") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "31") (term "0,0"))
                     (rule "concrete_or_2" (formula "31") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "31") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0"))
                     (rule "leq_literals" (formula "31") (term "0"))
                     (rule "concrete_or_2" (formula "31"))
                     (rule "elimGcdLeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "36") (term "0,0"))
                     (rule "concrete_or_2" (formula "36") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "36") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "36") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                     (rule "add_literals" (formula "36") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "36") (term "1,0,0"))
                     (rule "add_zero_right" (formula "36") (term "0,0"))
                     (rule "qeq_literals" (formula "36") (term "0"))
                     (rule "concrete_or_2" (formula "36"))
                     (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "leq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "elimGcdLeq_antec" (formula "32") (inst "elimGcdRightDiv=add(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
        mul(l_1, Z(neglit(1(#))))),
    l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(neglit(7(4(6(3(8(4(7(4(1(2(#)))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,1,0"))
                     (rule "neg_literal" (formula "32") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "32") (term "0,0"))
                     (rule "concrete_or_2" (formula "32") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0"))
                     (rule "qeq_literals" (formula "32") (term "0"))
                     (rule "concrete_or_2" (formula "32"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "21"))
                     (rule "times_zero_1" (formula "20") (term "0,0"))
                     (rule "add_zero_left" (formula "20") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_1" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "3"))
                     (rule "leq_literals" (formula "37") (term "0"))
                     (rule "concrete_or_1" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "27"))
                     (rule "times_zero_1" (formula "26") (term "0,0"))
                     (rule "add_zero_left" (formula "26") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                     (rule "mul_literals" (formula "26") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "26") (ifseqformula "19"))
                     (rule "mul_literals" (formula "26") (term "1,1,0"))
                     (rule "greater_literals" (formula "26") (term "0,0"))
                     (rule "concrete_and_1" (formula "26") (term "0"))
                     (rule "leq_literals" (formula "26") (term "0"))
                     (rule "concrete_or_1" (formula "26"))
                     (rule "true_left" (formula "26"))
                     (rule "nnf_imp2or" (formula "36") (term "1,0"))
                     (rule "double_not" (formula "36") (term "0,1,0"))
                     (rule "nnf_imp2or" (formula "16") (term "1,0"))
                     (rule "nnf_imp2or" (formula "20") (term "1,0,1,0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "expand_subJint" (formula "1") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0,0"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                     (rule "expand_subJint" (formula "1") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
                     (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "commute_and" (formula "20") (term "0,0"))
                     (rule "commute_and" (formula "16") (term "0,0"))
                     (rule "expand_moduloInteger" (formula "1") (term "0,0"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0,0"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                     (rule "mod_axiom" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                     (rule "elimGcdLeq" (formula "1") (term "0") (inst "elimGcdRightDiv=add(add(Z(neglit(1(#))), l_1),
    mul(l_0, Z(neglit(1(#)))))") (inst "elimGcdLeftDiv=mul(div(add(Z(6(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                     (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "1,0,1,0,0"))
                     (rule "times_zero_1" (formula "1") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "1") (term "1,0,0"))
                     (rule "concrete_and_3" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0"))
                     (rule "ifthenelse_true_for" (formula "1") (term "0"))
                     (rule "nnf_imp2or" (formula "36") (term "0"))
                     (rule "expand_moduloInteger" (formula "1") (term "0,1"))
                     (rule "replace_int_MIN" (formula "1") (term "0,0,1"))
                     (rule "replace_int_RANGE" (formula "1") (term "1,1,0,1"))
                     (rule "replace_int_HALFRANGE" (formula "1") (term "0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,1"))
                     (rule "mod_axiom" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,1"))
                     (rule "elimGcdGeq" (formula "1") (term "1") (inst "elimGcdRightDiv=add(Z(0(#)), l_1)") (inst "elimGcdLeftDiv=mul(div(add(Z(6(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_1, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_zero_left" (formula "1") (term "1,1,1"))
                     (rule "add_zero_left" (formula "1") (term "1,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "1") (term "0,0,0,0,0,1,0,1"))
                     (rule "add_zero_left" (formula "1") (term "1,0,0,0,0,1,0,1"))
                     (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,1,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,1"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0,1"))
                     (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,1,0,1"))
                     (rule "add_literals" (formula "1") (term "1,1,0,1,0,1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,1,0,1"))
                     (rule "leq_literals" (formula "1") (term "1,0,1"))
                     (rule "concrete_and_3" (formula "1") (term "0,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                     (rule "add_zero_left" (formula "1") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1"))
                     (rule "add_literals" (formula "1") (term "1,0,0,1"))
                     (rule "times_zero_1" (formula "1") (term "0,0,1"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1"))
                     (rule "nnf_imp2or" (formula "15") (term "1,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "14") (term "1,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0"))
                     (rule "jdiv_axiom" (formula "17") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,2,1"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "17") (term "1") (ifseqformula "18"))
                     (rule "inEqSimp_subsumption6" (formula "17") (term "0,0") (ifseqformula "20"))
                     (rule "mul_literals" (formula "17") (term "1,1,0,0,0"))
                     (rule "greater_literals" (formula "17") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "17") (term "0,0,0"))
                     (rule "leq_literals" (formula "17") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "17") (term "0,0"))
                     (rule "ifthenelse_true" (formula "17") (term "0"))
                     (rule "polyDiv_pullOut" (formula "17") (term "0") (inst "polyDivCoeff=l_0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0,2,0"))
                     (rule "equal_literals" (formula "17") (term "0,0"))
                     (rule "ifthenelse_false" (formula "17") (term "0"))
                     (rule "polySimp_pullOutFactor0" (formula "17") (term "0,0,0"))
                     (rule "add_literals" (formula "17") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "17") (term "0,0,0"))
                     (rule "div_literals" (formula "17") (term "0,0"))
                     (rule "add_zero_left" (formula "17") (term "0"))
                     (rule "eqClose" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "nnf_notAnd" (formula "15") (term "0,1,0"))
                     (rule "double_not" (formula "15") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,1,0"))
                     (rule "double_not" (formula "14") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                     (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "36") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,1,0,0,0"))
                     (rule "add_zero_left" (formula "36") (term "0,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                     (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "30") (inst "i=i_6") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "9"))
                     (rule "insert_constant_value" (formula "30") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "insert_constant_value" (formula "30") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "expand_inInt" (formula "30") (term "1"))
                     (rule "mul_literals" (formula "30") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replace_int_MIN" (formula "30") (term "0,1,1"))
                     (rule "replace_int_MAX" (formula "30") (term "1,0,1"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "30"))
                     (rule "andLeft" (formula "30"))
                     (rule "notLeft" (formula "30"))
                     (rule "exLeft" (formula "37") (inst "sk=i_1_2"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "37"))
                     (rule "exLeft" (formula "35") (inst "sk=i_2_0"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "eqSymm" (formula "34"))
                     (rule "eqSymm" (formula "33") (term "1,1,0,1,0"))
                     (rule "eqSymm" (formula "33") (term "1,0,1,0,1,0"))
                     (rule "eqSymm" (formula "37"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,1,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,2,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,0,0,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,2,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "0,2,0,0,0,2,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "ifthenelse_negated" (formula "34") (term "2,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0,1,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_addComm1" (formula "42") (term "0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "44"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_commuteGeq" (formula "31"))
                     (rule "inEqSimp_commuteLeq" (formula "30"))
                     (rule "inEqSimp_commuteLeq" (formula "39"))
                     (rule "inEqSimp_commuteLeq" (formula "35"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,1,0"))
                     (rule "applyEq" (formula "43") (term "1,1,0,0,0,0,1,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "42") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "43") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "28"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "applyEq" (formula "34") (term "0,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "28"))
                     (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "28"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "37"))
                     (rule "applyEq" (formula "42") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "43") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "37"))
                     (rule "applyEq" (formula "38") (term "0,0") (ifseqformula "28"))
                     (rule "applyEqRigid" (formula "37") (term "1") (ifseqformula "28"))
                     (rule "applyEqRigid" (formula "42") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "40") (term "0,1,0") (ifseqformula "17"))
                     (rule "polySimp_addComm1" (formula "40") (term "0"))
                     (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "28"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "32") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "applyEqRigid" (formula "41") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "33") (term "0,0,1,0,0,1,0,0,1,0") (ifseqformula "28"))
                     (rule "applyEqRigid" (formula "42") (term "0,0,1,0,0,1,0,0") (ifseqformula "28"))
                     (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "33") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "17"))
                     (rule "applyEqRigid" (formula "42") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "jmod_axiom" (formula "37") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0"))
                     (rule "applyEqRigid" (formula "37") (term "0,1,0") (ifseqformula "17"))
                     (rule "polySimp_pullOutFactor0" (formula "37") (term "0"))
                     (rule "add_literals" (formula "37") (term "1,0"))
                     (rule "times_zero_1" (formula "37") (term "0"))
                     (rule "eqClose" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1"))
                     (rule "polySimp_rightDist" (formula "35") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                     (rule "mul_literals" (formula "35") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                     (rule "polySimp_mulComm0" (formula "38") (term "1"))
                     (rule "polySimp_rightDist" (formula "38") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                     (rule "mul_literals" (formula "38") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                     (rule "inEqSimp_subsumption4" (formula "31") (ifseqformula "12"))
                     (rule "mul_literals" (formula "31") (term "0,1,0"))
                     (rule "greater_literals" (formula "31") (term "0,0"))
                     (rule "concrete_and_1" (formula "31") (term "0"))
                     (rule "leq_literals" (formula "31") (term "0"))
                     (rule "concrete_or_1" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "inEqSimp_subsumption6" (formula "30") (ifseqformula "19"))
                     (rule "greater_literals" (formula "30") (term "0,0"))
                     (rule "concrete_and_1" (formula "30") (term "0"))
                     (rule "mul_literals" (formula "30") (term "1,0"))
                     (rule "leq_literals" (formula "30") (term "0"))
                     (rule "concrete_or_1" (formula "30"))
                     (rule "true_left" (formula "30"))
                     (rule "elimGcdLeq" (formula "39") (term "1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,1,0,1,0,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "39") (term "1,0,1,0,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "39") (term "0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,1,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,0,1,0,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,0,0,1,0,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "0,0,1,0,0,0,1,1,0"))
                     (rule "leq_literals" (formula "39") (term "0,1,0,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "39") (term "1,0,0,0,1,1,0"))
                     (rule "elimGcdLeq" (formula "39") (term "1,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_6)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,1,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,1,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,1,0,1,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "39") (term "1,0,1,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "39") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "0,0,0,0,1,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,0,1,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,0,0,1,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "0,0,1,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "39") (term "0,1,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "39") (term "1,1,0,0,1,1,0"))
                     (rule "elimGcdGeq" (formula "39") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,1,0,0,1,1,0"))
                     (rule "sub_literals" (formula "39") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,0,1,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "0,1,0,0,1,0,0,1,1,0"))
                     (rule "leq_literals" (formula "39") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "concrete_and_3" (formula "39") (term "0,0,1,0,0,1,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "add_literals" (formula "39") (term "1,1,0,0,0,1,0,0,1,1,0"))
                     (rule "times_zero_1" (formula "39") (term "1,0,0,0,1,0,0,1,1,0"))
                     (rule "add_zero_right" (formula "39") (term "0,0,0,1,0,0,1,1,0"))
                     (rule "qeq_literals" (formula "39") (term "0,0,1,0,0,1,1,0"))
                     (rule "ifthenelse_true_for" (formula "39") (term "0,1,0,0,1,1,0"))
                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                     (rule "times_zero_1" (formula "32") (term "0,0"))
                     (rule "add_zero_left" (formula "32") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                     (rule "mul_literals" (formula "32") (term "1"))
                     (rule "inEqSimp_subsumption6" (formula "32") (ifseqformula "19"))
                     (rule "mul_literals" (formula "32") (term "1,1,0"))
                     (rule "greater_literals" (formula "32") (term "0,0"))
                     (rule "concrete_and_1" (formula "32") (term "0"))
                     (rule "leq_literals" (formula "32") (term "0"))
                     (rule "concrete_or_1" (formula "32"))
                     (rule "true_left" (formula "32"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "36"))
                     (rule "times_zero_1" (formula "35") (term "0,0"))
                     (rule "add_zero_left" (formula "35") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                     (rule "mul_literals" (formula "35") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "19"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (rule "concrete_or_1" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,1,1,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,1,0,1,0"))
                     (rule "double_not" (formula "20") (term "0,0,1,0,1,0"))
                     (rule "nnf_imp2or" (formula "30") (term "1,0"))
                     (rule "jdiv_axiom" (formula "43") (term "0"))
                     (rule "eqSymm" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,0,2,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "0,0,2,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,2,0"))
                     (rule "mul_literals" (formula "43") (term "0,0,0,2,0"))
                     (rule "applyEqRigid" (formula "43") (term "1") (ifseqformula "44"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0"))
                     (rule "inEqSimp_subsumption6" (formula "43") (term "0,0") (ifseqformula "41"))
                     (rule "mul_literals" (formula "43") (term "1,1,0,0,0"))
                     (rule "greater_literals" (formula "43") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "43") (term "0,0,0"))
                     (rule "leq_literals" (formula "43") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "43") (term "0,0"))
                     (rule "ifthenelse_true" (formula "43") (term "0"))
                     (rule "polyDiv_pullOut" (formula "43") (term "0") (inst "polyDivCoeff=l_1"))
                     (rule "equal_literals" (formula "43") (term "0,0"))
                     (rule "ifthenelse_false" (formula "43") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                     (rule "polySimp_homoEq" (formula "43"))
                     (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "43") (term "1,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0,0,1,0"))
                     (rule "div_literals" (formula "43") (term "0,0,1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                     (rule "add_literals" (formula "43") (term "1,0"))
                     (rule "times_zero_1" (formula "43") (term "0"))
                     (rule "eqClose" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "nnf_imp2or" (formula "31") (term "1,0,1,0"))
                     (rule "commute_or" (formula "45") (term "1,0"))
                     (rule "div_axiom" (formula "42") (term "0,0") (inst "quotient=quotient_0"))
                     (rule "mul_literals" (formula "42") (term "1,1,1,1,1"))
                     (rule "qeq_literals" (formula "42") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "42") (term "1,1"))
                     (rule "equal_literals" (formula "42") (term "0"))
                     (rule "concrete_or_2" (formula "42"))
                     (rule "andLeft" (formula "42"))
                     (rule "andLeft" (formula "42"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,1"))
                     (rule "add_literals" (formula "44") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "44") (term "1"))
                     (rule "add_literals" (formula "44") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "44"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0"))
                     (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "42"))
                     (rule "inEqSimp_homoInEq0" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                     (rule "polySimp_mulComm0" (formula "43") (term "1"))
                     (rule "polySimp_rightDist" (formula "43") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                     (rule "mul_literals" (formula "43") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "44"))
                     (rule "polySimp_mulComm0" (formula "44") (term "1"))
                     (rule "polySimp_rightDist" (formula "44") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1"))
                     (rule "mul_literals" (formula "44") (term "0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "45") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1"))
                     (rule "mul_literals" (formula "45") (term "0,0,1"))
                     (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "44") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "44") (term "0,0"))
                     (rule "concrete_or_2" (formula "44") (term "0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "44") (term "0,0,0"))
                     (rule "add_literals" (formula "44") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "qeq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_2" (formula "44"))
                     (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "43") (term "0,0"))
                     (rule "concrete_or_2" (formula "43") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                     (rule "add_literals" (formula "43") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "43") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                     (rule "add_literals" (formula "43") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0"))
                     (rule "leq_literals" (formula "43") (term "0"))
                     (rule "concrete_or_2" (formula "43"))
                     (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "12"))
                     (rule "polySimp_rightDist" (formula "45") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "polySimp_rightDist" (formula "45") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "45") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                     (rule "add_literals" (formula "45") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                     (rule "polySimp_elimOne" (formula "45") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "12"))
                     (rule "polySimp_rightDist" (formula "43") (term "0,0"))
                     (rule "mul_literals" (formula "43") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "43") (term "0"))
                     (rule "add_literals" (formula "43") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "leq_literals" (formula "43") (term "0,0"))
                     (rule "concrete_or_2" (formula "43") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "43") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                     (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "43") (term "0,0,0,0"))
                     (rule "add_literals" (formula "43") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                     (rule "add_literals" (formula "43") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "43") (term "1,0,0"))
                     (rule "add_zero_right" (formula "43") (term "0,0"))
                     (rule "qeq_literals" (formula "43") (term "0"))
                     (rule "concrete_or_2" (formula "43"))
                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "45"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                     (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0"))
                     (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "48") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                     (rule "add_literals" (formula "48") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0"))
                     (rule "add_zero_right" (formula "48") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "3"))
                     (rule "leq_literals" (formula "48") (term "0"))
                     (rule "concrete_or_1" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "46"))
                     (rule "mul_literals" (formula "20") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                     (rule "mul_literals" (formula "20") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                     (rule "concrete_or_2" (formula "20") (term "0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                     (rule "concrete_or_2" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "48"))
                     (rule "mul_literals" (formula "43") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "43") (term "0"))
                     (rule "add_literals" (formula "43") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "43") (ifseqformula "46"))
                     (rule "mul_literals" (formula "43") (term "0,1,0"))
                     (rule "greater_literals" (formula "43") (term "0,0"))
                     (rule "concrete_and_1" (formula "43") (term "0"))
                     (rule "leq_literals" (formula "43") (term "0"))
                     (rule "concrete_or_1" (formula "43"))
                     (rule "true_left" (formula "43"))
                     (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "45"))
                     (rule "applyEq" (formula "46") (term "0") (ifseqformula "20"))
                     (rule "leq_literals" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "applyEq" (formula "47") (term "0,1,1") (ifseqformula "20"))
                     (rule "mul_literals" (formula "47") (term "1,1"))
                     (rule "add_literals" (formula "47") (term "1"))
                     (rule "applyEqRigid" (formula "46") (term "0,1,1") (ifseqformula "20"))
                     (rule "mul_literals" (formula "46") (term "1,1"))
                     (rule "add_literals" (formula "46") (term "1"))
                     (rule "applyEq" (formula "48") (term "0,1,1") (ifseqformula "20"))
                     (rule "mul_literals" (formula "48") (term "1,1"))
                     (rule "add_literals" (formula "48") (term "1"))
                     (rule "applyEqRigid" (formula "21") (term "0") (ifseqformula "20"))
                     (rule "qeq_literals" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "applyEq" (formula "4") (term "0,1,1") (ifseqformula "20"))
                     (rule "mul_literals" (formula "4") (term "1,1"))
                     (rule "add_literals" (formula "4") (term "1"))
                     (rule "applyEq" (formula "48") (term "0,1,0,1") (ifseqformula "20"))
                     (rule "mul_literals" (formula "48") (term "1,0,1"))
                     (rule "add_literals" (formula "48") (term "0,1"))
                     (rule "applyEq" (formula "44") (term "1") (ifseqformula "20"))
                     (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "3"))
                     (rule "leq_literals" (formula "47") (term "0"))
                     (rule "concrete_or_1" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "4"))
                     (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                     (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0"))
                     (rule "qeq_literals" (formula "46") (term "0"))
                     (rule "concrete_or_1" (formula "46"))
                     (rule "true_left" (formula "46"))
                     (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "20"))
                     (rule "leq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_1" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "inEqSimp_subsumption0" (formula "44") (ifseqformula "12"))
                     (rule "leq_literals" (formula "44") (term "0"))
                     (rule "concrete_or_1" (formula "44"))
                     (rule "true_left" (formula "44"))
                     (rule "nnf_imp2or" (formula "39") (term "1,0"))
                     (rule "commute_or" (formula "15") (term "0,0"))
                     (rule "commute_or" (formula "14") (term "0,0"))
                     (rule "commute_or_2" (formula "16") (term "0"))
                     (rule "div_axiom" (formula "1") (term "0,0,0") (inst "quotient=quotient_1"))
                     (rule "qeq_literals" (formula "1") (term "0,1,1"))
                     (rule "ifthenelse_true_for" (formula "1") (term "1,1"))
                     (rule "equal_literals" (formula "1") (term "0"))
                     (rule "concrete_or_2" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1,1,1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,1"))
                     (rule "add_literals" (formula "3") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "3") (term "1"))
                     (rule "add_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                     (rule "applyEqRigid" (formula "4") (term "0,0,1") (ifseqformula "1"))
                     (rule "inEqSimp_commuteGeq" (formula "4") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                     (rule "mul_literals" (formula "3") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0"))
                     (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_or_2" (formula "3") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "elimGcdGeq_antec" (formula "2") (inst "elimGcdRightDiv=add(Z(neglit(3(2(8(1(4(7(3(7(0(1(#)))))))))))),
    mul(quotient_1, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "leq_literals" (formula "2") (term "0,0"))
                     (rule "concrete_or_2" (formula "2") (term "0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_2" (formula "2"))
                     (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "4"))
                     (rule "mul_literals" (formula "46") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "add_literals" (formula "46") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                     (rule "mul_literals" (formula "46") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "46") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "46") (term "0,0"))
                     (rule "concrete_or_2" (formula "46") (term "0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "46") (term "0,0,0,0"))
                     (rule "add_literals" (formula "46") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                     (rule "add_literals" (formula "46") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "46") (term "1,0,0"))
                     (rule "add_zero_right" (formula "46") (term "0,0"))
                     (rule "leq_literals" (formula "46") (term "0"))
                     (rule "concrete_or_2" (formula "46"))
                     (rule "inEqSimp_antiSymm" (formula "46") (ifseqformula "2"))
                     (rule "applyEq" (formula "47") (term "0") (ifseqformula "46"))
                     (rule "qeq_literals" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,1") (ifseqformula "46"))
                     (rule "times_zero_2" (formula "5") (term "1,1"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "46"))
                     (rule "times_zero_2" (formula "4") (term "1,1"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "46"))
                     (rule "leq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "45"))
                     (rule "times_zero_2" (formula "2") (term "1,1"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "applyEq" (formula "4") (term "0,1,0,1,0") (ifseqformula "45"))
                     (rule "times_zero_2" (formula "4") (term "1,0,1,0"))
                     (rule "add_zero_right" (formula "4") (term "0,1,0"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "45"))
                     (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "46"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "0") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0"))
                     (rule "leq_literals" (formula "3") (term "0,0"))
                     (rule "concrete_and_2" (formula "3") (term "0"))
                     (rule "concrete_or_2" (formula "3"))
                     (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "5"))
                     (rule "leq_literals" (formula "2") (term "0"))
                     (rule "concrete_or_1" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "2"))
                     (rule "leq_literals" (formula "4") (term "0"))
                     (rule "concrete_or_1" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "43"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (rule "concrete_and_2" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
            )
            (branch "Null Reference (tab = null)"
               (rule "false_right" (formula "42"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "close" (formula "38") (ifseqformula "1"))
            )
            (branch "Index Out of Bounds (tab != null, but i Out of Bounds!)"
               (rule "false_right" (formula "42"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "simplifyUpdate2" (formula "1") (term "1"))
               (rule "applyOnRigidFormula" (formula "38"))
               (rule "simplifyUpdate1" (formula "38") (term "1"))
               (rule "applyOnPV" (formula "38") (term "0"))
               (rule "applyOnRigidFormula" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1,0"))
               (rule "simplifyUpdate1" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "1") (term "1"))
               (rule "applyOnPV" (formula "1") (term "0,1"))
               (rule "simplifyUpdate1" (formula "1") (term "1,1"))
               (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
               (rule "applyOnPV" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "27"))
               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "27") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulAssoc" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "22"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "22") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "15") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
               (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
               (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "1") (term "0,0,1"))
               (rule "inEqSimp_homoInEq1" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addComm0" (formula "33") (term "0,0"))
               (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "11") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "33") (term "1,0,0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "15") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "15") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "22") (term "0,0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "1,0,1,0,1,0,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "16") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "20") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
               (rule "jmod_axiom" (formula "34") (term "0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
               (rule "polySimp_homoEq" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
               (rule "polySimp_rightDist" (formula "34") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "34") (term "0"))
               (rule "jmod_axiom" (formula "35") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0"))
               (rule "polySimp_homoEq" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,1,0,0"))
               (rule "jmod_axiom" (formula "17") (term "0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
               (rule "mod_axiom" (formula "33") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1,0"))
               (rule "mul_literals" (formula "33") (term "0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0"))
               (rule "polySimp_addComm1" (formula "33") (term "0,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,0"))
               (rule "polySimp_sepPosMonomial" (formula "34"))
               (rule "polySimp_mulComm0" (formula "34") (term "1"))
               (rule "polySimp_rightDist" (formula "34") (term "1"))
               (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
               (rule "mul_literals" (formula "34") (term "0,1"))
               (rule "polySimp_elimOne" (formula "34") (term "1,1"))
               (rule "polySimp_sepPosMonomial" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "27"))
               (rule "polySimp_mulLiterals" (formula "27") (term "0"))
               (rule "polySimp_elimOne" (formula "27") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "22"))
               (rule "polySimp_mulLiterals" (formula "22") (term "0"))
               (rule "polySimp_elimOne" (formula "22") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33"))
               (rule "polySimp_mulComm0" (formula "33") (term "1"))
               (rule "polySimp_rightDist" (formula "33") (term "1"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1"))
               (rule "polySimp_rightDist" (formula "33") (term "0,1"))
               (rule "mul_literals" (formula "33") (term "0,0,1"))
               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
               (rule "leq_literals" (formula "11") (term "0"))
               (rule "concrete_or_1" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "31"))
               (rule "qeq_literals" (formula "1") (term "0,1"))
               (rule "concrete_and_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "10"))
               (rule "leq_literals" (formula "18") (term "0"))
               (rule "concrete_or_1" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "30"))
               (rule "leq_literals" (formula "35") (term "0"))
               (rule "concrete_or_1" (formula "35"))
               (rule "true_left" (formula "35"))
               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "17"))
               (rule "leq_literals" (formula "11") (term "0"))
               (rule "concrete_or_1" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "if x_2 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "42"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "37"))
            (rule "applyOnPV" (formula "37") (term "0"))
            (rule "simplifyUpdate1" (formula "37") (term "1"))
            (rule "boolean_equal" (formula "37"))
            (rule "closeTrue" (formula "37"))
         )
      )
      (branch "Null Reference (tab = null)"
         (rule "false_right" (formula "42"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "close" (formula "38") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (tab = null)"
      (rule "false_right" (formula "37"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "close" (formula "37") (ifseqformula "1"))
   )
)
(branch "Use Case"
   (rule "false_to_not_true" (formula "35") (term "0,0,1,1"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "simplifyUpdate2" (formula "35"))
   (rule "expand_inInt" (formula "30") (term "1,1,1"))
   (rule "replace_int_MAX" (formula "30") (term "1,0,1,1,1"))
   (rule "replace_int_MIN" (formula "30") (term "0,1,1,1,1"))
   (rule "translateJavaAddInt" (formula "30") (term "1,1,0,0,0,1,1"))
   (rule "polySimp_elimSub" (formula "30") (term "0,2,0,0,0,1,0,1,0,1,1"))
   (rule "mul_literals" (formula "30") (term "1,0,2,0,0,0,1,0,1,0,1,1"))
   (rule "sequentialToParallel2" (formula "35"))
   (rule "simplifyUpdate2" (formula "35"))
   (rule "simplifyUpdate3" (formula "35") (term "1,0"))
   (rule "sequentialToParallel2" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "simplifyUpdate3" (formula "30") (term "1,0"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "andLeft" (formula "32"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "31"))
   (rule "andLeft" (formula "30"))
   (rule "simplifyUpdate2" (formula "30"))
   (rule "polySimp_addComm0" (formula "33") (term "0,2,0,0,0,1,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
   (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "25"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "25") (term "0"))
   (rule "applyOnRigidFormula" (formula "34"))
   (rule "simplifyUpdate1" (formula "34") (term "1"))
   (rule "applyOnPV" (formula "34") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
   (rule "applyOnRigidFormula" (formula "35"))
   (rule "simplifyUpdate1" (formula "35") (term "0"))
   (rule "applyOnPV" (formula "35") (term "1"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
   (rule "inEqSimp_ltToLeq" (formula "20"))
   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "20") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "12") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulAssoc" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "32"))
   (rule "simplifyUpdate1" (formula "32") (term "1"))
   (rule "applyOnRigidFormula" (formula "31"))
   (rule "simplifyUpdate1" (formula "31") (term "1"))
   (rule "simplifyUpdate1" (formula "31") (term "0"))
   (rule "applyOnPV" (formula "31") (term "0"))
   (rule "applyOnRigidFormula" (formula "30"))
   (rule "simplifyUpdate1" (formula "30") (term "1"))
   (rule "applyOnPV" (formula "30") (term "0"))
   (rule "applyOnRigidFormula" (formula "33"))
   (rule "applyOnRigidTerm" (formula "32") (term "0"))
   (rule "simplifyUpdate1" (formula "32") (term "1,0"))
   (rule "applyOnPV" (formula "32") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "31") (term "1"))
   (rule "simplifyUpdate1" (formula "31") (term "1,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "0"))
   (rule "simplifyUpdate2" (formula "33") (term "1,0"))
   (rule "simplifyUpdate2" (formula "33") (term "0,0"))
   (rule "applyOnRigidTerm" (formula "31") (term "0,1"))
   (rule "applyOnPV" (formula "31") (term "0,0,1"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0"))
   (rule "simplifyUpdate2" (formula "33") (term "0,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0"))
   (rule "simplifyUpdate2" (formula "33") (term "1,0,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,0"))
   (rule "simplifyUpdate2" (formula "33") (term "0,0,0,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,1,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,1,1,0"))
   (rule "applyOnPV" (formula "33") (term "1,0,1,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "1,0,0,1,0"))
   (rule "applyOnRigidFormula" (formula "33") (term "1,0,0,0"))
   (rule "applyOnPV" (formula "33") (term "1,1,0,0,0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,1,0,0,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "2,0,0,1,1,0"))
   (rule "applyOnPV" (formula "33") (term "1,0,0,1,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,0,1,1,0"))
   (rule "applyOnRigidTerm" (formula "33") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "2,0,0,0,1,0"))
   (rule "applyOnPV" (formula "33") (term "1,0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "33") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "35"))
   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "31"))
   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
   (rule "variableDeclarationAssign" (formula "40") (term "1"))
   (rule "variableDeclaration" (formula "40") (term "1") (newnames "b_1"))
   (rule "applyEq" (formula "12") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "11") (term "0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "16") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "13") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "17") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "10") (term "0") (ifseqformula "26"))
   (rule "applyEq" (formula "20") (term "0,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "13") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "applyEq" (formula "18") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "12") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "26"))
   (rule "applyEq" (formula "13") (term "0,0,1,0,0,0,0,0") (ifseqformula "26"))
   (rule "jmod_axiom" (formula "32") (term "0"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
   (rule "polySimp_homoEq" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
   (rule "polySimp_rightDist" (formula "32") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
   (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "32") (term "0"))
   (rule "jmod_axiom" (formula "33") (term "0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0"))
   (rule "polySimp_homoEq" (formula "33") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0,1,0,0"))
   (rule "jmod_axiom" (formula "15") (term "0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
   (rule "polySimp_sepPosMonomial" (formula "32"))
   (rule "polySimp_mulComm0" (formula "32") (term "1"))
   (rule "polySimp_rightDist" (formula "32") (term "1"))
   (rule "mul_literals" (formula "32") (term "0,1"))
   (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
   (rule "polySimp_elimOne" (formula "32") (term "1,1"))
   (rule "polySimp_sepPosMonomial" (formula "33") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
   (rule "polySimp_sepNegMonomial" (formula "15"))
   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "20"))
   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
   (rule "polySimp_elimOne" (formula "20") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "25"))
   (rule "polySimp_mulLiterals" (formula "25") (term "0"))
   (rule "polySimp_elimOne" (formula "25") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,0"))
   (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
   (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,0,0,0,0,1,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
   (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
   (rule "leq_literals" (formula "9") (term "0"))
   (rule "concrete_or_1" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "29"))
   (rule "leq_literals" (formula "34") (term "0"))
   (rule "concrete_or_1" (formula "34"))
   (rule "true_left" (formula "34"))
   (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "8"))
   (rule "leq_literals" (formula "16") (term "0"))
   (rule "concrete_or_1" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "15"))
   (rule "leq_literals" (formula "9") (term "0"))
   (rule "concrete_or_1" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "elimGcdLeq" (formula "10") (term "1,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,1,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,1,1,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,1,1,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "1,1,0,0,0,1,1,0"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), i_1)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,1,1,0"))
   (rule "elimGcdGeq" (formula "10") (term "0,0,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "1,0,0,0,0,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "0,0,0,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
   (rule "elimGcdGeq" (formula "10") (term "1,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "concrete_and_1" (formula "10") (term "0,1,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,1,1,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "1,1,0,0,0,0,1,1,0"))
   (rule "newSym_eq" (formula "13") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), i_1_1), Z(0(#)))"))
   (rule "times_zero_1" (formula "13") (term "1,1"))
   (rule "add_zero_right" (formula "13") (term "1"))
   (rule "applyEqRigid" (formula "16") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
   (rule "applyEq" (formula "10") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "11") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "13"))
   (rule "applyEq" (formula "18") (term "0") (ifseqformula "13"))
   (rule "inEqSimp_homoInEq1" (formula "18"))
   (rule "polySimp_addComm1" (formula "18") (term "0"))
   (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "13"))
   (rule "eqSymm" (formula "14"))
   (rule "applyEq" (formula "12") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "13"))
   (rule "applyEqRigid" (formula "10") (term "1,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEqRigid" (formula "29") (term "0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
   (rule "applyEq" (formula "11") (term "1,0,1,0,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,0,1,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
   (rule "inEqSimp_homoInEq1" (formula "23"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
   (rule "polySimp_addComm1" (formula "23") (term "0"))
   (rule "applyEqRigid" (formula "11") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "10") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "14"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "14"))
   (rule "applyEq" (formula "24") (term "1") (ifseqformula "14"))
   (rule "inEqSimp_sepPosMonomial0" (formula "18"))
   (rule "polySimp_mulComm0" (formula "18") (term "1"))
   (rule "polySimp_rightDist" (formula "18") (term "1"))
   (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
   (rule "mul_literals" (formula "18") (term "0,1"))
   (rule "polySimp_elimOne" (formula "18") (term "1,1"))
   (rule "inEqSimp_sepPosMonomial0" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1"))
   (rule "polySimp_rightDist" (formula "23") (term "1"))
   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
   (rule "mul_literals" (formula "23") (term "0,1"))
   (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
   (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "8") (term "0,0"))
   (rule "concrete_or_2" (formula "8") (term "0"))
   (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "8") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
   (rule "add_literals" (formula "8") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "8") (term "1,0,0"))
   (rule "add_literals" (formula "8") (term "0,0"))
   (rule "qeq_literals" (formula "8") (term "0"))
   (rule "concrete_or_2" (formula "8"))
   (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "15") (term "0,0"))
   (rule "concrete_or_2" (formula "15") (term "0"))
   (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "15") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
   (rule "add_literals" (formula "15") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "15") (term "1,0,0"))
   (rule "add_literals" (formula "15") (term "0,0"))
   (rule "leq_literals" (formula "15") (term "0"))
   (rule "concrete_or_2" (formula "15"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,1,0,0,1,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,0,1,1,0"))
   (rule "elimGcdLeq" (formula "10") (term "0,1,0,0,0,0,1,1,0") (inst "elimGcdRightDiv=add(Z(neglit(1(#))), l_0)") (inst "elimGcdLeftDiv=j") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "sub_literals" (formula "10") (term "0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_right" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "mul_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "1,0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,1,1,0"))
   (rule "qeq_literals" (formula "10") (term "1,0,0,1,0,0,0,0,1,1,0"))
   (rule "concrete_and_3" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "add_literals" (formula "10") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
   (rule "times_zero_1" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
   (rule "leq_literals" (formula "10") (term "0,0,1,0,0,0,0,1,1,0"))
   (rule "ifthenelse_true_for" (formula "10") (term "0,1,0,0,0,0,1,1,0"))
   (rule "newSym_eq" (formula "30") (inst "l=l_1") (inst "newSymDef=add(Z(neglit(1(#))), mul(i_0, Z(0(#))))"))
   (rule "times_zero_1" (formula "30") (term "1,1,1"))
   (rule "add_zero_right" (formula "30") (term "1,1"))
   (rule "polySimp_addComm0" (formula "30") (term "1"))
   (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "30"))
   (rule "polySimp_mulComm0" (formula "31") (term "0"))
   (rule "polySimp_rightDist" (formula "31") (term "0"))
   (rule "mul_literals" (formula "31") (term "0,0"))
   (rule "polySimp_homoEq" (formula "31"))
   (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
   (rule "polySimp_rightDist" (formula "31") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
   (rule "mul_literals" (formula "31") (term "0,1,0"))
   (rule "polySimp_addComm1" (formula "31") (term "0"))
   (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
   (rule "add_literals" (formula "31") (term "0,0,0"))
   (rule "polySimp_sepPosMonomial" (formula "31"))
   (rule "polySimp_mulComm0" (formula "31") (term "1"))
   (rule "polySimp_rightDist" (formula "31") (term "1"))
   (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
   (rule "mul_literals" (formula "31") (term "0,1"))
   (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "31"))
   (rule "applyEqRigid" (formula "38") (term "0,1,0") (ifseqformula "31"))
   (rule "applyEqRigid" (formula "32") (term "1,1,1,0,0,0") (ifseqformula "31"))
   (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0,0"))
   (rule "add_literals" (formula "32") (term "0,1,1,0,0,0"))
   (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "31"))
   (rule "applyEqRigid" (formula "28") (term "0") (ifseqformula "31"))
   (rule "inEqSimp_homoInEq1" (formula "28"))
   (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
   (rule "polySimp_rightDist" (formula "28") (term "1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0"))
   (rule "mul_literals" (formula "28") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "28") (term "0"))
   (rule "add_literals" (formula "28") (term "0,0"))
   (rule "applyEq" (formula "33") (term "0") (ifseqformula "31"))
   (rule "inEqSimp_homoInEq0" (formula "33"))
   (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
   (rule "polySimp_rightDist" (formula "33") (term "1,0"))
   (rule "mul_literals" (formula "33") (term "0,1,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
   (rule "polySimp_addAssoc" (formula "33") (term "0"))
   (rule "add_literals" (formula "33") (term "0,0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "28"))
   (rule "polySimp_mulLiterals" (formula "28") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "33"))
   (rule "polySimp_mulLiterals" (formula "33") (term "0"))
   (rule "elimGcdLeq_antec" (formula "33") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "33") (term "0,0"))
   (rule "concrete_or_2" (formula "33") (term "0"))
   (rule "neg_literal" (formula "33") (term "0,0,0,0,0,0"))
   (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "33") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "33") (term "0,0"))
   (rule "add_literals" (formula "33") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "33") (term "1,0,0"))
   (rule "add_literals" (formula "33") (term "0,0"))
   (rule "qeq_literals" (formula "33") (term "0"))
   (rule "concrete_or_2" (formula "33"))
   (rule "elimGcdGeq_antec" (formula "28") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcd=Z(2(#))"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,1,0"))
   (rule "leq_literals" (formula "28") (term "0,0"))
   (rule "concrete_or_2" (formula "28") (term "0"))
   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
   (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
   (rule "add_zero_left" (formula "28") (term "0,0,0,0"))
   (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
   (rule "add_literals" (formula "28") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "28") (term "1,0,0"))
   (rule "add_literals" (formula "28") (term "0,0"))
   (rule "leq_literals" (formula "28") (term "0"))
   (rule "concrete_or_2" (formula "28"))
   (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
   (rule "times_zero_1" (formula "17") (term "0,0"))
   (rule "add_zero_left" (formula "17") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "17"))
   (rule "mul_literals" (formula "17") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
   (rule "leq_literals" (formula "17") (term "0"))
   (rule "concrete_or_1" (formula "17"))
   (rule "true_left" (formula "17"))
   (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
   (rule "times_zero_1" (formula "22") (term "0,0"))
   (rule "add_zero_left" (formula "22") (term "0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "22"))
   (rule "mul_literals" (formula "22") (term "1"))
   (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "15"))
   (rule "mul_literals" (formula "22") (term "1,1,0"))
   (rule "greater_literals" (formula "22") (term "0,0"))
   (rule "concrete_and_1" (formula "22") (term "0"))
   (rule "leq_literals" (formula "22") (term "0"))
   (rule "concrete_or_1" (formula "22"))
   (rule "true_left" (formula "22"))
   (rule "nnf_imp2or" (formula "12") (term "1,0"))
   (rule "nnf_imp2or" (formula "16") (term "1,0,1,0"))
   (rule "nnf_imp2or" (formula "32") (term "1,0"))
   (rule "double_not" (formula "32") (term "0,1,0"))
   (rule "expand_addJint" (formula "29") (term "0"))
   (rule "polySimp_addComm0" (formula "29") (term "0,0"))
   (rule "nnf_imp2or" (formula "11") (term "0"))
   (rule "compound_less_than_comparison_2" (formula "38") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
   (rule "variableDeclarationAssign" (formula "38") (term "1"))
   (rule "variableDeclaration" (formula "38") (term "1") (newnames "x"))
   (rule "assignment" (formula "38") (term "1"))
   (rule "sequentialToParallel2" (formula "38"))
   (rule "simplifyUpdate2" (formula "38"))
   (rule "simplifyUpdate3" (formula "38") (term "1,0"))
   (rule "applyOnElementary" (formula "38") (term "1,0"))
   (rule "applyOnPV" (formula "38") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "38") (term "1"))
   (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_1"))
   (rule "assignment_read_length" (formula "38"))
   (branch "Normal Execution (tab != null)"
      (rule "sequentialToParallel2" (formula "38"))
      (rule "simplifyUpdate2" (formula "38"))
      (rule "simplifyUpdate3" (formula "38") (term "1,0"))
      (rule "applyOnElementary" (formula "38") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "38") (term "0,1,0"))
      (rule "applyOnPV" (formula "38") (term "0,0,1,0"))
      (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "24"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "expand_moduloInteger" (formula "29") (term "0"))
      (rule "replace_int_RANGE" (formula "29") (term "1,1,0"))
      (rule "replace_int_HALFRANGE" (formula "29") (term "0,0,1,0"))
      (rule "replace_int_MIN" (formula "29") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,1,0"))
      (rule "add_literals" (formula "29") (term "0,0,1,0"))
      (rule "inEqSimp_homoInEq1" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0"))
      (rule "mod_axiom" (formula "29") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "0,1,0"))
      (rule "mul_literals" (formula "29") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1"))
      (rule "polySimp_rightDist" (formula "29") (term "1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
      (rule "polySimp_rightDist" (formula "29") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1"))
      (rule "mul_literals" (formula "29") (term "0,0,1"))
      (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcdRightDiv=add(add(Z(1(#)), mul(l_1, Z(neglit(1(#))))), l_0)") (inst "elimGcdLeftDiv=mul(div(add(Z(9(4(6(3(8(4(7(4(1(2(#))))))))))),
            mul(l_0, Z(2(#)))),
        Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))),
    Z(8(4(6(3(8(4(7(4(1(2(#))))))))))))") (inst "elimGcd=Z(2(#))"))
      (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "29") (term "0,0"))
      (rule "concrete_or_2" (formula "29") (term "0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0"))
      (rule "add_zero_right" (formula "29") (term "0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0"))
      (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0"))
      (rule "add_zero_right" (formula "29") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
      (rule "add_literals" (formula "29") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "29") (term "1,0,0"))
      (rule "add_literals" (formula "29") (term "0,0"))
      (rule "qeq_literals" (formula "29") (term "0"))
      (rule "concrete_or_2" (formula "29"))
      (rule "polyDiv_pullOut" (formula "29") (term "0,0") (inst "polyDivCoeff=Z(1(#))"))
      (rule "mul_literals" (formula "29") (term "0,1,0,0,2,0,0"))
      (rule "equal_literals" (formula "29") (term "0,0,0"))
      (rule "ifthenelse_false" (formula "29") (term "0,0"))
      (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "29") (term "0"))
      (rule "polySimp_addComm0" (formula "29") (term "1,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,1,1,0"))
      (rule "add_literals" (formula "29") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "0"))
      (rule "mul_literals" (formula "29") (term "0,0"))
      (rule "inEqSimp_homoInEq0" (formula "29"))
      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
      (rule "mul_literals" (formula "29") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0"))
      (rule "polySimp_addAssoc" (formula "29") (term "0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0"))
      (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
      (rule "add_literals" (formula "29") (term "0,0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "29"))
      (rule "polySimp_mulLiterals" (formula "29") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "16") (term "0"))
      (rule "nnf_imp2or" (formula "32") (term "0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "mul_literals" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "11") (term "1,0"))
      (rule "nnf_imp2or" (formula "10") (term "1,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
      (rule "mul_literals" (formula "16") (term "1,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "32") (term "0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0,1,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,1,0"))
      (rule "double_not" (formula "11") (term "0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,1,0"))
      (rule "double_not" (formula "10") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,0"))
      (rule "nnf_imp2or" (formula "11") (term "0,1,1,0"))
      (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "32") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0"))
      (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "32") (term "0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,1,0,1,0"))
      (rule "double_not" (formula "16") (term "0,0,1,0,1,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
      (rule "jdiv_axiom" (formula "13") (term "0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,1"))
      (rule "eqSymm" (formula "13"))
      (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "14"))
      (rule "inEqSimp_subsumption6" (formula "13") (term "0,0") (ifseqformula "16"))
      (rule "mul_literals" (formula "13") (term "1,1,0,0,0"))
      (rule "greater_literals" (formula "13") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "13") (term "0,0,0"))
      (rule "leq_literals" (formula "13") (term "0,0,0"))
      (rule "concrete_or_1" (formula "13") (term "0,0"))
      (rule "ifthenelse_true" (formula "13") (term "0"))
      (rule "polyDiv_pullOut" (formula "13") (term "0") (inst "polyDivCoeff=l_0"))
      (rule "equal_literals" (formula "13") (term "0,0"))
      (rule "ifthenelse_false" (formula "13") (term "0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0"))
      (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "1,0,0,0"))
      (rule "times_zero_1" (formula "13") (term "0,0,0"))
      (rule "div_literals" (formula "13") (term "0,0"))
      (rule "add_zero_left" (formula "13") (term "0"))
      (rule "eqClose" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,0,1,1,0"))
      (rule "nnf_notOr" (formula "10") (term "1,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0,1,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,1,1,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,1,1,0"))
      (rule "nnf_notOr" (formula "10") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,1,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,1,1,0"))
      (rule "nnf_notOr" (formula "10") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,0,0,0,1,1,0"))
      (rule "nnf_notOr" (formula "10") (term "1,0,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "0,1,0,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1,0,0,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,1,0,0,0,0,1,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,1,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,1,0,0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "1,1,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,1,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,1,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "1,1,1,0,0,0,0,1,1,0"))
      (rule "commute_or" (formula "32") (term "1,0"))
      (rule "less_than_comparison_simple" (formula "38") (term "1"))
      (rule "sequentialToParallel2" (formula "38"))
      (rule "simplifyUpdate2" (formula "38"))
      (rule "simplifyUpdate3" (formula "38") (term "1,0"))
      (rule "applyOnElementary" (formula "38") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "38") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "38") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "38") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "38") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "38") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "38") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "38") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "38") (term "0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0"))
      (rule "polySimp_mulAssoc" (formula "38") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "0,1,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "38") (term "0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "38") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,0"))
      (rule "elimGcdGeq" (formula "38") (term "0,0,1,0") (inst "elimGcdRightDiv=l_1") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0,1,0"))
      (rule "mul_literals" (formula "38") (term "0,0,0,0,0,1,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0,1,0"))
      (rule "sub_literals" (formula "38") (term "0,0,0,0,0,0,0,0,0,1,0"))
      (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "1,1,0,1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,1,0,0,0,1,0"))
      (rule "add_zero_right" (formula "38") (term "0,1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,0,1,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0"))
      (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0" (formula "38") (term "0,1,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "1,0,1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "38") (term "0,1,0,0,0,1,0"))
      (rule "leq_literals" (formula "38") (term "1,0,0,0,1,0"))
      (rule "concrete_and_3" (formula "38") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,1,0"))
      (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,0"))
      (rule "add_literals" (formula "38") (term "0,0,0,0,1,0"))
      (rule "qeq_literals" (formula "38") (term "0,0,0,1,0"))
      (rule "ifthenelse_true_for" (formula "38") (term "0,0,1,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "jdiv_axiom" (formula "30") (term "0"))
      (rule "eqSymm" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "0,0,2,0"))
      (rule "polySimp_rightDist" (formula "30") (term "0,0,2,0"))
      (rule "mul_literals" (formula "30") (term "0,0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0"))
      (rule "applyEq" (formula "30") (term "1") (ifseqformula "31"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0"))
      (rule "mul_literals" (formula "30") (term "1,0,0"))
      (rule "inEqSimp_subsumption6" (formula "30") (term "0,0") (ifseqformula "28"))
      (rule "mul_literals" (formula "30") (term "1,1,0,0,0"))
      (rule "greater_literals" (formula "30") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "30") (term "0,0,0"))
      (rule "leq_literals" (formula "30") (term "0,0,0"))
      (rule "concrete_or_1" (formula "30") (term "0,0"))
      (rule "ifthenelse_true" (formula "30") (term "0"))
      (rule "polyDiv_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=l_1"))
      (rule "equal_literals" (formula "30") (term "0,0"))
      (rule "ifthenelse_false" (formula "30") (term "0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0"))
      (rule "div_literals" (formula "30") (term "0,0"))
      (rule "eqClose" (formula "30"))
      (rule "true_left" (formula "30"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "shift_paren_or" (formula "16") (term "0,1,0"))
      (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
      (rule "div_axiom" (formula "29") (term "0,0") (inst "quotient=quotient_0"))
      (rule "mul_literals" (formula "29") (term "1,1,1,1,1"))
      (rule "qeq_literals" (formula "29") (term "0,1,1"))
      (rule "ifthenelse_true_for" (formula "29") (term "1,1"))
      (rule "equal_literals" (formula "29") (term "0"))
      (rule "concrete_or_2" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "andLeft" (formula "29"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
      (rule "add_literals" (formula "31") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "31") (term "1"))
      (rule "add_literals" (formula "31") (term "0,1"))
      (rule "inEqSimp_homoInEq0" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "31"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0"))
      (rule "applyEqRigid" (formula "32") (term "0,0") (ifseqformula "29"))
      (rule "inEqSimp_homoInEq0" (formula "32"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
      (rule "polySimp_addComm1" (formula "32") (term "0"))
      (rule "polySimp_addComm1" (formula "32") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "30"))
      (rule "polySimp_mulComm0" (formula "30") (term "1"))
      (rule "polySimp_rightDist" (formula "30") (term "1"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
      (rule "mul_literals" (formula "30") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "31"))
      (rule "polySimp_mulComm0" (formula "31") (term "1"))
      (rule "polySimp_rightDist" (formula "31") (term "1"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
      (rule "mul_literals" (formula "31") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "32"))
      (rule "polySimp_mulComm0" (formula "32") (term "1"))
      (rule "polySimp_rightDist" (formula "32") (term "1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
      (rule "polySimp_elimOne" (formula "32") (term "1,1"))
      (rule "polySimp_rightDist" (formula "32") (term "0,1"))
      (rule "mul_literals" (formula "32") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1"))
      (rule "elimGcdLeq_antec" (formula "31") (inst "elimGcdRightDiv=add(Z(1(7(4(5(2(2(1(2(2(3(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
      (rule "neg_literal" (formula "31") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0"))
      (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "31") (term "0,0"))
      (rule "concrete_or_2" (formula "31") (term "0"))
      (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "31") (term "1,0,0"))
      (rule "add_zero_right" (formula "31") (term "0,0"))
      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
      (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
      (rule "add_literals" (formula "31") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0"))
      (rule "add_literals" (formula "31") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "31") (term "1,0,0"))
      (rule "add_literals" (formula "31") (term "0,0"))
      (rule "qeq_literals" (formula "31") (term "0"))
      (rule "concrete_or_2" (formula "31"))
      (rule "elimGcdGeq_antec" (formula "30") (inst "elimGcdRightDiv=add(Z(4(2(8(1(4(7(3(7(0(1(#))))))))))),
    mul(quotient_0, Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0"))
      (rule "concrete_or_2" (formula "30") (term "0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0"))
      (rule "add_zero_right" (formula "30") (term "0,0"))
      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0"))
      (rule "add_literals" (formula "30") (term "0,0"))
      (rule "leq_literals" (formula "30") (term "0"))
      (rule "concrete_or_2" (formula "30"))
      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
      (rule "mul_literals" (formula "30") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "30") (term "0"))
      (rule "add_literals" (formula "30") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "30"))
      (rule "polySimp_mulLiterals" (formula "30") (term "0"))
      (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
      (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,1,0"))
      (rule "neg_literal" (formula "30") (term "0,0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0"))
      (rule "leq_literals" (formula "30") (term "0,0"))
      (rule "concrete_or_2" (formula "30") (term "0"))
      (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
      (rule "add_zero_left" (formula "30") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
      (rule "add_literals" (formula "30") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "30") (term "1,0,0"))
      (rule "add_literals" (formula "30") (term "0,0"))
      (rule "qeq_literals" (formula "30") (term "0"))
      (rule "concrete_or_2" (formula "30"))
      (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "33") (term "0,0"))
      (rule "polySimp_addComm1" (formula "33") (term "0"))
      (rule "polySimp_rightDist" (formula "33") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
      (rule "mul_literals" (formula "33") (term "0,0,0,0"))
      (rule "polySimp_addComm1" (formula "33") (term "0,0"))
      (rule "add_literals" (formula "33") (term "0,0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "33"))
      (rule "polySimp_mulLiterals" (formula "33") (term "0"))
      (rule "polySimp_elimOne" (formula "33") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "32"))
      (rule "mul_literals" (formula "15") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15"))
      (rule "mul_literals" (formula "15") (term "1"))
      (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(8(4(6(3(8(4(7(4(1(2(#)))))))))))"))
      (rule "leq_literals" (formula "15") (term "0,0"))
      (rule "concrete_or_2" (formula "15") (term "0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
      (rule "polySimp_addLiterals" (formula "15") (term "0,0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0"))
      (rule "leq_literals" (formula "15") (term "0"))
      (rule "concrete_or_2" (formula "15"))
      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
      (rule "polySimp_rightDist" (formula "35") (term "0,0"))
      (rule "polySimp_addComm1" (formula "35") (term "0"))
      (rule "polySimp_rightDist" (formula "35") (term "0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
      (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
      (rule "add_literals" (formula "35") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "35") (term "1,0,0"))
      (rule "add_zero_right" (formula "35") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "35"))
      (rule "polySimp_mulLiterals" (formula "35") (term "0"))
      (rule "polySimp_elimOne" (formula "35") (term "0"))
      (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "31"))
      (rule "applyEqRigid" (formula "35") (term "0,1,1") (ifseqformula "15"))
      (rule "mul_literals" (formula "35") (term "1,1"))
      (rule "add_literals" (formula "35") (term "1"))
      (rule "applyEqRigid" (formula "34") (term "0,1,1") (ifseqformula "15"))
      (rule "mul_literals" (formula "34") (term "1,1"))
      (rule "add_literals" (formula "34") (term "1"))
      (rule "applyEq" (formula "33") (term "0,1,1") (ifseqformula "15"))
      (rule "mul_literals" (formula "33") (term "1,1"))
      (rule "add_literals" (formula "33") (term "1"))
      (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
      (rule "qeq_literals" (formula "16"))
      (rule "true_left" (formula "16"))
      (rule "applyEq" (formula "31") (term "0") (ifseqformula "15"))
      (rule "leq_literals" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "applyEqRigid" (formula "34") (term "0,1,0,1") (ifseqformula "15"))
      (rule "mul_literals" (formula "34") (term "1,0,1"))
      (rule "add_literals" (formula "34") (term "0,1"))
      (rule "applyEq" (formula "30") (term "1") (ifseqformula "15"))
      (rule "inEqSimp_subsumption0" (formula "38") (ifseqformula "33"))
      (rule "leq_literals" (formula "38") (term "0"))
      (rule "concrete_or_1" (formula "38"))
      (rule "true_left" (formula "38"))
      (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "16"))
      (rule "leq_literals" (formula "31") (term "0"))
      (rule "concrete_or_1" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "8"))
      (rule "leq_literals" (formula "31") (term "0"))
      (rule "concrete_or_1" (formula "31"))
      (rule "true_left" (formula "31"))
      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "8"))
      (rule "polySimp_rightDist" (formula "32") (term "0,0"))
      (rule "mul_literals" (formula "32") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "32") (term "0"))
      (rule "add_literals" (formula "32") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
      (rule "polySimp_elimOne" (formula "32") (term "0"))
      (rule "commute_or_2" (formula "35") (term "0"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "methodCallEmpty" (formula "40") (term "1"))
      (rule "commute_or_2" (formula "17") (term "0,0,1,0"))
      (rule "inEqSimp_or_weaken2" (formula "17") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "1,0,1,0,1,0"))
      (rule "add_literals" (formula "17") (term "0,1,0,1,0,1,0"))
      (rule "add_zero_left" (formula "17") (term "1,0,1,0,1,0"))
      (rule "eqClose" (formula "17") (term "0,1,0,1,0"))
      (rule "ifthenelse_true_for" (formula "17") (term "1,0,1,0"))
      (rule "commute_or" (formula "11") (term "0,0,1,1,0"))
      (rule "commute_and" (formula "10") (term "1,0,0,0,0,1,1,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "35") (term "0,0"))
      (rule "commute_or" (formula "35") (term "0,0,0"))
      (rule "commute_or" (formula "17") (term "0,0,1,0"))
      (rule "emptyModality" (formula "40") (term "1"))
      (rule "impRight" (formula "40"))
      (rule "simplifyUpdate2" (formula "41"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "36"))
      (rule "applyOnPV" (formula "36") (term "0"))
      (rule "simplifyUpdate1" (formula "36") (term "1"))
      (rule "ifthenelse_concrete3" (formula "36"))
      (rule "boolean_not_equal_2" (formula "36") (term "1"))
      (rule "concrete_or_4" (formula "36"))
      (rule "inEqSimp_geqRight" (formula "36"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "1"))
      (rule "applyEq" (formula "17") (term "0") (ifseqformula "33"))
      (rule "inEqSimp_homoInEq1" (formula "17"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0"))
      (rule "add_literals" (formula "17") (term "0,0"))
      (rule "applyEqRigid" (formula "18") (term "1,1,0,0") (ifseqformula "33"))
      (rule "applyEqRigid" (formula "11") (term "1,1,1,0,0,0,0,1,1,0") (ifseqformula "33"))
      (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "33"))
      (rule "applyEqRigid" (formula "25") (term "0,1,1") (ifseqformula "33"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
      (rule "polySimp_rightDist" (formula "25") (term "1,1"))
      (rule "mul_literals" (formula "25") (term "0,1,1"))
      (rule "polySimp_addAssoc" (formula "25") (term "1"))
      (rule "add_literals" (formula "25") (term "0,1"))
      (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
      (rule "inEqSimp_homoInEq1" (formula "34"))
      (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
      (rule "add_literals" (formula "34") (term "1,0"))
      (rule "times_zero_1" (formula "34") (term "0"))
      (rule "leq_literals" (formula "34"))
      (rule "true_left" (formula "34"))
      (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "33"))
      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
      (rule "add_literals" (formula "31") (term "0,0,0"))
      (rule "applyEq" (formula "11") (term "1,0,1,0,0,0,1,1,0") (ifseqformula "33"))
      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "33"))
      (rule "polySimp_addAssoc" (formula "20") (term "1"))
      (rule "add_literals" (formula "20") (term "0,1"))
      (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "33"))
      (rule "applyEqRigid" (formula "14") (term "0,0,0") (ifseqformula "33"))
      (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
      (rule "mul_literals" (formula "14") (term "0,0,0"))
      (rule "applyEq" (formula "12") (term "0,1,0,1,1,1,0,1,1,0") (ifseqformula "33"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,1,1,1,0,1,1,0"))
      (rule "applyEq" (formula "11") (term "0,1,0,1,0,1,0") (ifseqformula "33"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1,0"))
      (rule "applyEq" (formula "18") (term "1,1,0,0,1,0") (ifseqformula "33"))
      (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "33"))
      (rule "bsum_induction_upper2_concrete" (formula "10") (term "0"))
      (rule "polySimp_elimSub" (formula "10") (term "0"))
      (rule "polySimp_elimSub" (formula "10") (term "0,0,2,0,0,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,2,0,0,1,0,1,0"))
      (rule "polySimp_homoEq" (formula "10"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,2,0,0,1,0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "1,0,2,0,0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,2,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,2,0,0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "33"))
      (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "33"))
      (rule "inEqSimp_homoInEq0" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "0,0"))
      (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
      (rule "inEqSimp_homoInEq0" (formula "1"))
      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "0"))
      (rule "qeq_literals" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "applyEq" (formula "11") (term "0,1,0,1,0,1,0") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,1,0"))
      (rule "applyEq" (formula "10") (term "0,1,1,1,1,1,0,0,1,1,0") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,1,1,1,0,0,1,1,0"))
      (rule "applyEq" (formula "10") (term "0,1,1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,1,1,0,0,0,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,1,0,0,0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,1,1,0,0,0,0,0,1,1,0"))
      (rule "applyEq" (formula "14") (term "0,1") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "14") (term "1"))
      (rule "polySimp_rightDist" (formula "14") (term "1"))
      (rule "mul_literals" (formula "14") (term "0,1"))
      (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "32"))
      (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "32"))
      (rule "polySimp_mulComm0" (formula "25") (term "1"))
      (rule "polySimp_rightDist" (formula "25") (term "1"))
      (rule "mul_literals" (formula "25") (term "0,1"))
      (rule "polySimp_sepNegMonomial" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
      (rule "polySimp_elimOne" (formula "16") (term "0"))
      (rule "inEqSimp_sepNegMonomial1" (formula "8"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
      (rule "polySimp_elimOne" (formula "8") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "0,0,1,1"))
      (rule "polySimp_elimOne" (formula "8") (term "0,0,1,1"))
      (rule "replace_known_left" (formula "8") (term "0,1,1") (ifseqformula "28"))
      (rule "ifthenelse_true" (formula "8") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "15"))
      (rule "leq_literals" (formula "28") (term "0"))
      (rule "concrete_or_1" (formula "28"))
      (rule "true_left" (formula "28"))
      (rule "polyDiv_pullOut" (formula "28") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
      (rule "mul_literals" (formula "28") (term "0,1,0,0,2,0"))
      (rule "equal_literals" (formula "28") (term "0,0"))
      (rule "ifthenelse_false" (formula "28") (term "0"))
      (rule "mul_literals" (formula "28") (term "1,0,0,0"))
      (rule "polySimp_homoEq" (formula "28"))
      (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
      (rule "polySimp_addComm1" (formula "28") (term "0,0,1,1,0"))
      (rule "add_literals" (formula "28") (term "0,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "28") (term "1,0"))
      (rule "mul_literals" (formula "28") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "28") (term "0"))
      (rule "add_literals" (formula "28") (term "0,0"))
      (rule "add_zero_left" (formula "28") (term "0"))
      (rule "polySimp_invertEq" (formula "28"))
      (rule "mul_literals" (formula "28") (term "1"))
      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
      (rule "polySimp_elimOne" (formula "28") (term "0"))
      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "18"))
      (rule "times_zero_1" (formula "17") (term "0,0"))
      (rule "add_zero_left" (formula "17") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17"))
      (rule "mul_literals" (formula "17") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
      (rule "leq_literals" (formula "17") (term "0"))
      (rule "concrete_or_1" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "23"))
      (rule "mul_literals" (formula "22") (term "0,0"))
      (rule "add_zero_left" (formula "22") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
      (rule "mul_literals" (formula "22") (term "1"))
      (rule "inEqSimp_subsumption6" (formula "22") (ifseqformula "15"))
      (rule "mul_literals" (formula "22") (term "1,1,0"))
      (rule "greater_literals" (formula "22") (term "0,0"))
      (rule "concrete_and_1" (formula "22") (term "0"))
      (rule "leq_literals" (formula "22") (term "0"))
      (rule "concrete_or_1" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "methodCallReturn" (formula "38") (term "1"))
      (rule "assignment" (formula "38") (term "1"))
      (rule "simplifyUpdate2" (formula "38") (term "1"))
      (rule "all_pull_out3" (formula "16") (term "0"))
      (rule "shift_paren_or" (formula "16") (term "0,0"))
      (rule "shift_paren_or" (formula "16") (term "0,0,0"))
      (rule "commute_or_2" (formula "16") (term "0,0,0,0"))
      (rule "commute_or" (formula "16") (term "0,0,0,0,0"))
      (rule "jdiv_axiom" (formula "12") (term "0"))
      (rule "eqSymm" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "0,0,2,0"))
      (rule "polySimp_rightDist" (formula "12") (term "0,0,2,0"))
      (rule "mul_literals" (formula "12") (term "0,0,0,2,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,2,0"))
      (rule "applyEq" (formula "12") (term "1") (ifseqformula "13"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0"))
      (rule "inEqSimp_subsumption6" (formula "12") (term "0,0") (ifseqformula "16"))
      (rule "mul_literals" (formula "12") (term "1,1,0,0,0"))
      (rule "greater_literals" (formula "12") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "12") (term "0,0,0"))
      (rule "leq_literals" (formula "12") (term "0,0,0"))
      (rule "concrete_or_1" (formula "12") (term "0,0"))
      (rule "ifthenelse_true" (formula "12") (term "0"))
      (rule "polyDiv_pullOut" (formula "12") (term "0") (inst "polyDivCoeff=l_1"))
      (rule "equal_literals" (formula "12") (term "0,0"))
      (rule "ifthenelse_false" (formula "12") (term "0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_homoEq" (formula "12"))
      (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0,0,1,0"))
      (rule "add_literals" (formula "12") (term "1,1,0,0,0,1,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,1,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
      (rule "div_literals" (formula "12") (term "0,0,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
      (rule "add_literals" (formula "12") (term "1,0"))
      (rule "times_zero_1" (formula "12") (term "0"))
      (rule "eqClose" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "cnf_rightDist" (formula "9") (term "0,0,0,0,1,1,0"))
      (rule "methodCallEmpty" (formula "38") (term "1"))
      (rule "all_pull_out3" (formula "10") (term "1,0"))
      (rule "shift_paren_or" (formula "10") (term "0,1,0"))
      (rule "shift_paren_or" (formula "10") (term "0,0,1,0"))
      (rule "commute_or_2" (formula "10") (term "0,0,0,1,0"))
      (rule "tryEmpty" (formula "38") (term "1"))
      (rule "emptyModality" (formula "38") (term "1"))
      (rule "applyOnRigidFormula" (formula "38"))
      (rule "applyOnRigidFormula" (formula "38") (term "1"))
      (rule "applyOnRigidFormula" (formula "38") (term "0"))
      (rule "simplifyUpdate2" (formula "38") (term "1,0"))
      (rule "replace_known_left" (formula "38") (term "1,0") (ifseqformula "26"))
      (rule "concrete_impl_4" (formula "38") (term "0"))
      (rule "concrete_and_1" (formula "38"))
      (rule "impRight" (formula "38"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "39"))
      (rule "simplifyUpdate2" (formula "39") (term "0"))
      (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "26"))
      (rule "concrete_and_1" (formula "39"))
      (rule "orRight" (formula "39"))
      (rule "applyOnRigidFormula" (formula "34"))
      (rule "applyOnPV" (formula "34") (term "0"))
      (rule "simplifyUpdate1" (formula "34") (term "1"))
      (rule "eqClose" (formula "34"))
      (rule "closeTrue" (formula "34"))
   )
   (branch "Null Reference (tab = null)"
      (rule "false_right" (formula "39"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "close" (formula "35") (ifseqformula "1"))
   )
)
)
}
