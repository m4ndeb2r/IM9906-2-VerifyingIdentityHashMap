\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Nov 11 18:11:39 CET 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../jre";

\javaSource "../../../src";

\include "../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Thu Nov 11 18:11:39 CET 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:resize(int)].JML exceptional_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:resize(int)].JML exceptional_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "cdego" ) (keyVersion "40b2d39292"))

(autoModeTime "10003")

(branch "dummy ID"
(rule "instanceof_static_type" (formula "1") (term "0,0,0,1,0,0,1,1") (newnames "newCapacity,self,result,exc,heapAtPre,o,f"))
(rule "boolean_equal" (formula "1") (term "0,0,1,0,0,1,1"))
(rule "insert_constant_value" (formula "1") (term "0,1,1,0,1,0"))
(rule "insert_constant_value" (formula "1") (term "1,1,0,0,1,0"))
(rule "concrete_impl_1" (formula "1") (term "0,1,0,0,1,1"))
(rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "translateJavaSubInt" (formula "7") (term "1"))
(rule "assignment" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_resize,savedHeapBefore_resize,_newCapacityBefore_resize"))
(rule "simplifyUpdate2" (formula "10") (term "1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "newLength"))
(rule "assignmentMultiplicationInt" (formula "10") (term "1"))
(rule "translateJavaMulInt" (formula "10") (term "0,0,1"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "applyOnElementary" (formula "10") (term "1,0"))
(rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
(rule "applyOnPV" (formula "10") (term "0,0,1,0"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "oldTable"))
(rule "assignment_read_attribute_this" (formula "10"))
(rule "sequentialToParallel2" (formula "10"))
(rule "simplifyUpdate3" (formula "10") (term "1,0"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "oldLength"))
(rule "assignment_read_length" (formula "10"))
(branch "Normal Execution (oldTable != null)"
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "applyOnElementary" (formula "10") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
   (rule "applyOnPV" (formula "10") (term "0,0,1,0"))
   (rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
   (rule "compound_equality_comparison_2" (formula "10") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
   (rule "assignment" (formula "10") (term "1"))
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "applyOnElementary" (formula "10") (term "1,0"))
   (rule "applyOnPV" (formula "10") (term "0,1,0"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_2"))
   (rule "assignmentMultiplicationInt" (formula "10") (term "1"))
   (rule "insert_constant_value" (formula "10") (term "1,0,0,1"))
   (rule "translateJavaMulInt" (formula "10") (term "0,0,1"))
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "equality_comparison_simple" (formula "10") (term "1"))
   (rule "eqSymm" (formula "10") (term "0,0,0,1"))
   (rule "sequentialToParallel2" (formula "10"))
   (rule "simplifyUpdate2" (formula "10"))
   (rule "simplifyUpdate3" (formula "10") (term "1,0"))
   (rule "applyOnElementary" (formula "10") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "10") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "10") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
   (rule "applyOnRigidFormula" (formula "10") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "10") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "10") (term "1,0,0,1,0"))
   (rule "applyOnPV" (formula "10") (term "0,0,0,1,0"))
   (rule "applyOnPV" (formula "10") (term "1,0,0,1,0"))
   (rule "eqSymm" (formula "10") (term "0,0,1,0"))
   (rule "arrayLengthNotNegative" (formula "6") (term "0"))
   (rule "arrayLengthIsAShort" (formula "7") (term "0"))
   (rule "ifSplit" (formula "12"))
   (branch "if x true"
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete3" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
      (rule "compound_equality_comparison_2" (formula "13") (term "1") (inst "#v1=x_5") (inst "#v0=x_4"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_4"))
      (rule "assignment_read_attribute_this" (formula "13"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_5"))
      (rule "assignmentSubtractionInt" (formula "13") (term "1"))
      (rule "insert_constant_value" (formula "13") (term "0,0,0,1"))
      (rule "translateJavaSubInt" (formula "13") (term "0,0,1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "equality_comparison_simple" (formula "13") (term "1"))
      (rule "eqSymm" (formula "13") (term "0,0,0,1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "applyOnElementary" (formula "13") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "13") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "13") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "13") (term "0,0,0,1,0"))
      (rule "eqSymm" (formula "13") (term "0,0,1,0"))
      (rule "replace_known_left" (formula "13") (term "0,0,1,0") (ifseqformula "10"))
      (rule "ifthenelse_true" (formula "13") (term "0,1,0"))
      (rule "ifSplit" (formula "13"))
      (branch "if x_3 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "boolean_equal" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockThrow" (formula "13") (term "1"))
         (rule "throwUnfold" (formula "13") (term "1") (inst "#v0=i_1"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "i_1"))
         (rule "instanceCreationAssignmentUnfoldArguments" (formula "13") (term "1"))
         (rule "variableDeclarationAssign" (formula "13") (term "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "var"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "2"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "12"))
         (rule "notLeft" (formula "12"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
         (rule "concrete_or_2" (formula "1"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "13"))
         (rule "insert_constant_value" (formula "13") (term "0,0,1"))
         (rule "insert_constant_value" (formula "13") (term "0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1"))
         (rule "mul_literals" (formula "13") (term "0,1,0"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
         (rule "concrete_or_2" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "13"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "15") (inst "i=i"))
         (rule "polySimp_addComm0" (formula "15") (term "0,2,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "commute_and" (formula "15") (term "0,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "16") (inst "i=i") (inst "j=j"))
         (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
         (rule "eqSymm" (formula "16") (term "1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,2,0,0,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "0,2,0,1,0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "commute_and" (formula "16") (term "0,0"))
         (rule "commute_and" (formula "16") (term "0,0,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "17") (inst "i=i"))
         (rule "eqSymm" (formula "17"))
         (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,0,0,2,0"))
         (rule "ifthenelse_negated" (formula "17") (term "2,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i"))
         (rule "exLeft" (formula "18") (inst "sk=i_0"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "eqSymm" (formula "20"))
         (rule "inEqSimp_commuteLeq" (formula "18"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "21"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "22") (inst "i=i"))
         (rule "exLeft" (formula "22") (inst "sk=i_2"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "polySimp_mulComm0" (formula "24") (term "0,2,0"))
         (rule "inEqSimp_commuteLeq" (formula "22"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "3"))
         (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
         (rule "concrete_or_1" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "25") (inst "i=i") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,1,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,1,0"))
         (rule "commute_and" (formula "25") (term "0,0"))
         (rule "commute_and" (formula "25") (term "1,0,0,1,1,0"))
         (rule "commute_and" (formula "25") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "25") (term "0,0,1,1,0"))
         (rule "commute_or" (formula "25") (term "0,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "25") (term "1,0,0,1,1,0"))
         (rule "commute_or" (formula "25") (term "0,1,0,0,1,1,0"))
         (rule "commute_or" (formula "25") (term "1,1,0,0,1,1,0"))
         (rule "cnf_rightDist" (formula "25") (term "0,0,0,1,1,0"))
         (rule "commute_or" (formula "25") (term "1,0,0,0,1,1,0"))
         (rule "commute_or" (formula "25") (term "0,0,0,0,1,1,0"))
         (rule "shift_paren_and" (formula "25") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "25") (term "0,0,1,1,0"))
         (rule "commute_and_2" (formula "25") (term "0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "25") (term "0,0,1,1,0"))
         (rule "commute_and" (formula "25") (term "0,0,0,0,1,1,0"))
         (rule "commute_and_2" (formula "25") (term "0,0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "26") (inst "i=i") (inst "j=j"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0"))
         (rule "commute_and" (formula "26") (term "0,0"))
         (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "27"))
         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "28"))
         (rule "expand_inInt" (formula "28"))
         (rule "expand_inInt" (formula "6"))
         (rule "expand_inShort" (formula "9"))
         (rule "replace_int_MIN" (formula "28") (term "0,1"))
         (rule "replace_int_MAX" (formula "28") (term "1,0"))
         (rule "replace_int_MAX" (formula "6") (term "1,0"))
         (rule "replace_int_MIN" (formula "6") (term "0,1"))
         (rule "replace_short_MIN" (formula "9") (term "0,1"))
         (rule "replace_short_MAX" (formula "9") (term "1,0"))
         (rule "andLeft" (formula "28"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "27") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "21"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "27") (term "1,0,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_gtToGeq" (formula "28") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
         (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "27") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "0,1,0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "25"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "25") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "31"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
         (rule "qeq_literals" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "2"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
         (rule "leq_literals" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
      (branch "if x_3 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "12"))
         (rule "applyOnPV" (formula "12") (term "0"))
         (rule "simplifyUpdate1" (formula "12") (term "1"))
         (rule "boolean_equal" (formula "12"))
         (rule "closeTrue" (formula "12"))
      )
   )
   (branch "if x false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "simplifyUpdate1" (formula "11") (term "1"))
      (rule "applyOnPV" (formula "11") (term "0"))
      (rule "ifthenelse_concrete3" (formula "11"))
      (rule "boolean_not_equal_2" (formula "11") (term "1"))
      (rule "concrete_or_4" (formula "11"))
      (rule "ifUnfold" (formula "13") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_3"))
      (rule "greater_equal_than_comparison_simple" (formula "13") (term "1"))
      (rule "sequentialToParallel2" (formula "13"))
      (rule "simplifyUpdate3" (formula "13") (term "1,0"))
      (rule "applyOnElementary" (formula "13") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "13") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "13") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "13") (term "0,0,0,1,0"))
      (rule "ifSplit" (formula "13"))
      (branch "if x_3 true"
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "ifthenelse_concrete3" (formula "1"))
         (rule "boolean_not_equal_2" (formula "1") (term "1"))
         (rule "concrete_or_4" (formula "1"))
         (rule "methodCallReturn" (formula "14") (term "1"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "simplifyUpdate2" (formula "14") (term "1"))
         (rule "methodCallEmpty" (formula "14") (term "1"))
         (rule "tryEmpty" (formula "14") (term "1"))
         (rule "emptyModality" (formula "14") (term "1"))
         (rule "expand_inInt" (formula "5"))
         (rule "expand_inShort" (formula "8"))
         (rule "replace_int_MAX" (formula "5") (term "1,0"))
         (rule "replace_int_MIN" (formula "5") (term "0,1"))
         (rule "replace_short_MAX" (formula "8") (term "1,0"))
         (rule "replace_short_MIN" (formula "8") (term "0,1"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "9"))
         (rule "applyOnRigidFormula" (formula "16"))
         (rule "simplifyUpdate2" (formula "16") (term "1"))
         (rule "simplifyUpdate2" (formula "16") (term "0"))
         (rule "applyOnRigidFormula" (formula "16") (term "1"))
         (rule "applyOnRigidFormula" (formula "16") (term "0"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,1"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
         (rule "applyOnRigidFormula" (formula "16") (term "1,0"))
         (rule "simplifyUpdate2" (formula "16") (term "0,1,0"))
         (rule "replace_known_left" (formula "16") (term "0,1,0") (ifseqformula "13"))
         (rule "concrete_and_1" (formula "16") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,0,1"))
         (rule "applyOnRigidFormula" (formula "16") (term "0,0,0"))
         (rule "applyOnPV" (formula "16") (term "0,0,0,0"))
         (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0"))
         (rule "eqClose" (formula "16") (term "0,0,0"))
         (rule "concrete_not_1" (formula "16") (term "0,0"))
         (rule "concrete_and_2" (formula "16") (term "0"))
         (rule "concrete_and_2" (formula "16"))
         (rule "false_right" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "6"))
         (rule "inEqSimp_commuteLeq" (formula "10"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
         (rule "qeq_literals" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
         (rule "inEqSimp_commuteGeq" (formula "1"))
         (rule "applyEq" (formula "13") (term "0") (ifseqformula "10"))
         (rule "eqSymm" (formula "13"))
         (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
         (rule "qeq_literals" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
         (rule "leq_literals" (formula "8"))
         (rule "closeFalse" (formula "8"))
      )
      (branch "if x_3 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "11"))
         (rule "applyOnPV" (formula "11") (term "0"))
         (rule "simplifyUpdate1" (formula "11") (term "1"))
         (rule "ifthenelse_concrete3" (formula "11"))
         (rule "boolean_not_equal_2" (formula "11") (term "1"))
         (rule "concrete_or_4" (formula "11"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "newTable"))
         (rule "arrayCreation" (formula "14") (term "1") (inst "#v0=o_arr"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "o_arr"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "dim0"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0"))
         (rule "ifUnfold" (formula "14") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_4"))
         (rule "less_than_comparison_simple" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
         (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "1"))
         (rule "ifSplit" (formula "15"))
         (branch "if x_4 true"
            (rule "simplifyUpdate2" (formula "1"))
            (rule "simplifyUpdate2" (formula "16"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "ifthenelse_concrete3" (formula "1"))
            (rule "boolean_not_equal_2" (formula "1") (term "1"))
            (rule "concrete_or_4" (formula "1"))
            (rule "blockThrow" (formula "16") (term "1"))
            (rule "simplifyUpdate2" (formula "16"))
            (rule "throwUnfold" (formula "16") (term "1") (inst "#v0=n"))
            (rule "variableDeclarationAssign" (formula "16") (term "1"))
            (rule "variableDeclaration" (formula "16") (term "1") (newnames "n"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "12"))
            (rule "notLeft" (formula "12"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "2"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
            (rule "concrete_or_2" (formula "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "13"))
            (rule "insert_constant_value" (formula "13") (term "0,0,1"))
            (rule "insert_constant_value" (formula "13") (term "0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "mul_literals" (formula "13") (term "0,1,0"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
            (rule "concrete_or_2" (formula "10"))
            (rule "inEqSimp_commuteGeq" (formula "14"))
            (rule "inEqSimp_commuteLeq" (formula "13"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "15") (inst "i=i"))
            (rule "polySimp_addComm0" (formula "15") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "commute_and" (formula "15") (term "0,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "16") (inst "i=i") (inst "j=j"))
            (rule "eqSymm" (formula "16") (term "1,1,0,1,0"))
            (rule "eqSymm" (formula "16") (term "1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,2,0,0,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,2,1,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,2,0,1,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
            (rule "commute_and" (formula "16") (term "0,0"))
            (rule "commute_and" (formula "16") (term "0,0,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "17") (inst "i=i"))
            (rule "eqSymm" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,0,0,2,0"))
            (rule "ifthenelse_negated" (formula "17") (term "2,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i"))
            (rule "exLeft" (formula "18") (inst "sk=i_0"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "18"))
            (rule "eqSymm" (formula "20"))
            (rule "inEqSimp_commuteLeq" (formula "18"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "21"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "22") (inst "i=i"))
            (rule "exLeft" (formula "22") (inst "sk=i_1"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "polySimp_mulComm0" (formula "24") (term "0,2,0"))
            (rule "inEqSimp_commuteLeq" (formula "22"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "3"))
            (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "25"))
            (rule "concrete_or_1" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "25") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0,1,1,0"))
            (rule "commute_and" (formula "25") (term "0,0"))
            (rule "commute_and" (formula "25") (term "1,0,0,1,1,0"))
            (rule "commute_and" (formula "25") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "25") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "25") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "25") (term "1,0,0,1,1,0"))
            (rule "commute_or" (formula "25") (term "0,1,0,0,1,1,0"))
            (rule "commute_or" (formula "25") (term "1,1,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "25") (term "0,0,0,1,1,0"))
            (rule "commute_or" (formula "25") (term "0,0,0,0,1,1,0"))
            (rule "commute_or" (formula "25") (term "1,0,0,0,1,1,0"))
            (rule "shift_paren_and" (formula "25") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "25") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "25") (term "0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "25") (term "0,0,1,1,0"))
            (rule "commute_and" (formula "25") (term "0,0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "25") (term "0,0,0,1,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "26") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,1,0"))
            (rule "commute_and" (formula "26") (term "0,0"))
            (rule "commute_and" (formula "26") (term "0,0,1,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "27"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "28"))
            (rule "expand_inInt" (formula "28"))
            (rule "expand_inInt" (formula "6"))
            (rule "expand_inShort" (formula "9"))
            (rule "replace_int_MIN" (formula "28") (term "0,1"))
            (rule "replace_int_MAX" (formula "28") (term "1,0"))
            (rule "replace_int_MAX" (formula "6") (term "1,0"))
            (rule "replace_int_MIN" (formula "6") (term "0,1"))
            (rule "replace_short_MAX" (formula "9") (term "1,0"))
            (rule "replace_short_MIN" (formula "9") (term "0,1"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "10"))
            (rule "inEqSimp_geqRight" (formula "35"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "29") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "28") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "times_zero_1" (formula "3") (term "1,0,0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "22"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "22") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "32"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "applyEq" (formula "29") (term "1,0,1,0,1,0,1,0") (ifseqformula "14"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
            (rule "qeq_literals" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "27") (term "1,0,1,0,1,0,1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
            (rule "applyEq" (formula "22") (term "0") (ifseqformula "13"))
            (rule "eqSymm" (formula "22"))
            (rule "applyEq" (formula "35") (term "0") (ifseqformula "13"))
            (rule "eqSymm" (formula "35"))
            (rule "applyEq" (formula "27") (term "1,1,1,0,0,0,0,0,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "13"))
            (rule "jdiv_axiom_inline" (formula "19") (term "1,0"))
            (rule "qeq_literals" (formula "19") (term "0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0"))
            (rule "div_literals" (formula "19") (term "1,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0"))
            (rule "polySimp_homoEq" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "19") (term "0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "19") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "19") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "19") (term "1,0,1,0"))
            (rule "mul_literals" (formula "19") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
            (rule "polySimp_addComm0" (formula "19") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
            (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
            (rule "qeq_literals" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEq" (formula "26") (term "1,1,1,1,0,0,1,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "15") (term "0") (ifseqformula "13"))
            (rule "leq_literals" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
            (rule "qeq_literals" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "applyEq" (formula "25") (term "1,0,1,1,0,0,1,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0,0,0,0,1,1,0") (ifseqformula "12"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,1,1,0"))
            (rule "applyEq" (formula "24") (term "0,0,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "jdiv_axiom_inline" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "div_literals" (formula "24") (term "1,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "0,0,2,0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
            (rule "ifthenelse_true" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
            (rule "applyEq" (formula "25") (term "0,0,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "jdiv_axiom_inline" (formula "25") (term "0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
            (rule "ifthenelse_true" (formula "25") (term "0,1,0,0,0,0,0"))
            (rule "div_literals" (formula "25") (term "0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
            (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0,0,0,1,1,0") (ifseqformula "12"))
            (rule "mul_literals" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
            (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "jdiv_axiom_inline" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "15") (term "0,0,1,0,0,0,0,0"))
            (rule "ifthenelse_true" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "div_literals" (formula "15") (term "0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
            (rule "applyEq" (formula "15") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "12"))
            (rule "jdiv_axiom_inline" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
            (rule "div_literals" (formula "15") (term "1,0,1,0,0,0,0,0,1,0"))
            (rule "qeq_literals" (formula "15") (term "0,0,1,0,0,0,0,0,1,0"))
            (rule "ifthenelse_true" (formula "15") (term "0,1,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,1,0"))
            (rule "applyEq" (formula "14") (term "0,0,1,0,0,0,0,0") (ifseqformula "12"))
            (rule "jdiv_axiom_inline" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "qeq_literals" (formula "14") (term "0,0,1,0,0,0,0,0"))
            (rule "ifthenelse_true" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "div_literals" (formula "14") (term "0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "jmod_axiom" (formula "20") (term "0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
            (rule "jdiv_axiom_inline" (formula "20") (term "0,1,0"))
            (rule "div_literals" (formula "20") (term "1,0,1,0"))
            (rule "qeq_literals" (formula "20") (term "0,0,1,0"))
            (rule "ifthenelse_true" (formula "20") (term "0,1,0"))
            (rule "mul_literals" (formula "20") (term "1,0"))
            (rule "add_literals" (formula "20") (term "0"))
            (rule "eqClose" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "bsum_induction_upper_concrete_2" (formula "16") (term "0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,0,1,0"))
            (rule "sub_literals" (formula "16") (term "0,0,2,0,0,1,1,0,1,0"))
            (rule "sub_literals" (formula "16") (term "1,0,1,0,1,0"))
            (rule "mul_literals" (formula "16") (term "0,2,0,0,1,1,0,1,0"))
            (rule "leq_literals" (formula "16") (term "0,1,0,1,0"))
            (rule "ifthenelse_true" (formula "16") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_addComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
            (rule "applyEqRigid" (formula "18") (term "0,1,0") (ifseqformula "19"))
            (rule "mul_literals" (formula "18") (term "1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0"))
            (rule "add_literals" (formula "18") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "applyEq" (formula "23") (term "1,0,1,0,1,0,1,0") (ifseqformula "19"))
            (rule "applyEqRigid" (formula "21") (term "0,0,1,0") (ifseqformula "19"))
            (rule "jdiv_axiom_inline" (formula "21") (term "0,1,0"))
            (rule "div_literals" (formula "21") (term "1,0,1,0"))
            (rule "mul_literals" (formula "21") (term "0,0,2,0,1,0"))
            (rule "qeq_literals" (formula "21") (term "0,0,1,0"))
            (rule "ifthenelse_true" (formula "21") (term "0,1,0"))
            (rule "mul_literals" (formula "21") (term "1,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0"))
            (rule "add_literals" (formula "21") (term "0,0"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "19"))
            (rule "leq_literals" (formula "10"))
            (rule "closeFalse" (formula "10"))
         )
         (branch "if x_4 false"
            (rule "false_to_not_true" (formula "1") (term "1"))
            (rule "simplifyUpdate2" (formula "16"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "applyOnRigidFormula" (formula "12"))
            (rule "applyOnPV" (formula "12") (term "0"))
            (rule "simplifyUpdate1" (formula "12") (term "1"))
            (rule "ifthenelse_concrete3" (formula "12"))
            (rule "boolean_not_equal_2" (formula "12") (term "1"))
            (rule "concrete_or_4" (formula "12"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_23_in_VerifiedIdentityHashMap" (formula "11"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_17_in_VerifiedIdentityHashMap" (formula "12") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,2,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
            (rule "commute_and" (formula "12") (term "0,0"))
            (rule "commute_and" (formula "12") (term "0,0,1,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_2_in_VerifiedIdentityHashMap" (formula "13"))
            (rule "notLeft" (formula "13"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "1"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (rule "concrete_or_2" (formula "1"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_3_in_VerifiedIdentityHashMap" (formula "14"))
            (rule "insert_constant_value" (formula "14") (term "0,0,1"))
            (rule "insert_constant_value" (formula "14") (term "0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "mul_literals" (formula "14") (term "0,1,0"))
            (rule "andLeft" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "17"))
            (rule "concrete_or_2" (formula "9"))
            (rule "inEqSimp_commuteGeq" (formula "15"))
            (rule "inEqSimp_commuteLeq" (formula "14"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_5_in_VerifiedIdentityHashMap" (formula "16") (inst "i=i"))
            (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
            (rule "commute_and" (formula "16") (term "0,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_7_in_VerifiedIdentityHashMap" (formula "17") (inst "i=i") (inst "j=j"))
            (rule "eqSymm" (formula "17") (term "1,0,1,0,1,0"))
            (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,0,0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,1,1,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "0,2,0,1,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
            (rule "commute_and" (formula "17") (term "0,0"))
            (rule "commute_and" (formula "17") (term "0,0,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_9_in_VerifiedIdentityHashMap" (formula "18") (inst "i=i"))
            (rule "eqSymm" (formula "18"))
            (rule "polySimp_mulComm0" (formula "18") (term "0,2,0,0,0,2,0"))
            (rule "ifthenelse_negated" (formula "18") (term "2,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_11_in_VerifiedIdentityHashMap" (formula "19") (inst "i=i"))
            (rule "exLeft" (formula "19") (inst "sk=i_0"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "eqSymm" (formula "21"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_13_in_VerifiedIdentityHashMap" (formula "22"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_15_in_VerifiedIdentityHashMap" (formula "23") (inst "i=i"))
            (rule "exLeft" (formula "23") (inst "sk=i_1"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "23"))
            (rule "polySimp_mulComm0" (formula "25") (term "0,2,0"))
            (rule "inEqSimp_commuteLeq" (formula "23"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "2"))
            (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "26"))
            (rule "concrete_or_1" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_19_in_VerifiedIdentityHashMap" (formula "26") (inst "i=i") (inst "j=j"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,1,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "0,2,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,1,0,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "commute_and" (formula "26") (term "0,0"))
            (rule "commute_and" (formula "26") (term "1,0,0,1,1,0"))
            (rule "commute_and" (formula "26") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "0,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "1,0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "0,1,0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "1,1,0,0,1,1,0"))
            (rule "cnf_rightDist" (formula "26") (term "0,0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "commute_or" (formula "26") (term "1,0,0,0,1,1,0"))
            (rule "shift_paren_and" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_and_2" (formula "26") (term "0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "26") (term "0,0,1,1,0"))
            (rule "commute_and" (formula "26") (term "0,0,0,0,1,1,0"))
            (rule "commute_and_2" (formula "26") (term "0,0,0,1,1,0"))
            (rule "Partial_inv_axiom_for_JML_class_invariant_nr_21_in_VerifiedIdentityHashMap" (formula "27"))
            (rule "expand_inInt" (formula "12"))
            (rule "expand_inInt" (formula "5"))
            (rule "expand_inShort" (formula "8"))
            (rule "replace_int_MIN" (formula "12") (term "0,1"))
            (rule "replace_int_MAX" (formula "12") (term "1,0"))
            (rule "replace_int_MAX" (formula "5") (term "1,0"))
            (rule "replace_int_MIN" (formula "5") (term "0,1"))
            (rule "replace_short_MAX" (formula "8") (term "1,0"))
            (rule "replace_short_MIN" (formula "8") (term "0,1"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "9"))
            (rule "inEqSimp_ltRight" (formula "34"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "35"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "31") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "18") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_addComm1" (formula "18") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "25"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "25") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0,1,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "31") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0,0,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0,0,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "29"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "29") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "17"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "26"))
            (rule "applyEq" (formula "18") (term "1,0,1,0,1,0,1,0") (ifseqformula "26"))
            (rule "applyEq" (formula "26") (term "0") (ifseqformula "14"))
            (rule "eqSymm" (formula "26"))
            (rule "applyEq" (formula "38") (term "0,1,0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "14"))
            (rule "leq_literals" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "applyEq" (formula "19") (term "0") (ifseqformula "14"))
            (rule "qeq_literals" (formula "19"))
            (rule "true_left" (formula "19"))
            (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "14"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
            (rule "leq_literals" (formula "11"))
            (rule "closeFalse" (formula "11"))
         )
      )
   )
)
(branch "Null Reference (oldTable = null)"
   (rule "false_right" (formula "11"))
   (rule "expand_inInt" (formula "5"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "replace_int_MAX" (formula "5") (term "1,0"))
   (rule "replace_int_MIN" (formula "5") (term "0,1"))
   (rule "andLeft" (formula "5"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "6"))
   (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "1"))
   (rule "expand_subJint" (formula "9") (term "1"))
   (rule "sub_literals" (formula "9") (term "0,1"))
   (rule "expand_moduloInteger" (formula "9") (term "1"))
   (rule "replace_int_RANGE" (formula "9") (term "1,1,1"))
   (rule "replace_int_HALFRANGE" (formula "9") (term "0,0,1,1"))
   (rule "replace_int_MIN" (formula "9") (term "0,1"))
   (rule "add_literals" (formula "9") (term "0,1,1"))
   (rule "mod_axiom" (formula "9") (term "1,1"))
   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1"))
   (rule "div_literals" (formula "9") (term "0,1,1,1"))
   (rule "times_zero_2" (formula "9") (term "1,1,1"))
   (rule "add_zero_right" (formula "9") (term "1,1"))
   (rule "add_literals" (formula "9") (term "1"))
   (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "10") (inst "i=i") (inst "j=j") (inst "i_0=i_0") (inst "j_0=j_0") (inst "i_1=i_1") (inst "i_2=i_2") (inst "i_3=i_3") (inst "i_4=i_4") (inst "j_1=j_1") (inst "i_5=i_5") (ifseqformula "4"))
   (rule "insert_constant_value" (formula "10") (term "0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "insert_constant_value" (formula "10") (term "0,0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "expand_inInt" (formula "10") (term "1"))
   (rule "mul_literals" (formula "10") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "mul_literals" (formula "10") (term "0,1,0,1,0,0,0,0,0,0,0,0,0,0"))
   (rule "replace_int_MAX" (formula "10") (term "1,0,1"))
   (rule "replace_int_MIN" (formula "10") (term "0,1,1"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "close" (formula "23") (ifseqformula "1"))
)
)
}
