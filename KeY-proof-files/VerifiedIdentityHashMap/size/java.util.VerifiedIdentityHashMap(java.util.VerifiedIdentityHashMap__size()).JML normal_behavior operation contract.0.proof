\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Oct 31 12:08:51 CET 2021
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , javaLoopTreatment-javaLoopTreatment\\:efficient
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=7000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../jre";

\javaSource "../../../src";

\include "../../../functions.key";

\proofObligation "#Proof Obligation Settings
#Sun Oct 31 12:08:51 CET 2021
contract=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:size()].JML normal_behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.util.VerifiedIdentityHashMap\\:\\:size()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "40b2d39292"))

(autoModeTime "62")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "7") (term "0,0,1,0,1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_size,savedHeapBefore_size"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "returnUnfold" (formula "7") (term "1") (inst "#v0=x"))
(rule "variableDeclarationAssign" (formula "7") (term "1"))
(rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
(rule "assignment_read_attribute_this" (formula "7"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "methodCallReturn" (formula "7") (term "1"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "applyOnElementary" (formula "7") (term "1,0"))
(rule "applyOnPV" (formula "7") (term "0,1,0"))
(rule "methodCallEmpty" (formula "7") (term "1"))
(rule "tryEmpty" (formula "7") (term "1"))
(rule "emptyModality" (formula "7") (term "1"))
(rule "applyOnRigidFormula" (formula "7"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "simplifyUpdate2" (formula "7") (term "0"))
(rule "applyOnRigidFormula" (formula "7") (term "1"))
(rule "applyOnRigidFormula" (formula "7") (term "0"))
(rule "simplifyUpdate2" (formula "7") (term "1,0"))
(rule "simplifyUpdate2" (formula "7") (term "0,0"))
(rule "applyOnRigidFormula" (formula "7") (term "0,1"))
(rule "applyOnRigidFormula" (formula "7") (term "1,0"))
(rule "simplifyUpdate1" (formula "7") (term "1,1,0"))
(rule "applyOnPV" (formula "7") (term "0,1,0"))
(rule "eqClose" (formula "7") (term "1,0"))
(rule "concrete_and_3" (formula "7") (term "0"))
(rule "applyOnRigidFormula" (formula "7") (term "0,0,1"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,0,1"))
(rule "applyOnRigidFormula" (formula "7") (term "0"))
(rule "simplifyUpdate2" (formula "7") (term "1,0"))
(rule "replace_known_left" (formula "7") (term "1,0") (ifseqformula "5"))
(rule "concrete_and_3" (formula "7") (term "0"))
(rule "applyOnRigidTerm" (formula "7") (term "0,0,0,1"))
(rule "simplifyUpdate1" (formula "7") (term "2,0,0,0,1"))
(rule "simplifyUpdate1" (formula "7") (term "1,0,0,0,1"))
(rule "applyOnPV" (formula "7") (term "0,0,0,0,1"))
(rule "eqClose" (formula "7") (term "0,0,1"))
(rule "applyOnRigidFormula" (formula "7") (term "0"))
(rule "applyOnPV" (formula "7") (term "1,0"))
(rule "simplifyUpdate1" (formula "7") (term "0,0"))
(rule "eqClose" (formula "7") (term "0"))
(rule "concrete_and_1" (formula "7"))
(rule "allRight" (formula "7") (inst "sk=f_0"))
(rule "allRight" (formula "7") (inst "sk=o_0"))
(rule "closeTrue" (formula "7"))
)
}
